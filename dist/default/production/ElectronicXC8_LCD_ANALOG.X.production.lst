

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 02 22:58:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 17/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   004816                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _textsize
    99   004816  01                 	db	1
   100                           
   101                           	psect	idataBANK0
   102   004817                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _textbgcolor
   106   004817  FFFF               	dw	65535
   107                           
   108                           ;initializer for _textcolor
   109   004819  FFFF               	dw	65535
   110                           
   111                           ;initializer for _wrap
   112   00481B  01                 	db	1
   113                           
   114                           	psect	mediumconst
   115   0079BA                     __pmediumconst:
   116                           	callstack 0
   117   0079BA  00                 	db	0
   118   0079BB                     _font:
   119                           	callstack 0
   120   0079BB  00                 	db	0
   121   0079BC  00                 	db	0
   122   0079BD  00                 	db	0
   123   0079BE  00                 	db	0
   124   0079BF  00                 	db	0
   125   0079C0  3E                 	db	62
   126   0079C1  5B                 	db	91
   127   0079C2  4F                 	db	79
   128   0079C3  5B                 	db	91
   129   0079C4  3E                 	db	62
   130   0079C5  3E                 	db	62
   131   0079C6  6B                 	db	107
   132   0079C7  4F                 	db	79
   133   0079C8  6B                 	db	107
   134   0079C9  3E                 	db	62
   135   0079CA  1C                 	db	28
   136   0079CB  3E                 	db	62
   137   0079CC  7C                 	db	124
   138   0079CD  3E                 	db	62
   139   0079CE  1C                 	db	28
   140   0079CF  18                 	db	24
   141   0079D0  3C                 	db	60
   142   0079D1  7E                 	db	126
   143   0079D2  3C                 	db	60
   144   0079D3  18                 	db	24
   145   0079D4  1C                 	db	28
   146   0079D5  57                 	db	87
   147   0079D6  7D                 	db	125
   148   0079D7  57                 	db	87
   149   0079D8  1C                 	db	28
   150   0079D9  1C                 	db	28
   151   0079DA  5E                 	db	94
   152   0079DB  7F                 	db	127
   153   0079DC  5E                 	db	94
   154   0079DD  1C                 	db	28
   155   0079DE  00                 	db	0
   156   0079DF  18                 	db	24
   157   0079E0  3C                 	db	60
   158   0079E1  18                 	db	24
   159   0079E2  00                 	db	0
   160   0079E3  FF                 	db	255
   161   0079E4  E7                 	db	231
   162   0079E5  C3                 	db	195
   163   0079E6  E7                 	db	231
   164   0079E7  FF                 	db	255
   165   0079E8  00                 	db	0
   166   0079E9  18                 	db	24
   167   0079EA  24                 	db	36
   168   0079EB  18                 	db	24
   169   0079EC  00                 	db	0
   170   0079ED  FF                 	db	255
   171   0079EE  E7                 	db	231
   172   0079EF  DB                 	db	219
   173   0079F0  E7                 	db	231
   174   0079F1  FF                 	db	255
   175   0079F2  30                 	db	48
   176   0079F3  48                 	db	72
   177   0079F4  3A                 	db	58
   178   0079F5  06                 	db	6
   179   0079F6  0E                 	db	14
   180   0079F7  26                 	db	38
   181   0079F8  29                 	db	41
   182   0079F9  79                 	db	121
   183   0079FA  29                 	db	41
   184   0079FB  26                 	db	38
   185   0079FC  40                 	db	64
   186   0079FD  7F                 	db	127
   187   0079FE  05                 	db	5
   188   0079FF  05                 	db	5
   189   007A00  07                 	db	7
   190   007A01  40                 	db	64
   191   007A02  7F                 	db	127
   192   007A03  05                 	db	5
   193   007A04  25                 	db	37
   194   007A05  3F                 	db	63
   195   007A06  5A                 	db	90
   196   007A07  3C                 	db	60
   197   007A08  E7                 	db	231
   198   007A09  3C                 	db	60
   199   007A0A  5A                 	db	90
   200   007A0B  7F                 	db	127
   201   007A0C  3E                 	db	62
   202   007A0D  1C                 	db	28
   203   007A0E  1C                 	db	28
   204   007A0F  08                 	db	8
   205   007A10  08                 	db	8
   206   007A11  1C                 	db	28
   207   007A12  1C                 	db	28
   208   007A13  3E                 	db	62
   209   007A14  7F                 	db	127
   210   007A15  14                 	db	20
   211   007A16  22                 	db	34
   212   007A17  7F                 	db	127
   213   007A18  22                 	db	34
   214   007A19  14                 	db	20
   215   007A1A  5F                 	db	95
   216   007A1B  5F                 	db	95
   217   007A1C  00                 	db	0
   218   007A1D  5F                 	db	95
   219   007A1E  5F                 	db	95
   220   007A1F  06                 	db	6
   221   007A20  09                 	db	9
   222   007A21  7F                 	db	127
   223   007A22  01                 	db	1
   224   007A23  7F                 	db	127
   225   007A24  00                 	db	0
   226   007A25  66                 	db	102
   227   007A26  89                 	db	137
   228   007A27  95                 	db	149
   229   007A28  6A                 	db	106
   230   007A29  60                 	db	96
   231   007A2A  60                 	db	96
   232   007A2B  60                 	db	96
   233   007A2C  60                 	db	96
   234   007A2D  60                 	db	96
   235   007A2E  94                 	db	148
   236   007A2F  A2                 	db	162
   237   007A30  FF                 	db	255
   238   007A31  A2                 	db	162
   239   007A32  94                 	db	148
   240   007A33  08                 	db	8
   241   007A34  04                 	db	4
   242   007A35  7E                 	db	126
   243   007A36  04                 	db	4
   244   007A37  08                 	db	8
   245   007A38  10                 	db	16
   246   007A39  20                 	db	32
   247   007A3A  7E                 	db	126
   248   007A3B  20                 	db	32
   249   007A3C  10                 	db	16
   250   007A3D  08                 	db	8
   251   007A3E  08                 	db	8
   252   007A3F  2A                 	db	42
   253   007A40  1C                 	db	28
   254   007A41  08                 	db	8
   255   007A42  08                 	db	8
   256   007A43  1C                 	db	28
   257   007A44  2A                 	db	42
   258   007A45  08                 	db	8
   259   007A46  08                 	db	8
   260   007A47  1E                 	db	30
   261   007A48  10                 	db	16
   262   007A49  10                 	db	16
   263   007A4A  10                 	db	16
   264   007A4B  10                 	db	16
   265   007A4C  0C                 	db	12
   266   007A4D  1E                 	db	30
   267   007A4E  0C                 	db	12
   268   007A4F  1E                 	db	30
   269   007A50  0C                 	db	12
   270   007A51  30                 	db	48
   271   007A52  38                 	db	56
   272   007A53  3E                 	db	62
   273   007A54  38                 	db	56
   274   007A55  30                 	db	48
   275   007A56  06                 	db	6
   276   007A57  0E                 	db	14
   277   007A58  3E                 	db	62
   278   007A59  0E                 	db	14
   279   007A5A  06                 	db	6
   280   007A5B  00                 	db	0
   281   007A5C  00                 	db	0
   282   007A5D  00                 	db	0
   283   007A5E  00                 	db	0
   284   007A5F  00                 	db	0
   285   007A60  00                 	db	0
   286   007A61  00                 	db	0
   287   007A62  5F                 	db	95
   288   007A63  00                 	db	0
   289   007A64  00                 	db	0
   290   007A65  00                 	db	0
   291   007A66  07                 	db	7
   292   007A67  00                 	db	0
   293   007A68  07                 	db	7
   294   007A69  00                 	db	0
   295   007A6A  14                 	db	20
   296   007A6B  7F                 	db	127
   297   007A6C  14                 	db	20
   298   007A6D  7F                 	db	127
   299   007A6E  14                 	db	20
   300   007A6F  24                 	db	36
   301   007A70  2A                 	db	42
   302   007A71  7F                 	db	127
   303   007A72  2A                 	db	42
   304   007A73  12                 	db	18
   305   007A74  23                 	db	35
   306   007A75  13                 	db	19
   307   007A76  08                 	db	8
   308   007A77  64                 	db	100
   309   007A78  62                 	db	98
   310   007A79  36                 	db	54
   311   007A7A  49                 	db	73
   312   007A7B  56                 	db	86
   313   007A7C  20                 	db	32
   314   007A7D  50                 	db	80
   315   007A7E  00                 	db	0
   316   007A7F  08                 	db	8
   317   007A80  07                 	db	7
   318   007A81  03                 	db	3
   319   007A82  00                 	db	0
   320   007A83  00                 	db	0
   321   007A84  1C                 	db	28
   322   007A85  22                 	db	34
   323   007A86  41                 	db	65
   324   007A87  00                 	db	0
   325   007A88  00                 	db	0
   326   007A89  41                 	db	65
   327   007A8A  22                 	db	34
   328   007A8B  1C                 	db	28
   329   007A8C  00                 	db	0
   330   007A8D  2A                 	db	42
   331   007A8E  1C                 	db	28
   332   007A8F  7F                 	db	127
   333   007A90  1C                 	db	28
   334   007A91  2A                 	db	42
   335   007A92  08                 	db	8
   336   007A93  08                 	db	8
   337   007A94  3E                 	db	62
   338   007A95  08                 	db	8
   339   007A96  08                 	db	8
   340   007A97  00                 	db	0
   341   007A98  80                 	db	128
   342   007A99  70                 	db	112
   343   007A9A  30                 	db	48
   344   007A9B  00                 	db	0
   345   007A9C  08                 	db	8
   346   007A9D  08                 	db	8
   347   007A9E  08                 	db	8
   348   007A9F  08                 	db	8
   349   007AA0  08                 	db	8
   350   007AA1  00                 	db	0
   351   007AA2  00                 	db	0
   352   007AA3  60                 	db	96
   353   007AA4  60                 	db	96
   354   007AA5  00                 	db	0
   355   007AA6  20                 	db	32
   356   007AA7  10                 	db	16
   357   007AA8  08                 	db	8
   358   007AA9  04                 	db	4
   359   007AAA  02                 	db	2
   360   007AAB  3E                 	db	62
   361   007AAC  51                 	db	81
   362   007AAD  49                 	db	73
   363   007AAE  45                 	db	69
   364   007AAF  3E                 	db	62
   365   007AB0  00                 	db	0
   366   007AB1  42                 	db	66
   367   007AB2  7F                 	db	127
   368   007AB3  40                 	db	64
   369   007AB4  00                 	db	0
   370   007AB5  72                 	db	114
   371   007AB6  49                 	db	73
   372   007AB7  49                 	db	73
   373   007AB8  49                 	db	73
   374   007AB9  46                 	db	70
   375   007ABA  21                 	db	33
   376   007ABB  41                 	db	65
   377   007ABC  49                 	db	73
   378   007ABD  4D                 	db	77
   379   007ABE  33                 	db	51
   380   007ABF  18                 	db	24
   381   007AC0  14                 	db	20
   382   007AC1  12                 	db	18
   383   007AC2  7F                 	db	127
   384   007AC3  10                 	db	16
   385   007AC4  27                 	db	39
   386   007AC5  45                 	db	69
   387   007AC6  45                 	db	69
   388   007AC7  45                 	db	69
   389   007AC8  39                 	db	57
   390   007AC9  3C                 	db	60
   391   007ACA  4A                 	db	74
   392   007ACB  49                 	db	73
   393   007ACC  49                 	db	73
   394   007ACD  31                 	db	49
   395   007ACE  41                 	db	65
   396   007ACF  21                 	db	33
   397   007AD0  11                 	db	17
   398   007AD1  09                 	db	9
   399   007AD2  07                 	db	7
   400   007AD3  36                 	db	54
   401   007AD4  49                 	db	73
   402   007AD5  49                 	db	73
   403   007AD6  49                 	db	73
   404   007AD7  36                 	db	54
   405   007AD8  46                 	db	70
   406   007AD9  49                 	db	73
   407   007ADA  49                 	db	73
   408   007ADB  29                 	db	41
   409   007ADC  1E                 	db	30
   410   007ADD  00                 	db	0
   411   007ADE  00                 	db	0
   412   007ADF  14                 	db	20
   413   007AE0  00                 	db	0
   414   007AE1  00                 	db	0
   415   007AE2  00                 	db	0
   416   007AE3  40                 	db	64
   417   007AE4  34                 	db	52
   418   007AE5  00                 	db	0
   419   007AE6  00                 	db	0
   420   007AE7  00                 	db	0
   421   007AE8  08                 	db	8
   422   007AE9  14                 	db	20
   423   007AEA  22                 	db	34
   424   007AEB  41                 	db	65
   425   007AEC  14                 	db	20
   426   007AED  14                 	db	20
   427   007AEE  14                 	db	20
   428   007AEF  14                 	db	20
   429   007AF0  14                 	db	20
   430   007AF1  00                 	db	0
   431   007AF2  41                 	db	65
   432   007AF3  22                 	db	34
   433   007AF4  14                 	db	20
   434   007AF5  08                 	db	8
   435   007AF6  02                 	db	2
   436   007AF7  01                 	db	1
   437   007AF8  59                 	db	89
   438   007AF9  09                 	db	9
   439   007AFA  06                 	db	6
   440   007AFB  3E                 	db	62
   441   007AFC  41                 	db	65
   442   007AFD  5D                 	db	93
   443   007AFE  59                 	db	89
   444   007AFF  4E                 	db	78
   445   007B00  7C                 	db	124
   446   007B01  12                 	db	18
   447   007B02  11                 	db	17
   448   007B03  12                 	db	18
   449   007B04  7C                 	db	124
   450   007B05  7F                 	db	127
   451   007B06  49                 	db	73
   452   007B07  49                 	db	73
   453   007B08  49                 	db	73
   454   007B09  36                 	db	54
   455   007B0A  3E                 	db	62
   456   007B0B  41                 	db	65
   457   007B0C  41                 	db	65
   458   007B0D  41                 	db	65
   459   007B0E  22                 	db	34
   460   007B0F  7F                 	db	127
   461   007B10  41                 	db	65
   462   007B11  41                 	db	65
   463   007B12  41                 	db	65
   464   007B13  3E                 	db	62
   465   007B14  7F                 	db	127
   466   007B15  49                 	db	73
   467   007B16  49                 	db	73
   468   007B17  49                 	db	73
   469   007B18  41                 	db	65
   470   007B19  7F                 	db	127
   471   007B1A  09                 	db	9
   472   007B1B  09                 	db	9
   473   007B1C  09                 	db	9
   474   007B1D  01                 	db	1
   475   007B1E  3E                 	db	62
   476   007B1F  41                 	db	65
   477   007B20  41                 	db	65
   478   007B21  51                 	db	81
   479   007B22  73                 	db	115
   480   007B23  7F                 	db	127
   481   007B24  08                 	db	8
   482   007B25  08                 	db	8
   483   007B26  08                 	db	8
   484   007B27  7F                 	db	127
   485   007B28  00                 	db	0
   486   007B29  41                 	db	65
   487   007B2A  7F                 	db	127
   488   007B2B  41                 	db	65
   489   007B2C  00                 	db	0
   490   007B2D  20                 	db	32
   491   007B2E  40                 	db	64
   492   007B2F  41                 	db	65
   493   007B30  3F                 	db	63
   494   007B31  01                 	db	1
   495   007B32  7F                 	db	127
   496   007B33  08                 	db	8
   497   007B34  14                 	db	20
   498   007B35  22                 	db	34
   499   007B36  41                 	db	65
   500   007B37  7F                 	db	127
   501   007B38  40                 	db	64
   502   007B39  40                 	db	64
   503   007B3A  40                 	db	64
   504   007B3B  40                 	db	64
   505   007B3C  7F                 	db	127
   506   007B3D  02                 	db	2
   507   007B3E  1C                 	db	28
   508   007B3F  02                 	db	2
   509   007B40  7F                 	db	127
   510   007B41  7F                 	db	127
   511   007B42  04                 	db	4
   512   007B43  08                 	db	8
   513   007B44  10                 	db	16
   514   007B45  7F                 	db	127
   515   007B46  3E                 	db	62
   516   007B47  41                 	db	65
   517   007B48  41                 	db	65
   518   007B49  41                 	db	65
   519   007B4A  3E                 	db	62
   520   007B4B  7F                 	db	127
   521   007B4C  09                 	db	9
   522   007B4D  09                 	db	9
   523   007B4E  09                 	db	9
   524   007B4F  06                 	db	6
   525   007B50  3E                 	db	62
   526   007B51  41                 	db	65
   527   007B52  51                 	db	81
   528   007B53  21                 	db	33
   529   007B54  5E                 	db	94
   530   007B55  7F                 	db	127
   531   007B56  09                 	db	9
   532   007B57  19                 	db	25
   533   007B58  29                 	db	41
   534   007B59  46                 	db	70
   535   007B5A  26                 	db	38
   536   007B5B  49                 	db	73
   537   007B5C  49                 	db	73
   538   007B5D  49                 	db	73
   539   007B5E  32                 	db	50
   540   007B5F  03                 	db	3
   541   007B60  01                 	db	1
   542   007B61  7F                 	db	127
   543   007B62  01                 	db	1
   544   007B63  03                 	db	3
   545   007B64  3F                 	db	63
   546   007B65  40                 	db	64
   547   007B66  40                 	db	64
   548   007B67  40                 	db	64
   549   007B68  3F                 	db	63
   550   007B69  1F                 	db	31
   551   007B6A  20                 	db	32
   552   007B6B  40                 	db	64
   553   007B6C  20                 	db	32
   554   007B6D  1F                 	db	31
   555   007B6E  3F                 	db	63
   556   007B6F  40                 	db	64
   557   007B70  38                 	db	56
   558   007B71  40                 	db	64
   559   007B72  3F                 	db	63
   560   007B73  63                 	db	99
   561   007B74  14                 	db	20
   562   007B75  08                 	db	8
   563   007B76  14                 	db	20
   564   007B77  63                 	db	99
   565   007B78  03                 	db	3
   566   007B79  04                 	db	4
   567   007B7A  78                 	db	120
   568   007B7B  04                 	db	4
   569   007B7C  03                 	db	3
   570   007B7D  61                 	db	97
   571   007B7E  59                 	db	89
   572   007B7F  49                 	db	73
   573   007B80  4D                 	db	77
   574   007B81  43                 	db	67
   575   007B82  00                 	db	0
   576   007B83  7F                 	db	127
   577   007B84  41                 	db	65
   578   007B85  41                 	db	65
   579   007B86  41                 	db	65
   580   007B87  02                 	db	2
   581   007B88  04                 	db	4
   582   007B89  08                 	db	8
   583   007B8A  10                 	db	16
   584   007B8B  20                 	db	32
   585   007B8C  00                 	db	0
   586   007B8D  41                 	db	65
   587   007B8E  41                 	db	65
   588   007B8F  41                 	db	65
   589   007B90  7F                 	db	127
   590   007B91  04                 	db	4
   591   007B92  02                 	db	2
   592   007B93  01                 	db	1
   593   007B94  02                 	db	2
   594   007B95  04                 	db	4
   595   007B96  40                 	db	64
   596   007B97  40                 	db	64
   597   007B98  40                 	db	64
   598   007B99  40                 	db	64
   599   007B9A  40                 	db	64
   600   007B9B  00                 	db	0
   601   007B9C  03                 	db	3
   602   007B9D  07                 	db	7
   603   007B9E  08                 	db	8
   604   007B9F  00                 	db	0
   605   007BA0  20                 	db	32
   606   007BA1  54                 	db	84
   607   007BA2  54                 	db	84
   608   007BA3  78                 	db	120
   609   007BA4  40                 	db	64
   610   007BA5  7F                 	db	127
   611   007BA6  28                 	db	40
   612   007BA7  44                 	db	68
   613   007BA8  44                 	db	68
   614   007BA9  38                 	db	56
   615   007BAA  38                 	db	56
   616   007BAB  44                 	db	68
   617   007BAC  44                 	db	68
   618   007BAD  44                 	db	68
   619   007BAE  28                 	db	40
   620   007BAF  38                 	db	56
   621   007BB0  44                 	db	68
   622   007BB1  44                 	db	68
   623   007BB2  28                 	db	40
   624   007BB3  7F                 	db	127
   625   007BB4  38                 	db	56
   626   007BB5  54                 	db	84
   627   007BB6  54                 	db	84
   628   007BB7  54                 	db	84
   629   007BB8  18                 	db	24
   630   007BB9  00                 	db	0
   631   007BBA  08                 	db	8
   632   007BBB  7E                 	db	126
   633   007BBC  09                 	db	9
   634   007BBD  02                 	db	2
   635   007BBE  18                 	db	24
   636   007BBF  A4                 	db	164
   637   007BC0  A4                 	db	164
   638   007BC1  9C                 	db	156
   639   007BC2  78                 	db	120
   640   007BC3  7F                 	db	127
   641   007BC4  08                 	db	8
   642   007BC5  04                 	db	4
   643   007BC6  04                 	db	4
   644   007BC7  78                 	db	120
   645   007BC8  00                 	db	0
   646   007BC9  44                 	db	68
   647   007BCA  7D                 	db	125
   648   007BCB  40                 	db	64
   649   007BCC  00                 	db	0
   650   007BCD  20                 	db	32
   651   007BCE  40                 	db	64
   652   007BCF  40                 	db	64
   653   007BD0  3D                 	db	61
   654   007BD1  00                 	db	0
   655   007BD2  7F                 	db	127
   656   007BD3  10                 	db	16
   657   007BD4  28                 	db	40
   658   007BD5  44                 	db	68
   659   007BD6  00                 	db	0
   660   007BD7  00                 	db	0
   661   007BD8  41                 	db	65
   662   007BD9  7F                 	db	127
   663   007BDA  40                 	db	64
   664   007BDB  00                 	db	0
   665   007BDC  7C                 	db	124
   666   007BDD  04                 	db	4
   667   007BDE  78                 	db	120
   668   007BDF  04                 	db	4
   669   007BE0  78                 	db	120
   670   007BE1  7C                 	db	124
   671   007BE2  08                 	db	8
   672   007BE3  04                 	db	4
   673   007BE4  04                 	db	4
   674   007BE5  78                 	db	120
   675   007BE6  38                 	db	56
   676   007BE7  44                 	db	68
   677   007BE8  44                 	db	68
   678   007BE9  44                 	db	68
   679   007BEA  38                 	db	56
   680   007BEB  FC                 	db	252
   681   007BEC  18                 	db	24
   682   007BED  24                 	db	36
   683   007BEE  24                 	db	36
   684   007BEF  18                 	db	24
   685   007BF0  18                 	db	24
   686   007BF1  24                 	db	36
   687   007BF2  24                 	db	36
   688   007BF3  18                 	db	24
   689   007BF4  FC                 	db	252
   690   007BF5  7C                 	db	124
   691   007BF6  08                 	db	8
   692   007BF7  04                 	db	4
   693   007BF8  04                 	db	4
   694   007BF9  08                 	db	8
   695   007BFA  48                 	db	72
   696   007BFB  54                 	db	84
   697   007BFC  54                 	db	84
   698   007BFD  54                 	db	84
   699   007BFE  24                 	db	36
   700   007BFF  04                 	db	4
   701   007C00  04                 	db	4
   702   007C01  3F                 	db	63
   703   007C02  44                 	db	68
   704   007C03  24                 	db	36
   705   007C04  3C                 	db	60
   706   007C05  40                 	db	64
   707   007C06  40                 	db	64
   708   007C07  20                 	db	32
   709   007C08  7C                 	db	124
   710   007C09  1C                 	db	28
   711   007C0A  20                 	db	32
   712   007C0B  40                 	db	64
   713   007C0C  20                 	db	32
   714   007C0D  1C                 	db	28
   715   007C0E  3C                 	db	60
   716   007C0F  40                 	db	64
   717   007C10  30                 	db	48
   718   007C11  40                 	db	64
   719   007C12  3C                 	db	60
   720   007C13  44                 	db	68
   721   007C14  28                 	db	40
   722   007C15  10                 	db	16
   723   007C16  28                 	db	40
   724   007C17  44                 	db	68
   725   007C18  4C                 	db	76
   726   007C19  90                 	db	144
   727   007C1A  90                 	db	144
   728   007C1B  90                 	db	144
   729   007C1C  7C                 	db	124
   730   007C1D  44                 	db	68
   731   007C1E  64                 	db	100
   732   007C1F  54                 	db	84
   733   007C20  4C                 	db	76
   734   007C21  44                 	db	68
   735   007C22  00                 	db	0
   736   007C23  08                 	db	8
   737   007C24  36                 	db	54
   738   007C25  41                 	db	65
   739   007C26  00                 	db	0
   740   007C27  00                 	db	0
   741   007C28  00                 	db	0
   742   007C29  77                 	db	119
   743   007C2A  00                 	db	0
   744   007C2B  00                 	db	0
   745   007C2C  00                 	db	0
   746   007C2D  41                 	db	65
   747   007C2E  36                 	db	54
   748   007C2F  08                 	db	8
   749   007C30  00                 	db	0
   750   007C31  02                 	db	2
   751   007C32  01                 	db	1
   752   007C33  02                 	db	2
   753   007C34  04                 	db	4
   754   007C35  02                 	db	2
   755   007C36  3C                 	db	60
   756   007C37  26                 	db	38
   757   007C38  23                 	db	35
   758   007C39  26                 	db	38
   759   007C3A  3C                 	db	60
   760   007C3B  1E                 	db	30
   761   007C3C  A1                 	db	161
   762   007C3D  A1                 	db	161
   763   007C3E  61                 	db	97
   764   007C3F  12                 	db	18
   765   007C40  3A                 	db	58
   766   007C41  40                 	db	64
   767   007C42  40                 	db	64
   768   007C43  20                 	db	32
   769   007C44  7A                 	db	122
   770   007C45  38                 	db	56
   771   007C46  54                 	db	84
   772   007C47  54                 	db	84
   773   007C48  55                 	db	85
   774   007C49  59                 	db	89
   775   007C4A  21                 	db	33
   776   007C4B  55                 	db	85
   777   007C4C  55                 	db	85
   778   007C4D  79                 	db	121
   779   007C4E  41                 	db	65
   780   007C4F  22                 	db	34
   781   007C50  54                 	db	84
   782   007C51  54                 	db	84
   783   007C52  78                 	db	120
   784   007C53  42                 	db	66
   785   007C54  21                 	db	33
   786   007C55  55                 	db	85
   787   007C56  54                 	db	84
   788   007C57  78                 	db	120
   789   007C58  40                 	db	64
   790   007C59  20                 	db	32
   791   007C5A  54                 	db	84
   792   007C5B  55                 	db	85
   793   007C5C  79                 	db	121
   794   007C5D  40                 	db	64
   795   007C5E  0C                 	db	12
   796   007C5F  1E                 	db	30
   797   007C60  52                 	db	82
   798   007C61  72                 	db	114
   799   007C62  12                 	db	18
   800   007C63  39                 	db	57
   801   007C64  55                 	db	85
   802   007C65  55                 	db	85
   803   007C66  55                 	db	85
   804   007C67  59                 	db	89
   805   007C68  39                 	db	57
   806   007C69  54                 	db	84
   807   007C6A  54                 	db	84
   808   007C6B  54                 	db	84
   809   007C6C  59                 	db	89
   810   007C6D  39                 	db	57
   811   007C6E  55                 	db	85
   812   007C6F  54                 	db	84
   813   007C70  54                 	db	84
   814   007C71  58                 	db	88
   815   007C72  00                 	db	0
   816   007C73  00                 	db	0
   817   007C74  45                 	db	69
   818   007C75  7C                 	db	124
   819   007C76  41                 	db	65
   820   007C77  00                 	db	0
   821   007C78  02                 	db	2
   822   007C79  45                 	db	69
   823   007C7A  7D                 	db	125
   824   007C7B  42                 	db	66
   825   007C7C  00                 	db	0
   826   007C7D  01                 	db	1
   827   007C7E  45                 	db	69
   828   007C7F  7C                 	db	124
   829   007C80  40                 	db	64
   830   007C81  7D                 	db	125
   831   007C82  12                 	db	18
   832   007C83  11                 	db	17
   833   007C84  12                 	db	18
   834   007C85  7D                 	db	125
   835   007C86  F0                 	db	240
   836   007C87  28                 	db	40
   837   007C88  25                 	db	37
   838   007C89  28                 	db	40
   839   007C8A  F0                 	db	240
   840   007C8B  7C                 	db	124
   841   007C8C  54                 	db	84
   842   007C8D  55                 	db	85
   843   007C8E  45                 	db	69
   844   007C8F  00                 	db	0
   845   007C90  20                 	db	32
   846   007C91  54                 	db	84
   847   007C92  54                 	db	84
   848   007C93  7C                 	db	124
   849   007C94  54                 	db	84
   850   007C95  7C                 	db	124
   851   007C96  0A                 	db	10
   852   007C97  09                 	db	9
   853   007C98  7F                 	db	127
   854   007C99  49                 	db	73
   855   007C9A  32                 	db	50
   856   007C9B  49                 	db	73
   857   007C9C  49                 	db	73
   858   007C9D  49                 	db	73
   859   007C9E  32                 	db	50
   860   007C9F  3A                 	db	58
   861   007CA0  44                 	db	68
   862   007CA1  44                 	db	68
   863   007CA2  44                 	db	68
   864   007CA3  3A                 	db	58
   865   007CA4  32                 	db	50
   866   007CA5  4A                 	db	74
   867   007CA6  48                 	db	72
   868   007CA7  48                 	db	72
   869   007CA8  30                 	db	48
   870   007CA9  3A                 	db	58
   871   007CAA  41                 	db	65
   872   007CAB  41                 	db	65
   873   007CAC  21                 	db	33
   874   007CAD  7A                 	db	122
   875   007CAE  3A                 	db	58
   876   007CAF  42                 	db	66
   877   007CB0  40                 	db	64
   878   007CB1  20                 	db	32
   879   007CB2  78                 	db	120
   880   007CB3  00                 	db	0
   881   007CB4  9D                 	db	157
   882   007CB5  A0                 	db	160
   883   007CB6  A0                 	db	160
   884   007CB7  7D                 	db	125
   885   007CB8  3D                 	db	61
   886   007CB9  42                 	db	66
   887   007CBA  42                 	db	66
   888   007CBB  42                 	db	66
   889   007CBC  3D                 	db	61
   890   007CBD  3D                 	db	61
   891   007CBE  40                 	db	64
   892   007CBF  40                 	db	64
   893   007CC0  40                 	db	64
   894   007CC1  3D                 	db	61
   895   007CC2  3C                 	db	60
   896   007CC3  24                 	db	36
   897   007CC4  FF                 	db	255
   898   007CC5  24                 	db	36
   899   007CC6  24                 	db	36
   900   007CC7  48                 	db	72
   901   007CC8  7E                 	db	126
   902   007CC9  49                 	db	73
   903   007CCA  43                 	db	67
   904   007CCB  66                 	db	102
   905   007CCC  2B                 	db	43
   906   007CCD  2F                 	db	47
   907   007CCE  FC                 	db	252
   908   007CCF  2F                 	db	47
   909   007CD0  2B                 	db	43
   910   007CD1  FF                 	db	255
   911   007CD2  09                 	db	9
   912   007CD3  29                 	db	41
   913   007CD4  F6                 	db	246
   914   007CD5  20                 	db	32
   915   007CD6  C0                 	db	192
   916   007CD7  88                 	db	136
   917   007CD8  7E                 	db	126
   918   007CD9  09                 	db	9
   919   007CDA  03                 	db	3
   920   007CDB  20                 	db	32
   921   007CDC  54                 	db	84
   922   007CDD  54                 	db	84
   923   007CDE  79                 	db	121
   924   007CDF  41                 	db	65
   925   007CE0  00                 	db	0
   926   007CE1  00                 	db	0
   927   007CE2  44                 	db	68
   928   007CE3  7D                 	db	125
   929   007CE4  41                 	db	65
   930   007CE5  30                 	db	48
   931   007CE6  48                 	db	72
   932   007CE7  48                 	db	72
   933   007CE8  4A                 	db	74
   934   007CE9  32                 	db	50
   935   007CEA  38                 	db	56
   936   007CEB  40                 	db	64
   937   007CEC  40                 	db	64
   938   007CED  22                 	db	34
   939   007CEE  7A                 	db	122
   940   007CEF  00                 	db	0
   941   007CF0  7A                 	db	122
   942   007CF1  0A                 	db	10
   943   007CF2  0A                 	db	10
   944   007CF3  72                 	db	114
   945   007CF4  7D                 	db	125
   946   007CF5  0D                 	db	13
   947   007CF6  19                 	db	25
   948   007CF7  31                 	db	49
   949   007CF8  7D                 	db	125
   950   007CF9  26                 	db	38
   951   007CFA  29                 	db	41
   952   007CFB  29                 	db	41
   953   007CFC  2F                 	db	47
   954   007CFD  28                 	db	40
   955   007CFE  26                 	db	38
   956   007CFF  29                 	db	41
   957   007D00  29                 	db	41
   958   007D01  29                 	db	41
   959   007D02  26                 	db	38
   960   007D03  30                 	db	48
   961   007D04  48                 	db	72
   962   007D05  4D                 	db	77
   963   007D06  40                 	db	64
   964   007D07  20                 	db	32
   965   007D08  38                 	db	56
   966   007D09  08                 	db	8
   967   007D0A  08                 	db	8
   968   007D0B  08                 	db	8
   969   007D0C  08                 	db	8
   970   007D0D  08                 	db	8
   971   007D0E  08                 	db	8
   972   007D0F  08                 	db	8
   973   007D10  08                 	db	8
   974   007D11  38                 	db	56
   975   007D12  2F                 	db	47
   976   007D13  10                 	db	16
   977   007D14  C8                 	db	200
   978   007D15  AC                 	db	172
   979   007D16  BA                 	db	186
   980   007D17  2F                 	db	47
   981   007D18  10                 	db	16
   982   007D19  28                 	db	40
   983   007D1A  34                 	db	52
   984   007D1B  FA                 	db	250
   985   007D1C  00                 	db	0
   986   007D1D  00                 	db	0
   987   007D1E  7B                 	db	123
   988   007D1F  00                 	db	0
   989   007D20  00                 	db	0
   990   007D21  08                 	db	8
   991   007D22  14                 	db	20
   992   007D23  2A                 	db	42
   993   007D24  14                 	db	20
   994   007D25  22                 	db	34
   995   007D26  22                 	db	34
   996   007D27  14                 	db	20
   997   007D28  2A                 	db	42
   998   007D29  14                 	db	20
   999   007D2A  08                 	db	8
  1000   007D2B  55                 	db	85
  1001   007D2C  00                 	db	0
  1002   007D2D  55                 	db	85
  1003   007D2E  00                 	db	0
  1004   007D2F  55                 	db	85
  1005   007D30  AA                 	db	170
  1006   007D31  55                 	db	85
  1007   007D32  AA                 	db	170
  1008   007D33  55                 	db	85
  1009   007D34  AA                 	db	170
  1010   007D35  FF                 	db	255
  1011   007D36  55                 	db	85
  1012   007D37  FF                 	db	255
  1013   007D38  55                 	db	85
  1014   007D39  FF                 	db	255
  1015   007D3A  00                 	db	0
  1016   007D3B  00                 	db	0
  1017   007D3C  00                 	db	0
  1018   007D3D  FF                 	db	255
  1019   007D3E  00                 	db	0
  1020   007D3F  10                 	db	16
  1021   007D40  10                 	db	16
  1022   007D41  10                 	db	16
  1023   007D42  FF                 	db	255
  1024   007D43  00                 	db	0
  1025   007D44  14                 	db	20
  1026   007D45  14                 	db	20
  1027   007D46  14                 	db	20
  1028   007D47  FF                 	db	255
  1029   007D48  00                 	db	0
  1030   007D49  10                 	db	16
  1031   007D4A  10                 	db	16
  1032   007D4B  FF                 	db	255
  1033   007D4C  00                 	db	0
  1034   007D4D  FF                 	db	255
  1035   007D4E  10                 	db	16
  1036   007D4F  10                 	db	16
  1037   007D50  F0                 	db	240
  1038   007D51  10                 	db	16
  1039   007D52  F0                 	db	240
  1040   007D53  14                 	db	20
  1041   007D54  14                 	db	20
  1042   007D55  14                 	db	20
  1043   007D56  FC                 	db	252
  1044   007D57  00                 	db	0
  1045   007D58  14                 	db	20
  1046   007D59  14                 	db	20
  1047   007D5A  F7                 	db	247
  1048   007D5B  00                 	db	0
  1049   007D5C  FF                 	db	255
  1050   007D5D  00                 	db	0
  1051   007D5E  00                 	db	0
  1052   007D5F  FF                 	db	255
  1053   007D60  00                 	db	0
  1054   007D61  FF                 	db	255
  1055   007D62  14                 	db	20
  1056   007D63  14                 	db	20
  1057   007D64  F4                 	db	244
  1058   007D65  04                 	db	4
  1059   007D66  FC                 	db	252
  1060   007D67  14                 	db	20
  1061   007D68  14                 	db	20
  1062   007D69  17                 	db	23
  1063   007D6A  10                 	db	16
  1064   007D6B  1F                 	db	31
  1065   007D6C  10                 	db	16
  1066   007D6D  10                 	db	16
  1067   007D6E  1F                 	db	31
  1068   007D6F  10                 	db	16
  1069   007D70  1F                 	db	31
  1070   007D71  14                 	db	20
  1071   007D72  14                 	db	20
  1072   007D73  14                 	db	20
  1073   007D74  1F                 	db	31
  1074   007D75  00                 	db	0
  1075   007D76  10                 	db	16
  1076   007D77  10                 	db	16
  1077   007D78  10                 	db	16
  1078   007D79  F0                 	db	240
  1079   007D7A  00                 	db	0
  1080   007D7B  00                 	db	0
  1081   007D7C  00                 	db	0
  1082   007D7D  00                 	db	0
  1083   007D7E  1F                 	db	31
  1084   007D7F  10                 	db	16
  1085   007D80  10                 	db	16
  1086   007D81  10                 	db	16
  1087   007D82  10                 	db	16
  1088   007D83  1F                 	db	31
  1089   007D84  10                 	db	16
  1090   007D85  10                 	db	16
  1091   007D86  10                 	db	16
  1092   007D87  10                 	db	16
  1093   007D88  F0                 	db	240
  1094   007D89  10                 	db	16
  1095   007D8A  00                 	db	0
  1096   007D8B  00                 	db	0
  1097   007D8C  00                 	db	0
  1098   007D8D  FF                 	db	255
  1099   007D8E  10                 	db	16
  1100   007D8F  10                 	db	16
  1101   007D90  10                 	db	16
  1102   007D91  10                 	db	16
  1103   007D92  10                 	db	16
  1104   007D93  10                 	db	16
  1105   007D94  10                 	db	16
  1106   007D95  10                 	db	16
  1107   007D96  10                 	db	16
  1108   007D97  FF                 	db	255
  1109   007D98  10                 	db	16
  1110   007D99  00                 	db	0
  1111   007D9A  00                 	db	0
  1112   007D9B  00                 	db	0
  1113   007D9C  FF                 	db	255
  1114   007D9D  14                 	db	20
  1115   007D9E  00                 	db	0
  1116   007D9F  00                 	db	0
  1117   007DA0  FF                 	db	255
  1118   007DA1  00                 	db	0
  1119   007DA2  FF                 	db	255
  1120   007DA3  00                 	db	0
  1121   007DA4  00                 	db	0
  1122   007DA5  1F                 	db	31
  1123   007DA6  10                 	db	16
  1124   007DA7  17                 	db	23
  1125   007DA8  00                 	db	0
  1126   007DA9  00                 	db	0
  1127   007DAA  FC                 	db	252
  1128   007DAB  04                 	db	4
  1129   007DAC  F4                 	db	244
  1130   007DAD  14                 	db	20
  1131   007DAE  14                 	db	20
  1132   007DAF  17                 	db	23
  1133   007DB0  10                 	db	16
  1134   007DB1  17                 	db	23
  1135   007DB2  14                 	db	20
  1136   007DB3  14                 	db	20
  1137   007DB4  F4                 	db	244
  1138   007DB5  04                 	db	4
  1139   007DB6  F4                 	db	244
  1140   007DB7  00                 	db	0
  1141   007DB8  00                 	db	0
  1142   007DB9  FF                 	db	255
  1143   007DBA  00                 	db	0
  1144   007DBB  F7                 	db	247
  1145   007DBC  14                 	db	20
  1146   007DBD  14                 	db	20
  1147   007DBE  14                 	db	20
  1148   007DBF  14                 	db	20
  1149   007DC0  14                 	db	20
  1150   007DC1  14                 	db	20
  1151   007DC2  14                 	db	20
  1152   007DC3  F7                 	db	247
  1153   007DC4  00                 	db	0
  1154   007DC5  F7                 	db	247
  1155   007DC6  14                 	db	20
  1156   007DC7  14                 	db	20
  1157   007DC8  14                 	db	20
  1158   007DC9  17                 	db	23
  1159   007DCA  14                 	db	20
  1160   007DCB  10                 	db	16
  1161   007DCC  10                 	db	16
  1162   007DCD  1F                 	db	31
  1163   007DCE  10                 	db	16
  1164   007DCF  1F                 	db	31
  1165   007DD0  14                 	db	20
  1166   007DD1  14                 	db	20
  1167   007DD2  14                 	db	20
  1168   007DD3  F4                 	db	244
  1169   007DD4  14                 	db	20
  1170   007DD5  10                 	db	16
  1171   007DD6  10                 	db	16
  1172   007DD7  F0                 	db	240
  1173   007DD8  10                 	db	16
  1174   007DD9  F0                 	db	240
  1175   007DDA  00                 	db	0
  1176   007DDB  00                 	db	0
  1177   007DDC  1F                 	db	31
  1178   007DDD  10                 	db	16
  1179   007DDE  1F                 	db	31
  1180   007DDF  00                 	db	0
  1181   007DE0  00                 	db	0
  1182   007DE1  00                 	db	0
  1183   007DE2  1F                 	db	31
  1184   007DE3  14                 	db	20
  1185   007DE4  00                 	db	0
  1186   007DE5  00                 	db	0
  1187   007DE6  00                 	db	0
  1188   007DE7  FC                 	db	252
  1189   007DE8  14                 	db	20
  1190   007DE9  00                 	db	0
  1191   007DEA  00                 	db	0
  1192   007DEB  F0                 	db	240
  1193   007DEC  10                 	db	16
  1194   007DED  F0                 	db	240
  1195   007DEE  10                 	db	16
  1196   007DEF  10                 	db	16
  1197   007DF0  FF                 	db	255
  1198   007DF1  10                 	db	16
  1199   007DF2  FF                 	db	255
  1200   007DF3  14                 	db	20
  1201   007DF4  14                 	db	20
  1202   007DF5  14                 	db	20
  1203   007DF6  FF                 	db	255
  1204   007DF7  14                 	db	20
  1205   007DF8  10                 	db	16
  1206   007DF9  10                 	db	16
  1207   007DFA  10                 	db	16
  1208   007DFB  1F                 	db	31
  1209   007DFC  00                 	db	0
  1210   007DFD  00                 	db	0
  1211   007DFE  00                 	db	0
  1212   007DFF  00                 	db	0
  1213   007E00  F0                 	db	240
  1214   007E01  10                 	db	16
  1215   007E02  FF                 	db	255
  1216   007E03  FF                 	db	255
  1217   007E04  FF                 	db	255
  1218   007E05  FF                 	db	255
  1219   007E06  FF                 	db	255
  1220   007E07  F0                 	db	240
  1221   007E08  F0                 	db	240
  1222   007E09  F0                 	db	240
  1223   007E0A  F0                 	db	240
  1224   007E0B  F0                 	db	240
  1225   007E0C  FF                 	db	255
  1226   007E0D  FF                 	db	255
  1227   007E0E  FF                 	db	255
  1228   007E0F  00                 	db	0
  1229   007E10  00                 	db	0
  1230   007E11  00                 	db	0
  1231   007E12  00                 	db	0
  1232   007E13  00                 	db	0
  1233   007E14  FF                 	db	255
  1234   007E15  FF                 	db	255
  1235   007E16  0F                 	db	15
  1236   007E17  0F                 	db	15
  1237   007E18  0F                 	db	15
  1238   007E19  0F                 	db	15
  1239   007E1A  0F                 	db	15
  1240   007E1B  38                 	db	56
  1241   007E1C  44                 	db	68
  1242   007E1D  44                 	db	68
  1243   007E1E  38                 	db	56
  1244   007E1F  44                 	db	68
  1245   007E20  FC                 	db	252
  1246   007E21  4A                 	db	74
  1247   007E22  4A                 	db	74
  1248   007E23  4A                 	db	74
  1249   007E24  34                 	db	52
  1250   007E25  7E                 	db	126
  1251   007E26  02                 	db	2
  1252   007E27  02                 	db	2
  1253   007E28  06                 	db	6
  1254   007E29  06                 	db	6
  1255   007E2A  02                 	db	2
  1256   007E2B  7E                 	db	126
  1257   007E2C  02                 	db	2
  1258   007E2D  7E                 	db	126
  1259   007E2E  02                 	db	2
  1260   007E2F  63                 	db	99
  1261   007E30  55                 	db	85
  1262   007E31  49                 	db	73
  1263   007E32  41                 	db	65
  1264   007E33  63                 	db	99
  1265   007E34  38                 	db	56
  1266   007E35  44                 	db	68
  1267   007E36  44                 	db	68
  1268   007E37  3C                 	db	60
  1269   007E38  04                 	db	4
  1270   007E39  40                 	db	64
  1271   007E3A  7E                 	db	126
  1272   007E3B  20                 	db	32
  1273   007E3C  1E                 	db	30
  1274   007E3D  20                 	db	32
  1275   007E3E  06                 	db	6
  1276   007E3F  02                 	db	2
  1277   007E40  7E                 	db	126
  1278   007E41  02                 	db	2
  1279   007E42  02                 	db	2
  1280   007E43  99                 	db	153
  1281   007E44  A5                 	db	165
  1282   007E45  E7                 	db	231
  1283   007E46  A5                 	db	165
  1284   007E47  99                 	db	153
  1285   007E48  1C                 	db	28
  1286   007E49  2A                 	db	42
  1287   007E4A  49                 	db	73
  1288   007E4B  2A                 	db	42
  1289   007E4C  1C                 	db	28
  1290   007E4D  4C                 	db	76
  1291   007E4E  72                 	db	114
  1292   007E4F  01                 	db	1
  1293   007E50  72                 	db	114
  1294   007E51  4C                 	db	76
  1295   007E52  30                 	db	48
  1296   007E53  4A                 	db	74
  1297   007E54  4D                 	db	77
  1298   007E55  4D                 	db	77
  1299   007E56  30                 	db	48
  1300   007E57  30                 	db	48
  1301   007E58  48                 	db	72
  1302   007E59  78                 	db	120
  1303   007E5A  48                 	db	72
  1304   007E5B  30                 	db	48
  1305   007E5C  BC                 	db	188
  1306   007E5D  62                 	db	98
  1307   007E5E  5A                 	db	90
  1308   007E5F  46                 	db	70
  1309   007E60  3D                 	db	61
  1310   007E61  3E                 	db	62
  1311   007E62  49                 	db	73
  1312   007E63  49                 	db	73
  1313   007E64  49                 	db	73
  1314   007E65  00                 	db	0
  1315   007E66  7E                 	db	126
  1316   007E67  01                 	db	1
  1317   007E68  01                 	db	1
  1318   007E69  01                 	db	1
  1319   007E6A  7E                 	db	126
  1320   007E6B  2A                 	db	42
  1321   007E6C  2A                 	db	42
  1322   007E6D  2A                 	db	42
  1323   007E6E  2A                 	db	42
  1324   007E6F  2A                 	db	42
  1325   007E70  44                 	db	68
  1326   007E71  44                 	db	68
  1327   007E72  5F                 	db	95
  1328   007E73  44                 	db	68
  1329   007E74  44                 	db	68
  1330   007E75  40                 	db	64
  1331   007E76  51                 	db	81
  1332   007E77  4A                 	db	74
  1333   007E78  44                 	db	68
  1334   007E79  40                 	db	64
  1335   007E7A  40                 	db	64
  1336   007E7B  44                 	db	68
  1337   007E7C  4A                 	db	74
  1338   007E7D  51                 	db	81
  1339   007E7E  40                 	db	64
  1340   007E7F  00                 	db	0
  1341   007E80  00                 	db	0
  1342   007E81  FF                 	db	255
  1343   007E82  01                 	db	1
  1344   007E83  03                 	db	3
  1345   007E84  E0                 	db	224
  1346   007E85  80                 	db	128
  1347   007E86  FF                 	db	255
  1348   007E87  00                 	db	0
  1349   007E88  00                 	db	0
  1350   007E89  08                 	db	8
  1351   007E8A  08                 	db	8
  1352   007E8B  6B                 	db	107
  1353   007E8C  6B                 	db	107
  1354   007E8D  08                 	db	8
  1355   007E8E  36                 	db	54
  1356   007E8F  12                 	db	18
  1357   007E90  36                 	db	54
  1358   007E91  24                 	db	36
  1359   007E92  36                 	db	54
  1360   007E93  06                 	db	6
  1361   007E94  0F                 	db	15
  1362   007E95  09                 	db	9
  1363   007E96  0F                 	db	15
  1364   007E97  06                 	db	6
  1365   007E98  00                 	db	0
  1366   007E99  00                 	db	0
  1367   007E9A  18                 	db	24
  1368   007E9B  18                 	db	24
  1369   007E9C  00                 	db	0
  1370   007E9D  00                 	db	0
  1371   007E9E  00                 	db	0
  1372   007E9F  10                 	db	16
  1373   007EA0  10                 	db	16
  1374   007EA1  00                 	db	0
  1375   007EA2  30                 	db	48
  1376   007EA3  40                 	db	64
  1377   007EA4  FF                 	db	255
  1378   007EA5  01                 	db	1
  1379   007EA6  01                 	db	1
  1380   007EA7  00                 	db	0
  1381   007EA8  1F                 	db	31
  1382   007EA9  01                 	db	1
  1383   007EAA  01                 	db	1
  1384   007EAB  1E                 	db	30
  1385   007EAC  00                 	db	0
  1386   007EAD  19                 	db	25
  1387   007EAE  1D                 	db	29
  1388   007EAF  17                 	db	23
  1389   007EB0  12                 	db	18
  1390   007EB1  00                 	db	0
  1391   007EB2  3C                 	db	60
  1392   007EB3  3C                 	db	60
  1393   007EB4  3C                 	db	60
  1394   007EB5  3C                 	db	60
  1395   007EB6  00                 	db	0
  1396   007EB7  00                 	db	0
  1397   007EB8  00                 	db	0
  1398   007EB9  00                 	db	0
  1399   007EBA  00                 	db	0
  1400   007EBB                     __end_of_font:
  1401                           	callstack 0
  1402   007EBB                     _Rcmd2:
  1403                           	callstack 0
  1404   007EBB  0F                 	db	15
  1405   007EBC  01                 	db	1
  1406   007EBD  80                 	db	128
  1407   007EBE  96                 	db	150
  1408   007EBF  11                 	db	17
  1409   007EC0  80                 	db	128
  1410   007EC1  FF                 	db	255
  1411   007EC2  B1                 	db	177
  1412   007EC3  03                 	db	3
  1413   007EC4  01                 	db	1
  1414   007EC5  2C                 	db	44
  1415   007EC6  2D                 	db	45
  1416   007EC7  B2                 	db	178
  1417   007EC8  03                 	db	3
  1418   007EC9  01                 	db	1
  1419   007ECA  2C                 	db	44
  1420   007ECB  2D                 	db	45
  1421   007ECC  B3                 	db	179
  1422   007ECD  06                 	db	6
  1423   007ECE  01                 	db	1
  1424   007ECF  2C                 	db	44
  1425   007ED0  2D                 	db	45
  1426   007ED1  01                 	db	1
  1427   007ED2  2C                 	db	44
  1428   007ED3  2D                 	db	45
  1429   007ED4  B4                 	db	180
  1430   007ED5  01                 	db	1
  1431   007ED6  07                 	db	7
  1432   007ED7  C0                 	db	192
  1433   007ED8  03                 	db	3
  1434   007ED9  A2                 	db	162
  1435   007EDA  02                 	db	2
  1436   007EDB  84                 	db	132
  1437   007EDC  C1                 	db	193
  1438   007EDD  01                 	db	1
  1439   007EDE  C5                 	db	197
  1440   007EDF  C2                 	db	194
  1441   007EE0  02                 	db	2
  1442   007EE1  0A                 	db	10
  1443   007EE2  00                 	db	0
  1444   007EE3  C3                 	db	195
  1445   007EE4  02                 	db	2
  1446   007EE5  8A                 	db	138
  1447   007EE6  2A                 	db	42
  1448   007EE7  C4                 	db	196
  1449   007EE8  02                 	db	2
  1450   007EE9  8A                 	db	138
  1451   007EEA  EE                 	db	238
  1452   007EEB  C5                 	db	197
  1453   007EEC  01                 	db	1
  1454   007EED  0E                 	db	14
  1455   007EEE  20                 	db	32
  1456   007EEF  00                 	db	0
  1457   007EF0  36                 	db	54
  1458   007EF1  01                 	db	1
  1459   007EF2  C8                 	db	200
  1460   007EF3  3A                 	db	58
  1461   007EF4  01                 	db	1
  1462   007EF5  05                 	db	5
  1463   007EF6                     __end_of_Rcmd2:
  1464                           	callstack 0
  1465   007EF6                     _Rcmd3:
  1466                           	callstack 0
  1467   007EF6  04                 	db	4
  1468   007EF7  E0                 	db	224
  1469   007EF8  10                 	db	16
  1470   007EF9  02                 	db	2
  1471   007EFA  1C                 	db	28
  1472   007EFB  07                 	db	7
  1473   007EFC  12                 	db	18
  1474   007EFD  37                 	db	55
  1475   007EFE  32                 	db	50
  1476   007EFF  29                 	db	41
  1477   007F00  2D                 	db	45
  1478   007F01  29                 	db	41
  1479   007F02  25                 	db	37
  1480   007F03  2B                 	db	43
  1481   007F04  39                 	db	57
  1482   007F05  00                 	db	0
  1483   007F06  01                 	db	1
  1484   007F07  03                 	db	3
  1485   007F08  10                 	db	16
  1486   007F09  E1                 	db	225
  1487   007F0A  10                 	db	16
  1488   007F0B  03                 	db	3
  1489   007F0C  1D                 	db	29
  1490   007F0D  07                 	db	7
  1491   007F0E  06                 	db	6
  1492   007F0F  2E                 	db	46
  1493   007F10  2C                 	db	44
  1494   007F11  29                 	db	41
  1495   007F12  2D                 	db	45
  1496   007F13  2E                 	db	46
  1497   007F14  2E                 	db	46
  1498   007F15  37                 	db	55
  1499   007F16  3F                 	db	63
  1500   007F17  00                 	db	0
  1501   007F18  00                 	db	0
  1502   007F19  02                 	db	2
  1503   007F1A  10                 	db	16
  1504   007F1B  13                 	db	19
  1505   007F1C  80                 	db	128
  1506   007F1D  0A                 	db	10
  1507   007F1E  29                 	db	41
  1508   007F1F  80                 	db	128
  1509   007F20  64                 	db	100
  1510   007F21                     __end_of_Rcmd3:
  1511                           	callstack 0
  1512   007F21                     _Rcmd2green160x80:
  1513                           	callstack 0
  1514   007F21  02                 	db	2
  1515   007F22  2A                 	db	42
  1516   007F23  04                 	db	4
  1517   007F24  00                 	db	0
  1518   007F25  00                 	db	0
  1519   007F26  00                 	db	0
  1520   007F27  7F                 	db	127
  1521   007F28  2B                 	db	43
  1522   007F29  04                 	db	4
  1523   007F2A  00                 	db	0
  1524   007F2B  00                 	db	0
  1525   007F2C  00                 	db	0
  1526   007F2D  9F                 	db	159
  1527   007F2E                     __end_of_Rcmd2green160x80:
  1528                           	callstack 0
  1529   007F2E                     _Rcmd2green144:
  1530                           	callstack 0
  1531   007F2E  02                 	db	2
  1532   007F2F  2A                 	db	42
  1533   007F30  04                 	db	4
  1534   007F31  00                 	db	0
  1535   007F32  00                 	db	0
  1536   007F33  00                 	db	0
  1537   007F34  7F                 	db	127
  1538   007F35  2B                 	db	43
  1539   007F36  04                 	db	4
  1540   007F37  00                 	db	0
  1541   007F38  00                 	db	0
  1542   007F39  00                 	db	0
  1543   007F3A  7F                 	db	127
  1544   007F3B                     __end_of_Rcmd2green144:
  1545                           	callstack 0
  1546   007F3B                     _Rcmd2red:
  1547                           	callstack 0
  1548   007F3B  02                 	db	2
  1549   007F3C  2A                 	db	42
  1550   007F3D  04                 	db	4
  1551   007F3E  00                 	db	0
  1552   007F3F  00                 	db	0
  1553   007F40  00                 	db	0
  1554   007F41  7F                 	db	127
  1555   007F42  2B                 	db	43
  1556   007F43  04                 	db	4
  1557   007F44  00                 	db	0
  1558   007F45  00                 	db	0
  1559   007F46  00                 	db	0
  1560   007F47  9F                 	db	159
  1561   007F48                     __end_of_Rcmd2red:
  1562                           	callstack 0
  1563   007F48                     _Rcmd2green:
  1564                           	callstack 0
  1565   007F48  02                 	db	2
  1566   007F49  2A                 	db	42
  1567   007F4A  04                 	db	4
  1568   007F4B  00                 	db	0
  1569   007F4C  02                 	db	2
  1570   007F4D  00                 	db	0
  1571   007F4E  81                 	db	129
  1572   007F4F  2B                 	db	43
  1573   007F50  04                 	db	4
  1574   007F51  00                 	db	0
  1575   007F52  01                 	db	1
  1576   007F53  00                 	db	0
  1577   007F54  A0                 	db	160
  1578   007F55                     __end_of_Rcmd2green:
  1579                           	callstack 0
  1580   007F55                     _Bcmd:
  1581                           	callstack 0
  1582   007F55  12                 	db	18
  1583   007F56  01                 	db	1
  1584   007F57  80                 	db	128
  1585   007F58  32                 	db	50
  1586   007F59  11                 	db	17
  1587   007F5A  80                 	db	128
  1588   007F5B  FF                 	db	255
  1589   007F5C  3A                 	db	58
  1590   007F5D  81                 	db	129
  1591   007F5E  05                 	db	5
  1592   007F5F  0A                 	db	10
  1593   007F60  B1                 	db	177
  1594   007F61  83                 	db	131
  1595   007F62  00                 	db	0
  1596   007F63  06                 	db	6
  1597   007F64  03                 	db	3
  1598   007F65  0A                 	db	10
  1599   007F66  36                 	db	54
  1600   007F67  01                 	db	1
  1601   007F68  08                 	db	8
  1602   007F69  B6                 	db	182
  1603   007F6A  02                 	db	2
  1604   007F6B  15                 	db	21
  1605   007F6C  02                 	db	2
  1606   007F6D  B4                 	db	180
  1607   007F6E  01                 	db	1
  1608   007F6F  00                 	db	0
  1609   007F70  C0                 	db	192
  1610   007F71  82                 	db	130
  1611   007F72  02                 	db	2
  1612   007F73  70                 	db	112
  1613   007F74  0A                 	db	10
  1614   007F75  C1                 	db	193
  1615   007F76  01                 	db	1
  1616   007F77  05                 	db	5
  1617   007F78  C2                 	db	194
  1618   007F79  02                 	db	2
  1619   007F7A  01                 	db	1
  1620   007F7B  02                 	db	2
  1621   007F7C  C5                 	db	197
  1622   007F7D  82                 	db	130
  1623   007F7E  3C                 	db	60
  1624   007F7F  38                 	db	56
  1625   007F80  0A                 	db	10
  1626   007F81  FC                 	db	252
  1627   007F82  02                 	db	2
  1628   007F83  11                 	db	17
  1629   007F84  15                 	db	21
  1630   007F85  E0                 	db	224
  1631   007F86  10                 	db	16
  1632   007F87  09                 	db	9
  1633   007F88  16                 	db	22
  1634   007F89  09                 	db	9
  1635   007F8A  20                 	db	32
  1636   007F8B  21                 	db	33
  1637   007F8C  1B                 	db	27
  1638   007F8D  13                 	db	19
  1639   007F8E  19                 	db	25
  1640   007F8F  17                 	db	23
  1641   007F90  15                 	db	21
  1642   007F91  1E                 	db	30
  1643   007F92  2B                 	db	43
  1644   007F93  04                 	db	4
  1645   007F94  05                 	db	5
  1646   007F95  02                 	db	2
  1647   007F96  0E                 	db	14
  1648   007F97  E1                 	db	225
  1649   007F98  90                 	db	144
  1650   007F99  0B                 	db	11
  1651   007F9A  14                 	db	20
  1652   007F9B  08                 	db	8
  1653   007F9C  1E                 	db	30
  1654   007F9D  22                 	db	34
  1655   007F9E  1D                 	db	29
  1656   007F9F  18                 	db	24
  1657   007FA0  1E                 	db	30
  1658   007FA1  1B                 	db	27
  1659   007FA2  1A                 	db	26
  1660   007FA3  24                 	db	36
  1661   007FA4  2B                 	db	43
  1662   007FA5  06                 	db	6
  1663   007FA6  06                 	db	6
  1664   007FA7  02                 	db	2
  1665   007FA8  0F                 	db	15
  1666   007FA9  0A                 	db	10
  1667   007FAA  2A                 	db	42
  1668   007FAB  04                 	db	4
  1669   007FAC  00                 	db	0
  1670   007FAD  02                 	db	2
  1671   007FAE  00                 	db	0
  1672   007FAF  81                 	db	129
  1673   007FB0  2B                 	db	43
  1674   007FB1  04                 	db	4
  1675   007FB2  00                 	db	0
  1676   007FB3  02                 	db	2
  1677   007FB4  00                 	db	0
  1678   007FB5  81                 	db	129
  1679   007FB6  13                 	db	19
  1680   007FB7  80                 	db	128
  1681   007FB8  0A                 	db	10
  1682   007FB9  29                 	db	41
  1683   007FBA  80                 	db	128
  1684   007FBB  FF                 	db	255
  1685   007FBC                     __end_of_Bcmd:
  1686                           	callstack 0
  1687   007FBC                     _Rcmd1:
  1688                           	callstack 0
  1689   007FBC  08                 	db	8
  1690   007FBD  01                 	db	1
  1691   007FBE  80                 	db	128
  1692   007FBF  32                 	db	50
  1693   007FC0  11                 	db	17
  1694   007FC1  80                 	db	128
  1695   007FC2  FF                 	db	255
  1696   007FC3  3A                 	db	58
  1697   007FC4  81                 	db	129
  1698   007FC5  05                 	db	5
  1699   007FC6  0A                 	db	10
  1700   007FC7  36                 	db	54
  1701   007FC8  01                 	db	1
  1702   007FC9  08                 	db	8
  1703   007FCA  13                 	db	19
  1704   007FCB  80                 	db	128
  1705   007FCC  0A                 	db	10
  1706   007FCD  29                 	db	41
  1707   007FCE  80                 	db	128
  1708   007FCF  0A                 	db	10
  1709   007FD0  2A                 	db	42
  1710   007FD1  04                 	db	4
  1711   007FD2  00                 	db	0
  1712   007FD3  00                 	db	0
  1713   007FD4  00                 	db	0
  1714   007FD5  7F                 	db	127
  1715   007FD6  2B                 	db	43
  1716   007FD7  04                 	db	4
  1717   007FD8  00                 	db	0
  1718   007FD9  00                 	db	0
  1719   007FDA  00                 	db	0
  1720   007FDB  7F                 	db	127
  1721   007FDC                     __end_of_Rcmd1:
  1722                           	callstack 0
  1723   000000                     _ADCON0bits	set	4034
  1724   000000                     _LATDbits	set	3980
  1725   000000                     _TRISAbits	set	3986
  1726   000000                     _TRISBbits	set	3987
  1727   000000                     _ADCON2	set	4032
  1728   000000                     _ADCON1	set	4033
  1729   000000                     _SSPCON1bits	set	4038
  1730   000000                     _ADRESH	set	4036
  1731   000000                     _ADRESL	set	4035
  1732   000000                     _ADCON0	set	4034
  1733   000000                     _TRISDbits	set	3989
  1734   000000                     _PIR1bits	set	3998
  1735   000000                     _TRISCbits	set	3988
  1736   000000                     _SSPBUF	set	4041
  1737   000000                     _SSPSTATbits	set	4039
  1738   007FDC                     STR_2:
  1739   007FDC  3C                 	db	60	;'<'
  1740   007FDD  6D                 	db	109	;'m'
  1741   007FDE  65                 	db	101	;'e'
  1742   007FDF  64                 	db	100	;'d'
  1743   007FE0  69                 	db	105	;'i'
  1744   007FE1  64                 	db	100	;'d'
  1745   007FE2  61                 	db	97	;'a'
  1746   007FE3  20                 	db	32
  1747   007FE4  72                 	db	114	;'r'
  1748   007FE5  65                 	db	101	;'e'
  1749   007FE6  73                 	db	115	;'s'
  1750   007FE7  69                 	db	105	;'i'
  1751   007FE8  73                 	db	115	;'s'
  1752   007FE9  74                 	db	116	;'t'
  1753   007FEA  65                 	db	101	;'e'
  1754   007FEB  6E                 	db	110	;'n'
  1755   007FEC  63                 	db	99	;'c'
  1756   007FED  69                 	db	105	;'i'
  1757   007FEE  61                 	db	97	;'a'
  1758   007FEF  3E                 	db	62	;'>'
  1759   007FF0  00                 	db	0
  1760   007FF1                     STR_1:
  1761   007FF1  25                 	db	37
  1762   007FF2  30                 	db	48	;'0'
  1763   007FF3  2E                 	db	46
  1764   007FF4  32                 	db	50	;'2'
  1765   007FF5  66                 	db	102	;'f'
  1766   007FF6  00                 	db	0
  1767   007FF7                     STR_3:
  1768   007FF7  69                 	db	105	;'i'
  1769   007FF8  6E                 	db	110	;'n'
  1770   007FF9  66                 	db	102	;'f'
  1771   007FFA  00                 	db	0
  1772   007FFB                     STR_6:
  1773   007FFB  6E                 	db	110	;'n'
  1774   007FFC  61                 	db	97	;'a'
  1775   007FFD  6E                 	db	110	;'n'
  1776   007FFE  00                 	db	0
  1777   007FFF  00                 	db	0	; dummy byte at the end
  1778   000000                     
  1779                           ; #config settings
  1780                           
  1781                           	psect	cinit
  1782   004B88                     __pcinit:
  1783                           	callstack 0
  1784   004B88                     start_initialization:
  1785                           	callstack 0
  1786   004B88                     __initialization:
  1787                           	callstack 0
  1788                           
  1789                           ; Initialize objects allocated to BANK0 (5 bytes)
  1790                           ; load TBLPTR registers with __pidataBANK0
  1791   004B88  0E17               	movlw	low __pidataBANK0
  1792   004B8A  6EF6               	movwf	tblptrl,c
  1793   004B8C  0E48               	movlw	high __pidataBANK0
  1794   004B8E  6EF7               	movwf	tblptrh,c
  1795   004B90  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1796   004B92  6EF8               	movwf	tblptru,c
  1797   004B94  EE00  F0BC         	lfsr	0,__pdataBANK0
  1798   004B98  EE10 F005          	lfsr	1,5
  1799   004B9C                     copy_data0:
  1800   004B9C  0009               	tblrd		*+
  1801   004B9E  CFF5 FFEE          	movff	tablat,postinc0
  1802   004BA2  50E5               	movf	postdec1,w,c
  1803   004BA4  50E1               	movf	fsr1l,w,c
  1804   004BA6  E1FA               	bnz	copy_data0
  1805                           
  1806                           ; Initialize objects allocated to COMRAM (1 bytes)
  1807                           ; load TBLPTR registers with __pidataCOMRAM
  1808   004BA8  0E16               	movlw	low __pidataCOMRAM
  1809   004BAA  6EF6               	movwf	tblptrl,c
  1810   004BAC  0E48               	movlw	high __pidataCOMRAM
  1811   004BAE  6EF7               	movwf	tblptrh,c
  1812   004BB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1813   004BB2  6EF8               	movwf	tblptru,c
  1814   004BB4  0009               	tblrd		*+	;fetch initializer
  1815   004BB6  CFF5 F05E          	movff	tablat,__pdataCOMRAM
  1816                           
  1817                           ; Clear objects allocated to BANK1 (80 bytes)
  1818   004BBA  EE01  F000         	lfsr	0,__pbssBANK1
  1819   004BBE  0E50               	movlw	80
  1820   004BC0                     clear_0:
  1821   004BC0  6AEE               	clrf	postinc0,c
  1822   004BC2  06E8               	decf	wreg,f,c
  1823   004BC4  E1FD               	bnz	clear_0
  1824                           
  1825                           ; Clear objects allocated to BANK0 (17 bytes)
  1826   004BC6  EE00  F0AB         	lfsr	0,__pbssBANK0
  1827   004BCA  0E11               	movlw	17
  1828   004BCC                     clear_1:
  1829   004BCC  6AEE               	clrf	postinc0,c
  1830   004BCE  06E8               	decf	wreg,f,c
  1831   004BD0  E1FD               	bnz	clear_1
  1832                           
  1833                           ; Clear objects allocated to COMRAM (8 bytes)
  1834   004BD2  EE00  F056         	lfsr	0,__pbssCOMRAM
  1835   004BD6  0E08               	movlw	8
  1836   004BD8                     clear_2:
  1837   004BD8  6AEE               	clrf	postinc0,c
  1838   004BDA  06E8               	decf	wreg,f,c
  1839   004BDC  E1FD               	bnz	clear_2
  1840   004BDE                     end_of_initialization:
  1841                           	callstack 0
  1842   004BDE                     __end_of__initialization:
  1843                           	callstack 0
  1844   004BDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1845   004BE0  6EF8               	movwf	tblptru,c
  1846   004BE2  0100               	movlb	0
  1847   004BE4  EFA2  F02A         	goto	_main	;jump to C main() function
  1848                           
  1849                           	psect	bssCOMRAM
  1850   000056                     __pbssCOMRAM:
  1851                           	callstack 0
  1852   000056                     _cursor_y:
  1853                           	callstack 0
  1854   000056                     	ds	2
  1855   000058                     _cursor_x:
  1856                           	callstack 0
  1857   000058                     	ds	2
  1858   00005A                     _tabcolor:
  1859                           	callstack 0
  1860   00005A                     	ds	1
  1861   00005B                     __colstart:
  1862                           	callstack 0
  1863   00005B                     	ds	1
  1864   00005C                     __height:
  1865                           	callstack 0
  1866   00005C                     	ds	1
  1867   00005D                     __width:
  1868                           	callstack 0
  1869   00005D                     	ds	1
  1870                           
  1871                           	psect	dataCOMRAM
  1872   00005E                     __pdataCOMRAM:
  1873                           	callstack 0
  1874   00005E                     _textsize:
  1875                           	callstack 0
  1876   00005E                     	ds	1
  1877                           
  1878                           	psect	bssBANK0
  1879   0000AB                     __pbssBANK0:
  1880                           	callstack 0
  1881   0000AB                     floorf@F521:
  1882                           	callstack 0
  1883   0000AB                     	ds	4
  1884   0000AF                     ___fpclassifyf@F465:
  1885                           	callstack 0
  1886   0000AF                     	ds	4
  1887   0000B3                     _width:
  1888                           	callstack 0
  1889   0000B3                     	ds	2
  1890   0000B5                     _prec:
  1891                           	callstack 0
  1892   0000B5                     	ds	2
  1893   0000B7                     _flags:
  1894                           	callstack 0
  1895   0000B7                     	ds	1
  1896   0000B8                     _rotation:
  1897                           	callstack 0
  1898   0000B8                     	ds	1
  1899   0000B9                     __rowstart:
  1900                           	callstack 0
  1901   0000B9                     	ds	1
  1902   0000BA                     __ystart:
  1903                           	callstack 0
  1904   0000BA                     	ds	1
  1905   0000BB                     __xstart:
  1906                           	callstack 0
  1907   0000BB                     	ds	1
  1908                           
  1909                           	psect	dataBANK0
  1910   0000BC                     __pdataBANK0:
  1911                           	callstack 0
  1912   0000BC                     _textbgcolor:
  1913                           	callstack 0
  1914   0000BC                     	ds	2
  1915   0000BE                     _textcolor:
  1916                           	callstack 0
  1917   0000BE                     	ds	2
  1918   0000C0                     _wrap:
  1919                           	callstack 0
  1920   0000C0                     	ds	1
  1921                           
  1922                           	psect	bssBANK1
  1923   000100                     __pbssBANK1:
  1924                           	callstack 0
  1925   000100                     _dbuf:
  1926                           	callstack 0
  1927   000100                     	ds	80
  1928                           
  1929                           	psect	cstackBANK0
  1930   000060                     __pcstackBANK0:
  1931                           	callstack 0
  1932   000060                     efgtoa@ne:
  1933                           	callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x0
  1936   000060                     	ds	2
  1937   000062                     efgtoa@p:
  1938                           	callstack 0
  1939                           
  1940                           ; 2 bytes @ 0x2
  1941   000062                     	ds	2
  1942   000064                     efgtoa@t:
  1943                           	callstack 0
  1944                           
  1945                           ; 2 bytes @ 0x4
  1946   000064                     	ds	2
  1947   000066                     _efgtoa$1487:
  1948                           	callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x6
  1951   000066                     	ds	2
  1952   000068                     efgtoa@pp:
  1953                           	callstack 0
  1954                           
  1955                           ; 1 bytes @ 0x8
  1956   000068                     	ds	1
  1957   000069                     efgtoa@mode:
  1958                           	callstack 0
  1959                           
  1960                           ; 1 bytes @ 0x9
  1961   000069                     	ds	1
  1962   00006A                     efgtoa@nmode:
  1963                           	callstack 0
  1964                           
  1965                           ; 1 bytes @ 0xA
  1966   00006A                     	ds	1
  1967   00006B                     efgtoa@d:
  1968                           	callstack 0
  1969                           
  1970                           ; 2 bytes @ 0xB
  1971   00006B                     	ds	2
  1972   00006D                     efgtoa@m:
  1973                           	callstack 0
  1974                           
  1975                           ; 2 bytes @ 0xD
  1976   00006D                     	ds	2
  1977   00006F                     efgtoa@e:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0xF
  1981   00006F                     	ds	2
  1982   000071                     efgtoa@ou:
  1983                           	callstack 0
  1984                           
  1985                           ; 4 bytes @ 0x11
  1986   000071                     	ds	4
  1987   000075                     efgtoa@w:
  1988                           	callstack 0
  1989                           
  1990                           ; 2 bytes @ 0x15
  1991   000075                     	ds	2
  1992   000077                     efgtoa@h:
  1993                           	callstack 0
  1994                           
  1995                           ; 4 bytes @ 0x17
  1996   000077                     	ds	4
  1997   00007B                     efgtoa@l:
  1998                           	callstack 0
  1999                           
  2000                           ; 4 bytes @ 0x1B
  2001   00007B                     	ds	4
  2002   00007F                     efgtoa@i:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x1F
  2006   00007F                     	ds	2
  2007   000081                     efgtoa@sign:
  2008                           	callstack 0
  2009                           
  2010                           ; 1 bytes @ 0x21
  2011   000081                     	ds	1
  2012   000082                     efgtoa@g:
  2013                           	callstack 0
  2014                           
  2015                           ; 4 bytes @ 0x22
  2016   000082                     	ds	4
  2017   000086                     efgtoa@n:
  2018                           	callstack 0
  2019                           
  2020                           ; 2 bytes @ 0x26
  2021   000086                     	ds	2
  2022   000088                     efgtoa@u:
  2023                           	callstack 0
  2024                           
  2025                           ; 4 bytes @ 0x28
  2026   000088                     	ds	4
  2027   00008C                     ?_sprintf:
  2028                           	callstack 0
  2029   00008C                     sprintf@s:
  2030                           	callstack 0
  2031                           
  2032                           ; 1 bytes @ 0x2C
  2033   00008C                     	ds	1
  2034   00008D                     sprintf@fmt:
  2035                           	callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x2D
  2038   00008D                     	ds	6
  2039   000093                     ??_main:
  2040                           
  2041                           ; 1 bytes @ 0x33
  2042   000093                     	ds	2
  2043   000095                     main@cadena:
  2044                           	callstack 0
  2045                           
  2046                           ; 16 bytes @ 0x35
  2047   000095                     	ds	16
  2048   0000A5                     main@calc:
  2049                           	callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x45
  2052   0000A5                     	ds	2
  2053   0000A7                     main@res:
  2054                           	callstack 0
  2055                           
  2056                           ; 4 bytes @ 0x47
  2057   0000A7                     	ds	4
  2058                           
  2059                           	psect	cstackCOMRAM
  2060   000001                     __pcstackCOMRAM:
  2061                           	callstack 0
  2062   000001                     ?___fpclassifyf:
  2063                           	callstack 0
  2064   000001                     ?___wmul:
  2065                           	callstack 0
  2066   000001                     ?___fladd:
  2067                           	callstack 0
  2068   000001                     ?___fldiv:
  2069                           	callstack 0
  2070   000001                     ?___flmul:
  2071                           	callstack 0
  2072   000001                     ?_labs:
  2073                           	callstack 0
  2074   000001                     ?___flneg:
  2075                           	callstack 0
  2076   000001                     ?___fltol:
  2077                           	callstack 0
  2078   000001                     ?___xxtofl:
  2079                           	callstack 0
  2080   000001                     SPI_Init_Master@modo:
  2081                           	callstack 0
  2082   000001                     SPI_Write@dato:
  2083                           	callstack 0
  2084   000001                     Delay_ms@d:
  2085                           	callstack 0
  2086   000001                     ___wmul@multiplier:
  2087                           	callstack 0
  2088   000001                     memcpy@d1:
  2089                           	callstack 0
  2090   000001                     fputc@c:
  2091                           	callstack 0
  2092   000001                     strcpy@dest:
  2093                           	callstack 0
  2094   000001                     ___fleq@ff1:
  2095                           	callstack 0
  2096   000001                     ___flneg@f1:
  2097                           	callstack 0
  2098   000001                     ___fltol@f1:
  2099                           	callstack 0
  2100   000001                     ___fladd@b:
  2101                           	callstack 0
  2102   000001                     ___fldiv@b:
  2103                           	callstack 0
  2104   000001                     ___flmul@b:
  2105                           	callstack 0
  2106   000001                     ___xxtofl@val:
  2107                           	callstack 0
  2108   000001                     ___fpclassifyf@x:
  2109                           	callstack 0
  2110   000001                     labs@a:
  2111                           	callstack 0
  2112                           
  2113                           ; 4 bytes @ 0x0
  2114   000001                     	ds	1
  2115   000002                     SPI_Init_Master@smp:
  2116                           	callstack 0
  2117   000002                     WriteCommand@cmd:
  2118                           	callstack 0
  2119                           
  2120                           ; 1 bytes @ 0x1
  2121   000002                     	ds	1
  2122   000003                     ??_Delay_ms:
  2123   000003                     SPI_Init_Master@reloj:
  2124                           	callstack 0
  2125   000003                     SetAddrWindow@y:
  2126                           	callstack 0
  2127   000003                     TFT_SetRotation@m:
  2128                           	callstack 0
  2129   000003                     fputc@fp:
  2130                           	callstack 0
  2131   000003                     ___wmul@multiplicand:
  2132                           	callstack 0
  2133   000003                     memcpy@s1:
  2134                           	callstack 0
  2135   000003                     strcpy@src:
  2136                           	callstack 0
  2137                           
  2138                           ; 2 bytes @ 0x2
  2139   000003                     	ds	1
  2140   000004                     ??_fputc:
  2141   000004                     SetAddrWindow@w:
  2142                           	callstack 0
  2143   000004                     TFT_SetRotation@madctl:
  2144                           	callstack 0
  2145   000004                     Delay_ms@i:
  2146                           	callstack 0
  2147                           
  2148                           ; 2 bytes @ 0x3
  2149   000004                     	ds	1
  2150   000005                     ??___fpclassifyf:
  2151   000005                     ??_labs:
  2152   000005                     ??___fltol:
  2153   000005                     ??___xxtofl:
  2154   000005                     SetAddrWindow@h:
  2155                           	callstack 0
  2156   000005                     ___wmul@product:
  2157                           	callstack 0
  2158   000005                     memcpy@n:
  2159                           	callstack 0
  2160   000005                     strcpy@d:
  2161                           	callstack 0
  2162   000005                     ___fleq@ff2:
  2163                           	callstack 0
  2164   000005                     ___fladd@a:
  2165                           	callstack 0
  2166   000005                     ___fldiv@a:
  2167                           	callstack 0
  2168   000005                     ___flmul@a:
  2169                           	callstack 0
  2170                           
  2171                           ; 4 bytes @ 0x4
  2172   000005                     	ds	1
  2173   000006                     ??_SetAddrWindow:
  2174   000006                     DisplayInit@addr:
  2175                           	callstack 0
  2176                           
  2177                           ; 2 bytes @ 0x5
  2178   000006                     	ds	1
  2179   000007                     ?_read_prec_or_width:
  2180                           	callstack 0
  2181   000007                     SetAddrWindow@x:
  2182                           	callstack 0
  2183   000007                     read_prec_or_width@fmt:
  2184                           	callstack 0
  2185   000007                     memcpy@tmp:
  2186                           	callstack 0
  2187                           
  2188                           ; 1 bytes @ 0x6
  2189   000007                     	ds	1
  2190   000008                     ??_DisplayInit:
  2191   000008                     TFT_DrawPixel@y:
  2192                           	callstack 0
  2193   000008                     TFT_DrawVLine@y:
  2194                           	callstack 0
  2195   000008                     TFT_FillRect@y:
  2196                           	callstack 0
  2197   000008                     read_prec_or_width@ap:
  2198                           	callstack 0
  2199   000008                     memcpy@d:
  2200                           	callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x7
  2203   000008                     	ds	1
  2204   000009                     ??___fladd:
  2205   000009                     ??___fldiv:
  2206   000009                     ??___flmul:
  2207   000009                     ??___fleq:
  2208   000009                     DisplayInit@numCommands:
  2209                           	callstack 0
  2210   000009                     TFT_DrawVLine@h:
  2211                           	callstack 0
  2212   000009                     TFT_FillRect@w:
  2213                           	callstack 0
  2214   000009                     ___fltol@sign1:
  2215                           	callstack 0
  2216   000009                     ___xxtofl@sign:
  2217                           	callstack 0
  2218   000009                     read_prec_or_width@c:
  2219                           	callstack 0
  2220   000009                     TFT_DrawPixel@color:
  2221                           	callstack 0
  2222   000009                     ___fpclassifyf@e:
  2223                           	callstack 0
  2224   000009                     fputs@s:
  2225                           	callstack 0
  2226                           
  2227                           ; 2 bytes @ 0x8
  2228   000009                     	ds	1
  2229   00000A                     DisplayInit@numArgs:
  2230                           	callstack 0
  2231   00000A                     TFT_FillRect@h:
  2232                           	callstack 0
  2233   00000A                     ___fltol@exp1:
  2234                           	callstack 0
  2235   00000A                     ___xxtofl@exp:
  2236                           	callstack 0
  2237   00000A                     TFT_DrawVLine@color:
  2238                           	callstack 0
  2239   00000A                     read_prec_or_width@n:
  2240                           	callstack 0
  2241   00000A                     memcpy@s:
  2242                           	callstack 0
  2243                           
  2244                           ; 2 bytes @ 0x9
  2245   00000A                     	ds	1
  2246   00000B                     TFT_DrawPixel@x:
  2247                           	callstack 0
  2248   00000B                     fputs@fp:
  2249                           	callstack 0
  2250   00000B                     DisplayInit@ms:
  2251                           	callstack 0
  2252   00000B                     TFT_FillRect@color:
  2253                           	callstack 0
  2254   00000B                     ___xxtofl@arg:
  2255                           	callstack 0
  2256   00000B                     ___fpclassifyf@u:
  2257                           	callstack 0
  2258                           
  2259                           ; 4 bytes @ 0xA
  2260   00000B                     	ds	1
  2261   00000C                     ??_TFT_DrawVLine:
  2262   00000C                     fputs@c:
  2263                           	callstack 0
  2264                           
  2265                           ; 1 bytes @ 0xB
  2266   00000C                     	ds	1
  2267   00000D                     ??_TFT_ST7735_Init:
  2268   00000D                     ??_TFT_FillRect:
  2269   00000D                     ___fladd@signs:
  2270                           	callstack 0
  2271   00000D                     ___flmul@sign:
  2272                           	callstack 0
  2273   00000D                     fputs@i:
  2274                           	callstack 0
  2275   00000D                     ___fldiv@rem:
  2276                           	callstack 0
  2277                           
  2278                           ; 4 bytes @ 0xC
  2279   00000D                     	ds	1
  2280   00000E                     TFT_ST7735_Init@options:
  2281                           	callstack 0
  2282   00000E                     ___fladd@aexp:
  2283                           	callstack 0
  2284   00000E                     ___flmul@grs:
  2285                           	callstack 0
  2286                           
  2287                           ; 4 bytes @ 0xD
  2288   00000E                     	ds	1
  2289   00000F                     ___fladd@bexp:
  2290                           	callstack 0
  2291   00000F                     pad@fp:
  2292                           	callstack 0
  2293                           
  2294                           ; 1 bytes @ 0xE
  2295   00000F                     	ds	1
  2296   000010                     ___fladd@grs:
  2297                           	callstack 0
  2298   000010                     pad@buf:
  2299                           	callstack 0
  2300                           
  2301                           ; 2 bytes @ 0xF
  2302   000010                     	ds	1
  2303   000011                     ___fldiv@sign:
  2304                           	callstack 0
  2305                           
  2306                           ; 1 bytes @ 0x10
  2307   000011                     	ds	1
  2308   000012                     ___flmul@aexp:
  2309                           	callstack 0
  2310   000012                     ___fldiv@new_exp:
  2311                           	callstack 0
  2312   000012                     pad@p:
  2313                           	callstack 0
  2314                           
  2315                           ; 2 bytes @ 0x11
  2316   000012                     	ds	1
  2317   000013                     TFT_DrawVLine@hi:
  2318                           	callstack 0
  2319   000013                     ___flmul@bexp:
  2320                           	callstack 0
  2321                           
  2322                           ; 1 bytes @ 0x12
  2323   000013                     	ds	1
  2324   000014                     ??_pad:
  2325   000014                     TFT_DrawVLine@lo:
  2326                           	callstack 0
  2327   000014                     TFT_FillRect@px:
  2328                           	callstack 0
  2329   000014                     ___fldiv@grs:
  2330                           	callstack 0
  2331   000014                     ___flmul@prod:
  2332                           	callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x13
  2335   000014                     	ds	1
  2336   000015                     TFT_DrawVLine@x:
  2337                           	callstack 0
  2338   000015                     pad@i:
  2339                           	callstack 0
  2340                           
  2341                           ; 2 bytes @ 0x14
  2342   000015                     	ds	1
  2343   000016                     TFT_FillRect@hi:
  2344                           	callstack 0
  2345                           
  2346                           ; 1 bytes @ 0x15
  2347   000016                     	ds	1
  2348   000017                     TFT_FillRect@lo:
  2349                           	callstack 0
  2350                           
  2351                           ; 1 bytes @ 0x16
  2352   000017                     	ds	1
  2353   000018                     TFT_FillRect@x:
  2354                           	callstack 0
  2355   000018                     ___fldiv@bexp:
  2356                           	callstack 0
  2357   000018                     ___flmul@temp:
  2358                           	callstack 0
  2359                           
  2360                           ; 2 bytes @ 0x17
  2361   000018                     	ds	1
  2362   000019                     ??_TFT_Print:
  2363   000019                     ___fldiv@aexp:
  2364                           	callstack 0
  2365   000019                     TFT_FillScreen@color:
  2366                           	callstack 0
  2367                           
  2368                           ; 2 bytes @ 0x18
  2369   000019                     	ds	1
  2370   00001A                     ?___flsub:
  2371                           	callstack 0
  2372   00001A                     ?_floorf:
  2373                           	callstack 0
  2374   00001A                     ___flge@ff1:
  2375                           	callstack 0
  2376   00001A                     ___flsub@b:
  2377                           	callstack 0
  2378   00001A                     floorf@x:
  2379                           	callstack 0
  2380                           
  2381                           ; 4 bytes @ 0x19
  2382   00001A                     	ds	1
  2383   00001B                     
  2384                           ; 1 bytes @ 0x1A
  2385   00001B                     	ds	3
  2386   00001E                     ??_floorf:
  2387   00001E                     TFT_Print@line:
  2388                           	callstack 0
  2389   00001E                     ___flge@ff2:
  2390                           	callstack 0
  2391   00001E                     ___flsub@a:
  2392                           	callstack 0
  2393                           
  2394                           ; 4 bytes @ 0x1D
  2395   00001E                     	ds	1
  2396   00001F                     TFT_Print@c:
  2397                           	callstack 0
  2398                           
  2399                           ; 1 bytes @ 0x1E
  2400   00001F                     	ds	1
  2401   000020                     TFT_Print@j:
  2402                           	callstack 0
  2403                           
  2404                           ; 1 bytes @ 0x1F
  2405   000020                     	ds	1
  2406   000021                     TFT_Print@i:
  2407                           	callstack 0
  2408                           
  2409                           ; 1 bytes @ 0x20
  2410   000021                     	ds	1
  2411   000022                     ??___flge:
  2412   000022                     TFT_WriteString@x:
  2413                           	callstack 0
  2414                           
  2415                           ; 2 bytes @ 0x21
  2416   000022                     	ds	2
  2417   000024                     TFT_WriteString@y:
  2418                           	callstack 0
  2419   000024                     floorf@m:
  2420                           	callstack 0
  2421                           
  2422                           ; 4 bytes @ 0x23
  2423   000024                     	ds	2
  2424   000026                     TFT_WriteString@str:
  2425                           	callstack 0
  2426                           
  2427                           ; 2 bytes @ 0x25
  2428   000026                     	ds	2
  2429   000028                     TFT_WriteString@color:
  2430                           	callstack 0
  2431   000028                     floorf@e:
  2432                           	callstack 0
  2433                           
  2434                           ; 2 bytes @ 0x27
  2435   000028                     	ds	2
  2436   00002A                     TFT_WriteString@bg:
  2437                           	callstack 0
  2438   00002A                     floorf@u:
  2439                           	callstack 0
  2440                           
  2441                           ; 4 bytes @ 0x29
  2442   00002A                     	ds	2
  2443   00002C                     TFT_WriteString@size:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x2B
  2447   00002C                     	ds	1
  2448   00002D                     _TFT_WriteString$911:
  2449                           	callstack 0
  2450                           
  2451                           ; 2 bytes @ 0x2C
  2452   00002D                     	ds	1
  2453   00002E                     efgtoa@fp:
  2454                           	callstack 0
  2455                           
  2456                           ; 1 bytes @ 0x2D
  2457   00002E                     	ds	1
  2458   00002F                     TFT_WriteString@x_prev:
  2459                           	callstack 0
  2460   00002F                     efgtoa@f:
  2461                           	callstack 0
  2462                           
  2463                           ; 4 bytes @ 0x2E
  2464   00002F                     	ds	4
  2465   000033                     efgtoa@c:
  2466                           	callstack 0
  2467                           
  2468                           ; 1 bytes @ 0x32
  2469   000033                     	ds	1
  2470   000034                     ??_efgtoa:
  2471                           
  2472                           ; 1 bytes @ 0x33
  2473   000034                     	ds	2
  2474   000036                     vfpfcnvrt@fp:
  2475                           	callstack 0
  2476                           
  2477                           ; 1 bytes @ 0x35
  2478   000036                     	ds	1
  2479   000037                     vfpfcnvrt@fmt:
  2480                           	callstack 0
  2481                           
  2482                           ; 1 bytes @ 0x36
  2483   000037                     	ds	1
  2484   000038                     vfpfcnvrt@ap:
  2485                           	callstack 0
  2486                           
  2487                           ; 1 bytes @ 0x37
  2488   000038                     	ds	1
  2489   000039                     ??_vfpfcnvrt:
  2490                           
  2491                           ; 1 bytes @ 0x38
  2492   000039                     	ds	2
  2493   00003B                     vfpfcnvrt@convarg:
  2494                           	callstack 0
  2495                           
  2496                           ; 4 bytes @ 0x3A
  2497   00003B                     	ds	4
  2498   00003F                     vfpfcnvrt@done:
  2499                           	callstack 0
  2500                           
  2501                           ; 1 bytes @ 0x3E
  2502   00003F                     	ds	1
  2503   000040                     vfpfcnvrt@c:
  2504                           	callstack 0
  2505                           
  2506                           ; 1 bytes @ 0x3F
  2507   000040                     	ds	1
  2508   000041                     vfpfcnvrt@cp:
  2509                           	callstack 0
  2510                           
  2511                           ; 2 bytes @ 0x40
  2512   000041                     	ds	2
  2513   000043                     ?_vfprintf:
  2514                           	callstack 0
  2515   000043                     vfprintf@fp:
  2516                           	callstack 0
  2517                           
  2518                           ; 1 bytes @ 0x42
  2519   000043                     	ds	1
  2520   000044                     vfprintf@fmt:
  2521                           	callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x43
  2524   000044                     	ds	2
  2525   000046                     vfprintf@ap:
  2526                           	callstack 0
  2527                           
  2528                           ; 1 bytes @ 0x45
  2529   000046                     	ds	1
  2530   000047                     vfprintf@cfmt:
  2531                           	callstack 0
  2532                           
  2533                           ; 2 bytes @ 0x46
  2534   000047                     	ds	2
  2535   000049                     sprintf@ap:
  2536                           	callstack 0
  2537                           
  2538                           ; 1 bytes @ 0x48
  2539   000049                     	ds	1
  2540   00004A                     sprintf@f:
  2541                           	callstack 0
  2542                           
  2543                           ; 12 bytes @ 0x49
  2544   00004A                     	ds	12
  2545                           
  2546 ;;
  2547 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2548 ;;
  2549 ;; *************** function _main *****************
  2550 ;; Defined at:
  2551 ;;		line 23 in file "pruebilla.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  calc            2   69[BANK0 ] int 
  2556 ;;  bit_hight       2    0        int 
  2557 ;;  bit_low         2    0        int 
  2558 ;;  cadena         16   53[BANK0 ] unsigned char [16]
  2559 ;;  res             4   71[BANK0 ] float 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  1    wreg      void 
  2562 ;; Registers used:
  2563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2569 ;;      Params:         0       0       0       0       0       0       0       0       0
  2570 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2571 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2572 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2573 ;;Total ram usage:       24 bytes
  2574 ;; Hardware stack levels required when called: 8
  2575 ;; This function calls:
  2576 ;;		_TFT_FillRect
  2577 ;;		_TFT_FillScreen
  2578 ;;		_TFT_ST7735_Init
  2579 ;;		_TFT_SetRotation
  2580 ;;		_TFT_WriteString
  2581 ;;		___xxtofl
  2582 ;;		_sprintf
  2583 ;; This function is called by:
  2584 ;;		Startup code after reset
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text0
  2589   005544                     __ptext0:
  2590                           	callstack 0
  2591   005544                     _main:
  2592                           	callstack 23
  2593   005544                     
  2594                           ;pruebilla.c: 26:     ADCON1=0X03;
  2595   005544  0E03               	movlw	3
  2596   005546  6EC1               	movwf	193,c	;volatile
  2597                           
  2598                           ;pruebilla.c: 27:     ADCON0=0x00;
  2599   005548  0E00               	movlw	0
  2600   00554A  6EC2               	movwf	194,c	;volatile
  2601                           
  2602                           ;pruebilla.c: 28:     ADCON2=0x8f;
  2603   00554C  0E8F               	movlw	143
  2604   00554E  6EC0               	movwf	192,c	;volatile
  2605   005550                     
  2606                           ;pruebilla.c: 29:     ADCON0bits.ADON=1;
  2607   005550  80C2               	bsf	194,0,c	;volatile
  2608   005552                     
  2609                           ;pruebilla.c: 32:     TFT_ST7735_Init(0x01);
  2610   005552  0E01               	movlw	1
  2611   005554  EC12  F027         	call	_TFT_ST7735_Init
  2612   005558                     
  2613                           ;pruebilla.c: 33:     TFT_SetRotation(0);
  2614   005558  0E00               	movlw	0
  2615   00555A  ECF4  F02C         	call	_TFT_SetRotation
  2616   00555E                     
  2617                           ;pruebilla.c: 34:     TFT_FillScreen(0x001F);
  2618   00555E  0E00               	movlw	0
  2619   005560  6E1A               	movwf	(TFT_FillScreen@color+1)^0,c
  2620   005562  0E1F               	movlw	31
  2621   005564  6E19               	movwf	TFT_FillScreen@color^0,c
  2622   005566  EC15  F024         	call	_TFT_FillScreen	;wreg free
  2623   00556A                     l5736:
  2624                           
  2625                           ;pruebilla.c: 38:     {;pruebilla.c: 40:         ADCON0bits.GODONE=1;
  2626   00556A  82C2               	bsf	194,1,c	;volatile
  2627   00556C                     
  2628                           ;pruebilla.c: 41:         float res=0;
  2629   00556C  0E00               	movlw	0
  2630   00556E  0100               	movlb	0	; () banked
  2631   005570  6FA7               	movwf	main@res& (0+255),b
  2632   005572  0E00               	movlw	0
  2633   005574  6FA8               	movwf	(main@res+1)& (0+255),b
  2634   005576  0E00               	movlw	0
  2635   005578  6FA9               	movwf	(main@res+2)& (0+255),b
  2636   00557A  0E00               	movlw	0
  2637   00557C  6FAA               	movwf	(main@res+3)& (0+255),b
  2638                           
  2639                           ;pruebilla.c: 42:         char cadena[16];;pruebilla.c: 43:         while(ADCON0bits.GOD
      +                          ONE==1){
  2640   00557E  EFE9  F02A         	goto	l5746
  2641   005582                     l61:
  2642   005582  50C3               	movf	195,w,c	;volatile
  2643   005584  50C4               	movf	196,w,c	;volatile
  2644   005586                     
  2645                           ;pruebilla.c: 47:             int calc=(ADRESH<<8)+ADRESL;
  2646   005586  50C4               	movf	196,w,c	;volatile
  2647   005588  0100               	movlb	0	; () banked
  2648   00558A  6F94               	movwf	(??_main+1)& (0+255),b
  2649   00558C  6B93               	clrf	??_main& (0+255),b
  2650   00558E  50C3               	movf	195,w,c	;volatile
  2651   005590  2593               	addwf	??_main& (0+255),w,b
  2652   005592  6FA5               	movwf	main@calc& (0+255),b
  2653   005594  0E00               	movlw	0
  2654   005596  2194               	addwfc	(??_main+1)& (0+255),w,b
  2655   005598  6FA6               	movwf	(main@calc+1)& (0+255),b
  2656   00559A                     
  2657                           ; BSR set to: 0
  2658                           ;pruebilla.c: 48:             res=(float)calc;
  2659   00559A  C0A5  F001         	movff	main@calc,___xxtofl@val
  2660   00559E  C0A6  F002         	movff	main@calc+1,___xxtofl@val+1
  2661   0055A2  0E00               	movlw	0
  2662   0055A4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2663   0055A6  0EFF               	movlw	-1
  2664   0055A8  6E03               	movwf	(___xxtofl@val+2)^0,c
  2665   0055AA  6E04               	movwf	(___xxtofl@val+3)^0,c
  2666   0055AC  0E01               	movlw	1
  2667   0055AE  EC1A  F02C         	call	___xxtofl
  2668   0055B2  C001  F0A7         	movff	?___xxtofl,main@res
  2669   0055B6  C002  F0A8         	movff	?___xxtofl+1,main@res+1
  2670   0055BA  C003  F0A9         	movff	?___xxtofl+2,main@res+2
  2671   0055BE  C004  F0AA         	movff	?___xxtofl+3,main@res+3
  2672   0055C2                     
  2673                           ;pruebilla.c: 50:             _delay((unsigned long)((10)*(48000000/4000.0)));
  2674   0055C2  0E9C               	movlw	156
  2675   0055C4  0100               	movlb	0	; () banked
  2676   0055C6  6F93               	movwf	??_main& (0+255),b
  2677   0055C8  0ED7               	movlw	215
  2678   0055CA                     u6727:
  2679   0055CA  2EE8               	decfsz	wreg,f,c
  2680   0055CC  D7FE               	bra	u6727
  2681   0055CE  2F93               	decfsz	??_main& (0+255),f,b
  2682   0055D0  D7FC               	bra	u6727
  2683   0055D2                     l5746:
  2684                           
  2685                           ;pruebilla.c: 43:         while(ADCON0bits.GODONE==1){
  2686   0055D2  B2C2               	btfsc	194,1,c	;volatile
  2687   0055D4  EFEE  F02A         	goto	u6711
  2688   0055D8  EFF0  F02A         	goto	u6710
  2689   0055DC                     u6711:
  2690   0055DC  EFC1  F02A         	goto	l61
  2691   0055E0                     u6710:
  2692   0055E0                     
  2693                           ;pruebilla.c: 52:         cadena[0]=' ';
  2694   0055E0  0E20               	movlw	32
  2695   0055E2  0100               	movlb	0	; () banked
  2696   0055E4  6F95               	movwf	main@cadena& (0+255),b
  2697                           
  2698                           ;pruebilla.c: 53:         cadena[1]=' ';
  2699   0055E6  0E20               	movlw	32
  2700   0055E8  6F96               	movwf	(main@cadena+1)& (0+255),b
  2701                           
  2702                           ;pruebilla.c: 54:         cadena[2]=' ';
  2703   0055EA  0E20               	movlw	32
  2704   0055EC  6F97               	movwf	(main@cadena+2)& (0+255),b
  2705                           
  2706                           ;pruebilla.c: 55:         cadena[3]=' ';
  2707   0055EE  0E20               	movlw	32
  2708   0055F0  6F98               	movwf	(main@cadena+3)& (0+255),b
  2709                           
  2710                           ;pruebilla.c: 56:         cadena[4]=' ';
  2711   0055F2  0E20               	movlw	32
  2712   0055F4  6F99               	movwf	(main@cadena+4)& (0+255),b
  2713                           
  2714                           ;pruebilla.c: 57:         cadena[5]=' ';
  2715   0055F6  0E20               	movlw	32
  2716   0055F8  6F9A               	movwf	(main@cadena+5)& (0+255),b
  2717                           
  2718                           ;pruebilla.c: 58:         cadena[6]=' ';
  2719   0055FA  0E20               	movlw	32
  2720   0055FC  6F9B               	movwf	(main@cadena+6)& (0+255),b
  2721   0055FE                     
  2722                           ; BSR set to: 0
  2723                           ;pruebilla.c: 59:         sprintf(cadena,"%0.2f",res);
  2724   0055FE  0E95               	movlw	low main@cadena
  2725   005600  6F8C               	movwf	sprintf@s& (0+255),b
  2726   005602  0EF1               	movlw	low STR_1
  2727   005604  6F8D               	movwf	sprintf@fmt& (0+255),b
  2728   005606  0E7F               	movlw	high STR_1
  2729   005608  6F8E               	movwf	(sprintf@fmt+1)& (0+255),b
  2730   00560A  C0A7  F08F         	movff	main@res,?_sprintf+3
  2731   00560E  C0A8  F090         	movff	main@res+1,?_sprintf+4
  2732   005612  C0A9  F091         	movff	main@res+2,?_sprintf+5
  2733   005616  C0AA  F092         	movff	main@res+3,?_sprintf+6
  2734   00561A  EC9D  F024         	call	_sprintf	;wreg free
  2735   00561E                     
  2736                           ;pruebilla.c: 60:         TFT_WriteString(0, 10, "<medida resistencia>" , 0x07E0, 0x0000
      +                          , 1);
  2737   00561E  0E00               	movlw	0
  2738   005620  6E23               	movwf	(TFT_WriteString@x+1)^0,c
  2739   005622  0E00               	movlw	0
  2740   005624  6E22               	movwf	TFT_WriteString@x^0,c
  2741   005626  0E00               	movlw	0
  2742   005628  6E25               	movwf	(TFT_WriteString@y+1)^0,c
  2743   00562A  0E0A               	movlw	10
  2744   00562C  6E24               	movwf	TFT_WriteString@y^0,c
  2745   00562E  0EDC               	movlw	low STR_2
  2746   005630  6E26               	movwf	TFT_WriteString@str^0,c
  2747   005632  0E7F               	movlw	high STR_2
  2748   005634  6E27               	movwf	(TFT_WriteString@str+1)^0,c
  2749   005636  0E07               	movlw	7
  2750   005638  6E29               	movwf	(TFT_WriteString@color+1)^0,c
  2751   00563A  0EE0               	movlw	224
  2752   00563C  6E28               	movwf	TFT_WriteString@color^0,c
  2753   00563E  0E00               	movlw	0
  2754   005640  6E2B               	movwf	(TFT_WriteString@bg+1)^0,c
  2755   005642  0E00               	movlw	0
  2756   005644  6E2A               	movwf	TFT_WriteString@bg^0,c
  2757   005646  0E01               	movlw	1
  2758   005648  6E2C               	movwf	TFT_WriteString@size^0,c
  2759   00564A  EC4F  F02B         	call	_TFT_WriteString	;wreg free
  2760   00564E                     
  2761                           ;pruebilla.c: 62:         TFT_WriteString(1, 40, cadena, 0x07E0, 0x0000, 1);
  2762   00564E  0E00               	movlw	0
  2763   005650  6E23               	movwf	(TFT_WriteString@x+1)^0,c
  2764   005652  0E01               	movlw	1
  2765   005654  6E22               	movwf	TFT_WriteString@x^0,c
  2766   005656  0E00               	movlw	0
  2767   005658  6E25               	movwf	(TFT_WriteString@y+1)^0,c
  2768   00565A  0E28               	movlw	40
  2769   00565C  6E24               	movwf	TFT_WriteString@y^0,c
  2770   00565E  0E95               	movlw	low main@cadena
  2771   005660  6E26               	movwf	TFT_WriteString@str^0,c
  2772   005662  6A27               	clrf	(TFT_WriteString@str+1)^0,c
  2773   005664  0E07               	movlw	7
  2774   005666  6E29               	movwf	(TFT_WriteString@color+1)^0,c
  2775   005668  0EE0               	movlw	224
  2776   00566A  6E28               	movwf	TFT_WriteString@color^0,c
  2777   00566C  0E00               	movlw	0
  2778   00566E  6E2B               	movwf	(TFT_WriteString@bg+1)^0,c
  2779   005670  0E00               	movlw	0
  2780   005672  6E2A               	movwf	TFT_WriteString@bg^0,c
  2781   005674  0E01               	movlw	1
  2782   005676  6E2C               	movwf	TFT_WriteString@size^0,c
  2783   005678  EC4F  F02B         	call	_TFT_WriteString	;wreg free
  2784   00567C                     
  2785                           ;pruebilla.c: 64:         TFT_FillRect(80,40,60,60,0x001F);
  2786   00567C  0E28               	movlw	40
  2787   00567E  6E08               	movwf	TFT_FillRect@y^0,c
  2788   005680  0E3C               	movlw	60
  2789   005682  6E09               	movwf	TFT_FillRect@w^0,c
  2790   005684  0E3C               	movlw	60
  2791   005686  6E0A               	movwf	TFT_FillRect@h^0,c
  2792   005688  0E00               	movlw	0
  2793   00568A  6E0C               	movwf	(TFT_FillRect@color+1)^0,c
  2794   00568C  0E1F               	movlw	31
  2795   00568E  6E0B               	movwf	TFT_FillRect@color^0,c
  2796   005690  0E50               	movlw	80
  2797   005692  EC0E  F02A         	call	_TFT_FillRect
  2798   005696  EFB5  F02A         	goto	l5736
  2799   00569A  EF00  F000         	goto	start
  2800   00569E                     __end_of_main:
  2801                           	callstack 0
  2802                           
  2803 ;; *************** function _sprintf *****************
  2804 ;; Defined at:
  2805 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  s               1   44[BANK0 ] PTR unsigned char 
  2808 ;;		 -> main@cadena(16), 
  2809 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  2810 ;;		 -> STR_1(6), 
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  f              12   73[COMRAM] struct _IO_FILE
  2813 ;;  ret             2    0        int 
  2814 ;;  ap              1   72[COMRAM] PTR void [1]
  2815 ;;		 -> ?_sprintf(2), 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  2   44[BANK0 ] int 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2825 ;;      Params:         0       7       0       0       0       0       0       0       0
  2826 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2828 ;;      Totals:        13       7       0       0       0       0       0       0       0
  2829 ;;Total ram usage:       20 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; Hardware stack levels required when called: 7
  2832 ;; This function calls:
  2833 ;;		_vfprintf
  2834 ;; This function is called by:
  2835 ;;		_main
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text1
  2840   00493A                     __ptext1:
  2841                           	callstack 0
  2842   00493A                     _sprintf:
  2843                           	callstack 23
  2844   00493A  0E8F               	movlw	low (?_sprintf+3)
  2845   00493C  6E49               	movwf	sprintf@ap^0,c
  2846   00493E  C08C  F04A         	movff	sprintf@s,sprintf@f
  2847   004942  0E00               	movlw	0
  2848   004944  6E4E               	movwf	(sprintf@f+4)^0,c
  2849   004946  0E00               	movlw	0
  2850   004948  6E4D               	movwf	(sprintf@f+3)^0,c
  2851   00494A  0E00               	movlw	0
  2852   00494C  6E55               	movwf	(sprintf@f+11)^0,c
  2853   00494E  0E00               	movlw	0
  2854   004950  6E54               	movwf	(sprintf@f+10)^0,c
  2855   004952  0E4A               	movlw	low sprintf@f
  2856   004954  6E43               	movwf	vfprintf@fp^0,c
  2857   004956  C08D  F044         	movff	sprintf@fmt,vfprintf@fmt
  2858   00495A  C08E  F045         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2859   00495E  0E49               	movlw	low sprintf@ap
  2860   004960  6E46               	movwf	vfprintf@ap^0,c
  2861   004962  ECDA  F024         	call	_vfprintf	;wreg free
  2862   004966  0100               	movlb	0	; () banked
  2863   004968  518C               	movf	sprintf@s& (0+255),w,b
  2864   00496A  244D               	addwf	(sprintf@f+3)^0,w,c
  2865   00496C  6ED9               	movwf	fsr2l,c
  2866   00496E  6ADA               	clrf	fsr2h,c
  2867   004970  6ADF               	clrf	indf2,c
  2868   004972                     
  2869                           ; BSR set to: 0
  2870   004972  0012               	return		;funcret
  2871   004974                     __end_of_sprintf:
  2872                           	callstack 0
  2873                           
  2874 ;; *************** function _vfprintf *****************
  2875 ;; Defined at:
  2876 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  fp              1   66[COMRAM] PTR struct _IO_FILE
  2879 ;;		 -> sprintf@f(12), 
  2880 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2881 ;;		 -> STR_1(6), 
  2882 ;;  ap              1   69[COMRAM] PTR PTR void 
  2883 ;;		 -> sprintf@ap(1), 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  cfmt            2   70[COMRAM] PTR unsigned char 
  2886 ;;		 -> STR_1(6), 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2   66[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2896 ;;      Params:         4       0       0       0       0       0       0       0       0
  2897 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2899 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2900 ;;Total ram usage:        6 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 6
  2903 ;; This function calls:
  2904 ;;		_vfpfcnvrt
  2905 ;; This function is called by:
  2906 ;;		_sprintf
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text2
  2911   0049B4                     __ptext2:
  2912                           	callstack 0
  2913   0049B4                     _vfprintf:
  2914                           	callstack 23
  2915   0049B4                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2917   0049B4  C044  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  2918   0049B8  C045  F048         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2921   0049BC  EFE8  F024         	goto	l5708
  2922   0049C0                     l5706:
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2925   0049C0  C043  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  2926   0049C4  0E47               	movlw	low vfprintf@cfmt
  2927   0049C6  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2928   0049C8  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2929   0049CC  ECFA  F02E         	call	_vfpfcnvrt	;wreg free
  2930   0049D0                     l5708:
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2933   0049D0  C047  FFF6         	movff	vfprintf@cfmt,tblptrl
  2934   0049D4  C048  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2935   0049D8                     	if	0	;tblptru may be non-zero
  2936   0049D8                     	endif
  2937   0049D8                     	if	0	;tblptru may be non-zero
  2938   0049D8                     	endif
  2939   0049D8  0008               	tblrd		*
  2940   0049DA  50F5               	movf	tablat,w,c
  2941   0049DC  0900               	iorlw	0
  2942   0049DE  A4D8               	btfss	status,2,c
  2943   0049E0  EFF4  F024         	goto	u6701
  2944   0049E4  EFF6  F024         	goto	u6700
  2945   0049E8                     u6701:
  2946   0049E8  EFE0  F024         	goto	l5706
  2947   0049EC                     u6700:
  2948   0049EC                     
  2949                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2950   0049EC  0E00               	movlw	0
  2951   0049EE  6E44               	movwf	(?_vfprintf+1)^0,c
  2952   0049F0  0E00               	movlw	0
  2953   0049F2  6E43               	movwf	?_vfprintf^0,c
  2954   0049F4  0012               	return		;funcret
  2955   0049F6                     __end_of_vfprintf:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _vfpfcnvrt *****************
  2959 ;; Defined at:
  2960 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  2963 ;;		 -> sprintf@f(12), 
  2964 ;;  fmt             1   54[COMRAM] PTR PTR unsigned char 
  2965 ;;		 -> vfprintf@cfmt(2), 
  2966 ;;  ap              1   55[COMRAM] PTR PTR void 
  2967 ;;		 -> sprintf@ap(1), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  convarg         4   58[COMRAM] struct .
  2970 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2971 ;;		 -> STR_1(6), 
  2972 ;;  c               1   63[COMRAM] unsigned char 
  2973 ;;  done            1   62[COMRAM] _Bool 
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2983 ;;      Params:         3       0       0       0       0       0       0       0       0
  2984 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2985 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2986 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2987 ;;Total ram usage:       13 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 5
  2990 ;; This function calls:
  2991 ;;		_efgtoa
  2992 ;;		_fputc
  2993 ;;		_read_prec_or_width
  2994 ;; This function is called by:
  2995 ;;		_vfprintf
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text3
  3000   005DF4                     __ptext3:
  3001                           	callstack 0
  3002   005DF4                     _vfpfcnvrt:
  3003                           	callstack 23
  3004   005DF4                     
  3005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3006   005DF4  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3007   005DF6  6ED9               	movwf	fsr2l,c
  3008   005DF8  6ADA               	clrf	fsr2h,c
  3009   005DFA  CFDE FFF6          	movff	postinc2,tblptrl
  3010   005DFE  CFDD FFF7          	movff	postdec2,tblptrh
  3011   005E02                     	if	0	;tblptru may be non-zero
  3012   005E02                     	endif
  3013   005E02                     	if	0	;tblptru may be non-zero
  3014   005E02                     	endif
  3015   005E02  0008               	tblrd		*
  3016   005E04  50F5               	movf	tablat,w,c
  3017   005E06  0A25               	xorlw	37
  3018   005E08  A4D8               	btfss	status,2,c
  3019   005E0A  EF09  F02F         	goto	u6661
  3020   005E0E  EF0B  F02F         	goto	u6660
  3021   005E12                     u6661:
  3022   005E12  EF0A  F030         	goto	l5698
  3023   005E16                     u6660:
  3024   005E16                     
  3025                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3026   005E16  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3027   005E18  6ED9               	movwf	fsr2l,c
  3028   005E1A  6ADA               	clrf	fsr2h,c
  3029   005E1C  2ADE               	incf	postinc2,f,c
  3030   005E1E  0E00               	movlw	0
  3031   005E20  22DD               	addwfc	postdec2,f,c
  3032   005E22                     
  3033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3034   005E22  0E00               	movlw	0
  3035   005E24  0100               	movlb	0	; () banked
  3036   005E26  6FB4               	movwf	(_width+1)& (0+255),b
  3037   005E28  0E00               	movlw	0
  3038   005E2A  6FB3               	movwf	_width& (0+255),b
  3039   005E2C  C0B3  F0B7         	movff	_width,_flags
  3040   005E30                     
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3043   005E30  69B5               	setf	_prec& (0+255),b
  3044   005E32  69B6               	setf	(_prec+1)& (0+255),b
  3045   005E34                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  3048   005E34  0E00               	movlw	0
  3049   005E36  6E3F               	movwf	vfpfcnvrt@done^0,c
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3052   005E38  EF3B  F02F         	goto	l5652
  3053   005E3C                     l5642:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3056   005E3C  0100               	movlb	0	; () banked
  3057   005E3E  83B7               	bsf	_flags& (0+255),1,b
  3058   005E40                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3061   005E40  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3062   005E42  6ED9               	movwf	fsr2l,c
  3063   005E44  6ADA               	clrf	fsr2h,c
  3064   005E46  2ADE               	incf	postinc2,f,c
  3065   005E48  0E00               	movlw	0
  3066   005E4A  22DD               	addwfc	postdec2,f,c
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3069   005E4C  EF3B  F02F         	goto	l5652
  3070   005E50                     l5646:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3073   005E50  0E01               	movlw	1
  3074   005E52  6E3F               	movwf	vfpfcnvrt@done^0,c
  3075                           
  3076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3077   005E54  EF3B  F02F         	goto	l5652
  3078   005E58                     l5650:
  3079   005E58  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3080   005E5A  6ED9               	movwf	fsr2l,c
  3081   005E5C  6ADA               	clrf	fsr2h,c
  3082   005E5E  CFDE FFF6          	movff	postinc2,tblptrl
  3083   005E62  CFDD FFF7          	movff	postdec2,tblptrh
  3084   005E66                     	if	0	;tblptru may be non-zero
  3085   005E66                     	endif
  3086   005E66                     	if	0	;tblptru may be non-zero
  3087   005E66                     	endif
  3088   005E66  0008               	tblrd		*
  3089   005E68  50F5               	movf	tablat,w,c
  3090                           
  3091                           ; Switch size 1, requested type "simple"
  3092                           ; Number of cases is 1, Range of values is 48 to 48
  3093                           ; switch strategies available:
  3094                           ; Name         Instructions Cycles
  3095                           ; simple_byte            4     3 (average)
  3096                           ;	Chosen strategy is simple_byte
  3097   005E6A  0A30               	xorlw	48	; case 48
  3098   005E6C  B4D8               	btfsc	status,2,c
  3099   005E6E  EF1E  F02F         	goto	l5642
  3100   005E72  EF28  F02F         	goto	l5646
  3101   005E76                     l5652:
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3104   005E76  503F               	movf	vfpfcnvrt@done^0,w,c
  3105   005E78  B4D8               	btfsc	status,2,c
  3106   005E7A  EF41  F02F         	goto	u6671
  3107   005E7E  EF43  F02F         	goto	u6670
  3108   005E82                     u6671:
  3109   005E82  EF2C  F02F         	goto	l5650
  3110   005E86                     u6670:
  3111   005E86                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3113   005E86  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3114   005E88  6ED9               	movwf	fsr2l,c
  3115   005E8A  6ADA               	clrf	fsr2h,c
  3116   005E8C  CFDE FFF6          	movff	postinc2,tblptrl
  3117   005E90  CFDD FFF7          	movff	postdec2,tblptrh
  3118   005E94                     	if	0	;tblptru may be non-zero
  3119   005E94                     	endif
  3120   005E94                     	if	0	;tblptru may be non-zero
  3121   005E94                     	endif
  3122   005E94  0008               	tblrd		*
  3123   005E96  50F5               	movf	tablat,w,c
  3124   005E98  0A2E               	xorlw	46
  3125   005E9A  A4D8               	btfss	status,2,c
  3126   005E9C  EF52  F02F         	goto	u6681
  3127   005EA0  EF54  F02F         	goto	u6680
  3128   005EA4                     u6681:
  3129   005EA4  EF64  F02F         	goto	l5660
  3130   005EA8                     u6680:
  3131   005EA8                     
  3132                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3133   005EA8  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3134   005EAA  6ED9               	movwf	fsr2l,c
  3135   005EAC  6ADA               	clrf	fsr2h,c
  3136   005EAE  2ADE               	incf	postinc2,f,c
  3137   005EB0  0E00               	movlw	0
  3138   005EB2  22DD               	addwfc	postdec2,f,c
  3139   005EB4                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3141   005EB4  C037  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3142   005EB8  C038  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3143   005EBC  EC68  F027         	call	_read_prec_or_width	;wreg free
  3144   005EC0  C007  F0B5         	movff	?_read_prec_or_width,_prec
  3145   005EC4  C008  F0B6         	movff	?_read_prec_or_width+1,_prec+1
  3146   005EC8                     l5660:
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3149   005EC8  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3150   005ECA  6ED9               	movwf	fsr2l,c
  3151   005ECC  6ADA               	clrf	fsr2h,c
  3152   005ECE  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  3153   005ED2  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  3154   005ED6                     
  3155                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3156   005ED6  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3157   005EDA  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3158   005EDE                     	if	0	;tblptru may be non-zero
  3159   005EDE                     	endif
  3160   005EDE                     	if	0	;tblptru may be non-zero
  3161   005EDE                     	endif
  3162   005EDE  0008               	tblrd		*
  3163   005EE0  CFF5 F040          	movff	tablat,vfpfcnvrt@c
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3166   005EE4  EF80  F02F         	goto	l5672
  3167   005EE8                     l5664:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3170   005EE8  4A41               	infsnz	vfpfcnvrt@cp^0,f,c
  3171   005EEA  2A42               	incf	(vfpfcnvrt@cp+1)^0,f,c
  3172                           
  3173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  3174   005EEC  EF8F  F02F         	goto	l5674
  3175   005EF0                     l5666:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3178   005EF0  0E6C               	movlw	108
  3179   005EF2  6E40               	movwf	vfpfcnvrt@c^0,c
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  3182   005EF4  EF8F  F02F         	goto	l5674
  3183   005EF8                     l5668:
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3186   005EF8  0E00               	movlw	0
  3187   005EFA  6E40               	movwf	vfpfcnvrt@c^0,c
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  3190   005EFC  EF8F  F02F         	goto	l5674
  3191   005F00                     l5672:
  3192   005F00  5040               	movf	vfpfcnvrt@c^0,w,c
  3193                           
  3194                           ; Switch size 1, requested type "simple"
  3195                           ; Number of cases is 3, Range of values is 76 to 108
  3196                           ; switch strategies available:
  3197                           ; Name         Instructions Cycles
  3198                           ; simple_byte           10     6 (average)
  3199                           ;	Chosen strategy is simple_byte
  3200   005F02  0A4C               	xorlw	76	; case 76
  3201   005F04  B4D8               	btfsc	status,2,c
  3202   005F06  EF74  F02F         	goto	l5664
  3203   005F0A  0A2A               	xorlw	42	; case 102
  3204   005F0C  B4D8               	btfsc	status,2,c
  3205   005F0E  EF78  F02F         	goto	l5666
  3206   005F12  0A0A               	xorlw	10	; case 108
  3207   005F14  B4D8               	btfsc	status,2,c
  3208   005F16  EF74  F02F         	goto	l5664
  3209   005F1A  EF7C  F02F         	goto	l5668
  3210   005F1E                     l5674:
  3211   005F1E  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3212   005F22  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3213   005F26                     	if	0	;tblptru may be non-zero
  3214   005F26                     	endif
  3215   005F26                     	if	0	;tblptru may be non-zero
  3216   005F26                     	endif
  3217   005F26  0008               	tblrd		*
  3218   005F28  50F5               	movf	tablat,w,c
  3219   005F2A  0A66               	xorlw	102
  3220   005F2C  A4D8               	btfss	status,2,c
  3221   005F2E  EF9B  F02F         	goto	u6691
  3222   005F32  EF9D  F02F         	goto	u6690
  3223   005F36                     u6691:
  3224   005F36  EF02  F030         	goto	l5694
  3225   005F3A                     u6690:
  3226   005F3A  EFC7  F02F         	goto	l5682
  3227   005F3E                     l5676:
  3228                           
  3229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3230   005F3E  5038               	movf	vfpfcnvrt@ap^0,w,c
  3231   005F40  6ED9               	movwf	fsr2l,c
  3232   005F42  6ADA               	clrf	fsr2h,c
  3233   005F44  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3234   005F48  0E04               	movlw	4
  3235   005F4A  26DF               	addwf	indf2,f,c
  3236   005F4C  5039               	movf	??_vfpfcnvrt^0,w,c
  3237   005F4E  6ED9               	movwf	fsr2l,c
  3238   005F50  6ADA               	clrf	fsr2h,c
  3239   005F52  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  3240   005F56  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  3241   005F5A  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  3242   005F5E  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  3245   005F62  EFD2  F02F         	goto	l5684
  3246   005F66                     l5678:
  3247                           
  3248                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3249   005F66  5038               	movf	vfpfcnvrt@ap^0,w,c
  3250   005F68  6ED9               	movwf	fsr2l,c
  3251   005F6A  6ADA               	clrf	fsr2h,c
  3252   005F6C  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3253   005F70  0E04               	movlw	4
  3254   005F72  26DF               	addwf	indf2,f,c
  3255   005F74  5039               	movf	??_vfpfcnvrt^0,w,c
  3256   005F76  6ED9               	movwf	fsr2l,c
  3257   005F78  6ADA               	clrf	fsr2h,c
  3258   005F7A  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  3259   005F7E  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  3260   005F82  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  3261   005F86  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  3264   005F8A  EFD2  F02F         	goto	l5684
  3265   005F8E                     l5682:
  3266   005F8E  5040               	movf	vfpfcnvrt@c^0,w,c
  3267                           
  3268                           ; Switch size 1, requested type "simple"
  3269                           ; Number of cases is 2, Range of values is 76 to 108
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte            7     4 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274   005F90  0A4C               	xorlw	76	; case 76
  3275   005F92  B4D8               	btfsc	status,2,c
  3276   005F94  EFB3  F02F         	goto	l5678
  3277   005F98  0A20               	xorlw	32	; case 108
  3278   005F9A  B4D8               	btfsc	status,2,c
  3279   005F9C  EF9F  F02F         	goto	l5676
  3280   005FA0  EFD2  F02F         	goto	l5684
  3281   005FA4                     l5684:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3284   005FA4  0E01               	movlw	1
  3285   005FA6  2441               	addwf	vfpfcnvrt@cp^0,w,c
  3286   005FA8  6E39               	movwf	??_vfpfcnvrt^0,c
  3287   005FAA  0E00               	movlw	0
  3288   005FAC  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3289   005FAE  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3290   005FB0  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3291   005FB2  6ED9               	movwf	fsr2l,c
  3292   005FB4  6ADA               	clrf	fsr2h,c
  3293   005FB6  C039  FFDE         	movff	??_vfpfcnvrt,postinc2
  3294   005FBA  C03A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3297   005FBE  EFF6  F02F         	goto	l5692
  3298   005FC2                     l5686:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3301   005FC2  C036  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3302   005FC6  C03B  F02F         	movff	vfpfcnvrt@convarg,efgtoa@f
  3303   005FCA  C03C  F030         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3304   005FCE  C03D  F031         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3305   005FD2  C03E  F032         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3306   005FD6  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3307   005FDA  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3308   005FDE                     	if	0	;tblptru may be non-zero
  3309   005FDE                     	endif
  3310   005FDE                     	if	0	;tblptru may be non-zero
  3311   005FDE                     	endif
  3312   005FDE  0008               	tblrd		*
  3313   005FE0  CFF5 F033          	movff	tablat,efgtoa@c
  3314   005FE4  ECB0  F037         	call	_efgtoa	;wreg free
  3315   005FE8  EF1B  F030         	goto	l1301
  3316   005FEC                     l5692:
  3317   005FEC  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3318   005FF0  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3319   005FF4                     	if	0	;tblptru may be non-zero
  3320   005FF4                     	endif
  3321   005FF4                     	if	0	;tblptru may be non-zero
  3322   005FF4                     	endif
  3323   005FF4  0008               	tblrd		*
  3324   005FF6  50F5               	movf	tablat,w,c
  3325                           
  3326                           ; Switch size 1, requested type "simple"
  3327                           ; Number of cases is 1, Range of values is 102 to 102
  3328                           ; switch strategies available:
  3329                           ; Name         Instructions Cycles
  3330                           ; simple_byte            4     3 (average)
  3331                           ;	Chosen strategy is simple_byte
  3332   005FF8  0A66               	xorlw	102	; case 102
  3333   005FFA  B4D8               	btfsc	status,2,c
  3334   005FFC  EFE1  F02F         	goto	l5686
  3335   006000  EF02  F030         	goto	l5694
  3336   006004                     l5694:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3339   006004  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3340   006006  6ED9               	movwf	fsr2l,c
  3341   006008  6ADA               	clrf	fsr2h,c
  3342   00600A  2ADE               	incf	postinc2,f,c
  3343   00600C  0E00               	movlw	0
  3344   00600E  22DD               	addwfc	postdec2,f,c
  3345   006010  EF1B  F030         	goto	l1301
  3346   006014                     l5698:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3349   006014  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3350   006016  6ED9               	movwf	fsr2l,c
  3351   006018  6ADA               	clrf	fsr2h,c
  3352   00601A  CFDE FFF6          	movff	postinc2,tblptrl
  3353   00601E  CFDD FFF7          	movff	postdec2,tblptrh
  3354   006022                     	if	0	;tblptru may be non-zero
  3355   006022                     	endif
  3356   006022                     	if	0	;tblptru may be non-zero
  3357   006022                     	endif
  3358   006022  0008               	tblrd		*
  3359   006024  50F5               	movf	tablat,w,c
  3360   006026  6E01               	movwf	fputc@c^0,c
  3361   006028  6A02               	clrf	(fputc@c+1)^0,c
  3362   00602A  C036  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3363   00602E  ECBD  F026         	call	_fputc	;wreg free
  3364   006032  EF02  F030         	goto	l5694
  3365   006036                     l1301:
  3366   006036  0012               	return		;funcret
  3367   006038                     __end_of_vfpfcnvrt:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _read_prec_or_width *****************
  3371 ;; Defined at:
  3372 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3375 ;;		 -> vfprintf@cfmt(2), 
  3376 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3377 ;;		 -> sprintf@ap(1), 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  c               1    8[COMRAM] unsigned char 
  3380 ;;  n               2    9[COMRAM] int 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  2    6[COMRAM] int 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3390 ;;      Params:         2       0       0       0       0       0       0       0       0
  3391 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3393 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        5 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 1
  3397 ;; This function calls:
  3398 ;;		___wmul
  3399 ;; This function is called by:
  3400 ;;		_vfpfcnvrt
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text4
  3405   004ED0                     __ptext4:
  3406                           	callstack 0
  3407   004ED0                     _read_prec_or_width:
  3408                           	callstack 26
  3409   004ED0                     
  3410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3411   004ED0  0E00               	movlw	0
  3412   004ED2  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3413   004ED4  0E00               	movlw	0
  3414   004ED6  6E0A               	movwf	read_prec_or_width@n^0,c
  3415   004ED8                     
  3416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3417   004ED8  5007               	movf	read_prec_or_width@fmt^0,w,c
  3418   004EDA  6ED9               	movwf	fsr2l,c
  3419   004EDC  6ADA               	clrf	fsr2h,c
  3420   004EDE  CFDE FFF6          	movff	postinc2,tblptrl
  3421   004EE2  CFDD FFF7          	movff	postdec2,tblptrh
  3422   004EE6                     	if	0	;tblptru may be non-zero
  3423   004EE6                     	endif
  3424   004EE6                     	if	0	;tblptru may be non-zero
  3425   004EE6                     	endif
  3426   004EE6  0008               	tblrd		*
  3427   004EE8  50F5               	movf	tablat,w,c
  3428   004EEA  0A2A               	xorlw	42
  3429   004EEC  A4D8               	btfss	status,2,c
  3430   004EEE  EF7B  F027         	goto	u4771
  3431   004EF2  EF7D  F027         	goto	u4770
  3432   004EF6                     u4771:
  3433   004EF6  EFA7  F027         	goto	l4344
  3434   004EFA                     u4770:
  3435   004EFA                     
  3436                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3437   004EFA  5007               	movf	read_prec_or_width@fmt^0,w,c
  3438   004EFC  6ED9               	movwf	fsr2l,c
  3439   004EFE  6ADA               	clrf	fsr2h,c
  3440   004F00  2ADE               	incf	postinc2,f,c
  3441   004F02  0E00               	movlw	0
  3442   004F04  22DD               	addwfc	postdec2,f,c
  3443   004F06                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3445   004F06  5008               	movf	read_prec_or_width@ap^0,w,c
  3446   004F08  6ED9               	movwf	fsr2l,c
  3447   004F0A  6ADA               	clrf	fsr2h,c
  3448   004F0C  0E02               	movlw	2
  3449   004F0E  26DF               	addwf	indf2,f,c
  3450   004F10  5CDF               	subwf	indf2,w,c
  3451   004F12  6ED9               	movwf	fsr2l,c
  3452   004F14  6ADA               	clrf	fsr2h,c
  3453   004F16  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3454   004F1A  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3455                           
  3456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3457   004F1E  EFBA  F027         	goto	l1270
  3458   004F22                     l4340:
  3459                           
  3460                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3461   004F22  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3462   004F26  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3463   004F2A  0E00               	movlw	0
  3464   004F2C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3465   004F2E  0E0A               	movlw	10
  3466   004F30  6E03               	movwf	___wmul@multiplicand^0,c
  3467   004F32  EC36  F024         	call	___wmul	;wreg free
  3468   004F36  5009               	movf	read_prec_or_width@c^0,w,c
  3469   004F38  2401               	addwf	?___wmul^0,w,c
  3470   004F3A  6E0A               	movwf	read_prec_or_width@n^0,c
  3471   004F3C  0E00               	movlw	0
  3472   004F3E  2002               	addwfc	(?___wmul+1)^0,w,c
  3473   004F40  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3474   004F42                     
  3475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3476   004F42  5007               	movf	read_prec_or_width@fmt^0,w,c
  3477   004F44  6ED9               	movwf	fsr2l,c
  3478   004F46  6ADA               	clrf	fsr2h,c
  3479   004F48  2ADE               	incf	postinc2,f,c
  3480   004F4A  0E00               	movlw	0
  3481   004F4C  22DD               	addwfc	postdec2,f,c
  3482   004F4E                     l4344:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3485   004F4E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3486   004F50  6ED9               	movwf	fsr2l,c
  3487   004F52  6ADA               	clrf	fsr2h,c
  3488   004F54  CFDE FFF6          	movff	postinc2,tblptrl
  3489   004F58  CFDD FFF7          	movff	postdec2,tblptrh
  3490   004F5C                     	if	0	;tblptru may be non-zero
  3491   004F5C                     	endif
  3492   004F5C                     	if	0	;tblptru may be non-zero
  3493   004F5C                     	endif
  3494   004F5C  0008               	tblrd		*
  3495   004F5E  50F5               	movf	tablat,w,c
  3496   004F60  0FD0               	addlw	208
  3497   004F62  6E09               	movwf	read_prec_or_width@c^0,c
  3498   004F64  0E09               	movlw	9
  3499   004F66  6409               	cpfsgt	read_prec_or_width@c^0,c
  3500   004F68  EFB8  F027         	goto	u4781
  3501   004F6C  EFBA  F027         	goto	u4780
  3502   004F70                     u4781:
  3503   004F70  EF91  F027         	goto	l4340
  3504   004F74                     u4780:
  3505   004F74                     l1270:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3508   004F74  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3509   004F78  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3510   004F7C  0012               	return		;funcret
  3511   004F7E                     __end_of_read_prec_or_width:
  3512                           	callstack 0
  3513                           
  3514 ;; *************** function ___wmul *****************
  3515 ;; Defined at:
  3516 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  multiplier      2    0[COMRAM] unsigned int 
  3519 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  product         2    4[COMRAM] unsigned int 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2    0[COMRAM] unsigned int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, prodl, prodh
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3531 ;;      Params:         4       0       0       0       0       0       0       0       0
  3532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3534 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3535 ;;Total ram usage:        6 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_read_prec_or_width
  3541 ;;		_TFT_FillTriangle
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text5
  3546   00486C                     __ptext5:
  3547                           	callstack 0
  3548   00486C                     ___wmul:
  3549                           	callstack 26
  3550   00486C  5001               	movf	___wmul@multiplier^0,w,c
  3551   00486E  0203               	mulwf	___wmul@multiplicand^0,c
  3552   004870  CFF3 F005          	movff	prodl,___wmul@product
  3553   004874  CFF4 F006          	movff	prodh,___wmul@product+1
  3554   004878  5001               	movf	___wmul@multiplier^0,w,c
  3555   00487A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3556   00487C  50F3               	movf	243,w,c
  3557   00487E  2606               	addwf	(___wmul@product+1)^0,f,c
  3558   004880  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3559   004882  0203               	mulwf	___wmul@multiplicand^0,c
  3560   004884  50F3               	movf	243,w,c
  3561   004886  2606               	addwf	(___wmul@product+1)^0,f,c
  3562   004888  C005  F001         	movff	___wmul@product,?___wmul
  3563   00488C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3564   004890  0012               	return		;funcret
  3565   004892                     __end_of___wmul:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _efgtoa *****************
  3569 ;; Defined at:
  3570 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  3573 ;;		 -> sprintf@f(12), 
  3574 ;;  f               4   46[COMRAM] PTR struct _IO_FILE
  3575 ;;  c               1   50[COMRAM] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  u               4   40[BANK0 ] struct flui
  3578 ;;  g               4   34[BANK0 ] struct flui
  3579 ;;  l               4   27[BANK0 ] struct flui
  3580 ;;  h               4   23[BANK0 ] struct flui
  3581 ;;  ou              4   17[BANK0 ] struct flui
  3582 ;;  n               2   38[BANK0 ] int 
  3583 ;;  i               2   31[BANK0 ] int 
  3584 ;;  w               2   21[BANK0 ] int 
  3585 ;;  e               2   15[BANK0 ] int 
  3586 ;;  m               2   13[BANK0 ] int 
  3587 ;;  d               2   11[BANK0 ] int 
  3588 ;;  t               2    4[BANK0 ] int 
  3589 ;;  p               2    2[BANK0 ] int 
  3590 ;;  ne              2    0[BANK0 ] int 
  3591 ;;  sign            1   33[BANK0 ] unsigned char 
  3592 ;;  nmode           1   10[BANK0 ] unsigned char 
  3593 ;;  mode            1    9[BANK0 ] unsigned char 
  3594 ;;  pp              1    8[BANK0 ] unsigned char 
  3595 ;;  esign           1    0        unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3605 ;;      Params:         6       0       0       0       0       0       0       0       0
  3606 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3607 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3608 ;;      Totals:         8      44       0       0       0       0       0       0       0
  3609 ;;Total ram usage:       52 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 4
  3612 ;; This function calls:
  3613 ;;		___fladd
  3614 ;;		___fldiv
  3615 ;;		___fleq
  3616 ;;		___flge
  3617 ;;		___flmul
  3618 ;;		___flneg
  3619 ;;		___flsub
  3620 ;;		___fltol
  3621 ;;		___fpclassifyf
  3622 ;;		_floorf
  3623 ;;		_labs
  3624 ;;		_memcpy
  3625 ;;		_pad
  3626 ;;		_strcpy
  3627 ;; This function is called by:
  3628 ;;		_vfpfcnvrt
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text6
  3633   006F60                     __ptext6:
  3634                           	callstack 0
  3635   006F60                     _efgtoa:
  3636                           	callstack 23
  3637   006F60                     
  3638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3639   006F60  0E00               	movlw	0
  3640   006F62  0100               	movlb	0	; () banked
  3641   006F64  6F81               	movwf	efgtoa@sign& (0+255),b
  3642   006F66                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3645   006F66  C02F  F082         	movff	efgtoa@f,efgtoa@g
  3646   006F6A  C030  F083         	movff	efgtoa@f+1,efgtoa@g+1
  3647   006F6E  C031  F084         	movff	efgtoa@f+2,efgtoa@g+2
  3648   006F72  C032  F085         	movff	efgtoa@f+3,efgtoa@g+3
  3649   006F76                     
  3650                           ; BSR set to: 0
  3651                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3652   006F76  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3653   006F78  EFC2  F037         	goto	u6310
  3654   006F7C  EFC0  F037         	goto	u6311
  3655   006F80                     u6311:
  3656   006F80  EFD6  F037         	goto	l5408
  3657   006F84                     u6310:
  3658   006F84                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3661   006F84  0E01               	movlw	1
  3662   006F86  6F81               	movwf	efgtoa@sign& (0+255),b
  3663   006F88                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3666   006F88  C082  F001         	movff	efgtoa@g,___flneg@f1
  3667   006F8C  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3668   006F90  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3669   006F94  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3670   006F98  EC65  F024         	call	___flneg	;wreg free
  3671   006F9C  C001  F082         	movff	?___flneg,efgtoa@g
  3672   006FA0  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  3673   006FA4  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  3674   006FA8  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  3675   006FAC                     l5408:
  3676                           
  3677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3678   006FAC  0E00               	movlw	0
  3679   006FAE  0100               	movlb	0	; () banked
  3680   006FB0  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3681   006FB2  0E00               	movlw	0
  3682   006FB4  6F86               	movwf	efgtoa@n& (0+255),b
  3683   006FB6                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3686   006FB6  C0B3  F075         	movff	_width,efgtoa@w
  3687   006FBA  C0B4  F076         	movff	_width+1,efgtoa@w+1
  3688   006FBE                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3691   006FBE  5181               	movf	efgtoa@sign& (0+255),w,b
  3692   006FC0  B4D8               	btfsc	status,2,c
  3693   006FC2  EFE5  F037         	goto	u6321
  3694   006FC6  EFE7  F037         	goto	u6320
  3695   006FCA                     u6321:
  3696   006FCA  EFFB  F037         	goto	l5422
  3697   006FCE                     u6320:
  3698   006FCE                     
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3701   006FCE  5181               	movf	efgtoa@sign& (0+255),w,b
  3702   006FD0  A4D8               	btfss	status,2,c
  3703   006FD2  EFED  F037         	goto	u6331
  3704   006FD6  EFEF  F037         	goto	u6330
  3705   006FDA                     u6331:
  3706   006FDA  EFF5  F037         	goto	l5418
  3707   006FDE                     u6330:
  3708   006FDE                     
  3709                           ; BSR set to: 0
  3710   006FDE  0E00               	movlw	0
  3711   006FE0  6F67               	movwf	(_efgtoa$1487+1)& (0+255),b
  3712   006FE2  0E2B               	movlw	43
  3713   006FE4  6F66               	movwf	_efgtoa$1487& (0+255),b
  3714   006FE6  EFF9  F037         	goto	l5420
  3715   006FEA                     l5418:
  3716                           
  3717                           ; BSR set to: 0
  3718   006FEA  0E00               	movlw	0
  3719   006FEC  6F67               	movwf	(_efgtoa$1487+1)& (0+255),b
  3720   006FEE  0E2D               	movlw	45
  3721   006FF0  6F66               	movwf	_efgtoa$1487& (0+255),b
  3722   006FF2                     l5420:
  3723                           
  3724                           ; BSR set to: 0
  3725   006FF2  C066  F081         	movff	_efgtoa$1487,efgtoa@sign
  3726   006FF6                     l5422:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3730   006FF6  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3731   006FFA  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3732   006FFE  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3733   007002  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3734   007006  EC8A  F028         	call	___fpclassifyf	;wreg free
  3735   00700A  0401               	decf	?___fpclassifyf^0,w,c
  3736   00700C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3737   00700E  A4D8               	btfss	status,2,c
  3738   007010  EF0C  F038         	goto	u6341
  3739   007014  EF0E  F038         	goto	u6340
  3740   007018                     u6341:
  3741   007018  EF3F  F038         	goto	l5440
  3742   00701C                     u6340:
  3743   00701C                     
  3744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3745   00701C  0100               	movlb	0	; () banked
  3746   00701E  5181               	movf	efgtoa@sign& (0+255),w,b
  3747   007020  B4D8               	btfsc	status,2,c
  3748   007022  EF15  F038         	goto	u6351
  3749   007026  EF17  F038         	goto	u6350
  3750   00702A                     u6351:
  3751   00702A  EF20  F038         	goto	l5432
  3752   00702E                     u6350:
  3753   00702E                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3756   00702E  C081  F100         	movff	efgtoa@sign,_dbuf
  3757   007032                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  3760   007032  0775               	decf	efgtoa@w& (0+255),f,b
  3761   007034  A0D8               	btfss	status,0,c
  3762   007036  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3763   007038                     
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3766   007038  0E00               	movlw	0
  3767   00703A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3768   00703C  0E01               	movlw	1
  3769   00703E  6F86               	movwf	efgtoa@n& (0+255),b
  3770   007040                     l5432:
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3774   007040  0E00               	movlw	low _dbuf
  3775   007042  2586               	addwf	efgtoa@n& (0+255),w,b
  3776   007044  6E01               	movwf	strcpy@dest^0,c
  3777   007046  0E01               	movlw	high _dbuf
  3778   007048  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3779   00704A  6E02               	movwf	(strcpy@dest+1)^0,c
  3780   00704C  0EF7               	movlw	low STR_3
  3781   00704E  6E03               	movwf	strcpy@src^0,c
  3782   007050  0E7F               	movlw	high STR_3
  3783   007052  6E04               	movwf	(strcpy@src+1)^0,c
  3784   007054  EC81  F024         	call	_strcpy	;wreg free
  3785   007058                     l5434:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3788   007058  0100               	movlb	0	; () banked
  3789   00705A  0EFD               	movlw	253
  3790   00705C  2775               	addwf	efgtoa@w& (0+255),f,b
  3791   00705E  0EFF               	movlw	255
  3792   007060  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3793   007062                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3796   007062  C02E  F00F         	movff	efgtoa@fp,pad@fp
  3797   007066  0E00               	movlw	low _dbuf
  3798   007068  6E10               	movwf	pad@buf^0,c
  3799   00706A  0E01               	movlw	high _dbuf
  3800   00706C  6E11               	movwf	(pad@buf+1)^0,c
  3801   00706E  C075  F012         	movff	efgtoa@w,pad@p
  3802   007072  C076  F013         	movff	efgtoa@w+1,pad@p+1
  3803   007076  ECF4  F025         	call	_pad	;wreg free
  3804   00707A  EFDC  F03C         	goto	l1219
  3805   00707E                     l5440:
  3806                           
  3807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3808   00707E  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3809   007082  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3810   007086  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3811   00708A  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3812   00708E  EC8A  F028         	call	___fpclassifyf	;wreg free
  3813   007092  5001               	movf	?___fpclassifyf^0,w,c
  3814   007094  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3815   007096  A4D8               	btfss	status,2,c
  3816   007098  EF50  F038         	goto	u6361
  3817   00709C  EF52  F038         	goto	u6360
  3818   0070A0                     u6361:
  3819   0070A0  EF72  F038         	goto	l5458
  3820   0070A4                     u6360:
  3821   0070A4                     
  3822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3823   0070A4  0100               	movlb	0	; () banked
  3824   0070A6  5181               	movf	efgtoa@sign& (0+255),w,b
  3825   0070A8  B4D8               	btfsc	status,2,c
  3826   0070AA  EF59  F038         	goto	u6371
  3827   0070AE  EF5B  F038         	goto	u6370
  3828   0070B2                     u6371:
  3829   0070B2  EF64  F038         	goto	l5450
  3830   0070B6                     u6370:
  3831   0070B6                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3834   0070B6  C081  F100         	movff	efgtoa@sign,_dbuf
  3835   0070BA                     
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  3838   0070BA  0775               	decf	efgtoa@w& (0+255),f,b
  3839   0070BC  A0D8               	btfss	status,0,c
  3840   0070BE  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3841   0070C0                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3844   0070C0  0E00               	movlw	0
  3845   0070C2  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3846   0070C4  0E01               	movlw	1
  3847   0070C6  6F86               	movwf	efgtoa@n& (0+255),b
  3848   0070C8                     l5450:
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3852   0070C8  0E00               	movlw	low _dbuf
  3853   0070CA  2586               	addwf	efgtoa@n& (0+255),w,b
  3854   0070CC  6E01               	movwf	strcpy@dest^0,c
  3855   0070CE  0E01               	movlw	high _dbuf
  3856   0070D0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3857   0070D2  6E02               	movwf	(strcpy@dest+1)^0,c
  3858   0070D4  0EFB               	movlw	low STR_6
  3859   0070D6  6E03               	movwf	strcpy@src^0,c
  3860   0070D8  0E7F               	movlw	high STR_6
  3861   0070DA  6E04               	movwf	(strcpy@src+1)^0,c
  3862   0070DC  EC81  F024         	call	_strcpy	;wreg free
  3863   0070E0  EF2C  F038         	goto	l5434
  3864   0070E4                     l5458:
  3865                           
  3866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3867   0070E4  0E00               	movlw	0
  3868   0070E6  0100               	movlb	0	; () banked
  3869   0070E8  6F88               	movwf	efgtoa@u& (0+255),b
  3870   0070EA  0E00               	movlw	0
  3871   0070EC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3872   0070EE  0E80               	movlw	128
  3873   0070F0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3874   0070F2  0E3F               	movlw	63
  3875   0070F4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3878   0070F6  0E00               	movlw	0
  3879   0070F8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3880   0070FA  0E00               	movlw	0
  3881   0070FC  6F6F               	movwf	efgtoa@e& (0+255),b
  3882   0070FE                     
  3883                           ; BSR set to: 0
  3884                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3885   0070FE  C082  F001         	movff	efgtoa@g,___fleq@ff1
  3886   007102  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3887   007106  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3888   00710A  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3889   00710E  0E00               	movlw	0
  3890   007110  6E05               	movwf	___fleq@ff2^0,c
  3891   007112  0E00               	movlw	0
  3892   007114  6E06               	movwf	(___fleq@ff2+1)^0,c
  3893   007116  0E00               	movlw	0
  3894   007118  6E07               	movwf	(___fleq@ff2+2)^0,c
  3895   00711A  0E00               	movlw	0
  3896   00711C  6E08               	movwf	(___fleq@ff2+3)^0,c
  3897   00711E  EC68  F026         	call	___fleq	;wreg free
  3898   007122  B0D8               	btfsc	status,0,c
  3899   007124  EF96  F038         	goto	u6381
  3900   007128  EF98  F038         	goto	u6380
  3901   00712C                     u6381:
  3902   00712C  EF77  F039         	goto	l1222
  3903   007130                     u6380:
  3904   007130  EFA5  F038         	goto	l5466
  3905   007134                     l1224:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3908   007134  C071  F088         	movff	efgtoa@ou,efgtoa@u
  3909   007138  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3910   00713C  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3911   007140  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3912   007144                     
  3913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3914   007144  0100               	movlb	0	; () banked
  3915   007146  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3916   007148  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3917   00714A                     l5466:
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3920   00714A  C088  F001         	movff	efgtoa@u,___flmul@b
  3921   00714E  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3922   007152  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3923   007156  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3924   00715A  0E00               	movlw	0
  3925   00715C  6E05               	movwf	___flmul@a^0,c
  3926   00715E  0E00               	movlw	0
  3927   007160  6E06               	movwf	(___flmul@a+1)^0,c
  3928   007162  0E20               	movlw	32
  3929   007164  6E07               	movwf	(___flmul@a+2)^0,c
  3930   007166  0E41               	movlw	65
  3931   007168  6E08               	movwf	(___flmul@a+3)^0,c
  3932   00716A  EC3B  F033         	call	___flmul	;wreg free
  3933   00716E  C001  F071         	movff	?___flmul,efgtoa@ou
  3934   007172  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  3935   007176  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  3936   00717A  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  3937   00717E  0100               	movlb	0	; () banked
  3938   007180  5171               	movf	efgtoa@ou& (0+255),w,b
  3939   007182  5D82               	subwf	efgtoa@g& (0+255),w,b
  3940   007184  6E01               	movwf	labs@a^0,c
  3941   007186  5172               	movf	(efgtoa@ou+1)& (0+255),w,b
  3942   007188  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3943   00718A  6E02               	movwf	(labs@a+1)^0,c
  3944   00718C  5173               	movf	(efgtoa@ou+2)& (0+255),w,b
  3945   00718E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3946   007190  6E03               	movwf	(labs@a+2)^0,c
  3947   007192  5174               	movf	(efgtoa@ou+3)& (0+255),w,b
  3948   007194  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3949   007196  6E04               	movwf	(labs@a+3)^0,c
  3950   007198  EC6B  F025         	call	_labs	;wreg free
  3951   00719C  BE04               	btfsc	(?_labs+3)^0,7,c
  3952   00719E  EFDC  F038         	goto	u6391
  3953   0071A2  5004               	movf	(?_labs+3)^0,w,c
  3954   0071A4  1003               	iorwf	(?_labs+2)^0,w,c
  3955   0071A6  1002               	iorwf	(?_labs+1)^0,w,c
  3956   0071A8  E109               	bnz	u6390
  3957   0071AA  0E02               	movlw	2
  3958   0071AC  5C01               	subwf	?_labs^0,w,c
  3959   0071AE  A0D8               	btfss	status,0,c
  3960   0071B0  EFDC  F038         	goto	u6391
  3961   0071B4  EFDE  F038         	goto	u6390
  3962   0071B8                     u6391:
  3963   0071B8  EF9A  F038         	goto	l1224
  3964   0071BC                     u6390:
  3965   0071BC  C071  F01A         	movff	efgtoa@ou,___flge@ff1
  3966   0071C0  C072  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3967   0071C4  C073  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3968   0071C8  C074  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3969   0071CC  C082  F01E         	movff	efgtoa@g,___flge@ff2
  3970   0071D0  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3971   0071D4  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3972   0071D8  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3973   0071DC  EC09  F029         	call	___flge	;wreg free
  3974   0071E0  A0D8               	btfss	status,0,c
  3975   0071E2  EFF5  F038         	goto	u6401
  3976   0071E6  EFF7  F038         	goto	u6400
  3977   0071EA                     u6401:
  3978   0071EA  EF9A  F038         	goto	l1224
  3979   0071EE                     u6400:
  3980   0071EE                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3982   0071EE  0100               	movlb	0	; () banked
  3983   0071F0  5188               	movf	efgtoa@u& (0+255),w,b
  3984   0071F2  5D82               	subwf	efgtoa@g& (0+255),w,b
  3985   0071F4  6E01               	movwf	labs@a^0,c
  3986   0071F6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3987   0071F8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3988   0071FA  6E02               	movwf	(labs@a+1)^0,c
  3989   0071FC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3990   0071FE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3991   007200  6E03               	movwf	(labs@a+2)^0,c
  3992   007202  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3993   007204  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3994   007206  6E04               	movwf	(labs@a+3)^0,c
  3995   007208  EC6B  F025         	call	_labs	;wreg free
  3996   00720C  BE04               	btfsc	(?_labs+3)^0,7,c
  3997   00720E  EF16  F039         	goto	u6410
  3998   007212  5004               	movf	(?_labs+3)^0,w,c
  3999   007214  1003               	iorwf	(?_labs+2)^0,w,c
  4000   007216  1002               	iorwf	(?_labs+1)^0,w,c
  4001   007218  E107               	bnz	u6411
  4002   00721A  0E02               	movlw	2
  4003   00721C  5C01               	subwf	?_labs^0,w,c
  4004   00721E  B0D8               	btfsc	status,0,c
  4005   007220  EF14  F039         	goto	u6411
  4006   007224  EF16  F039         	goto	u6410
  4007   007228                     u6411:
  4008   007228  EF5E  F039         	goto	l5484
  4009   00722C                     u6410:
  4010   00722C                     l5474:
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4013   00722C  C088  F082         	movff	efgtoa@u,efgtoa@g
  4014   007230  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  4015   007234  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  4016   007238  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  4019   00723C  EF77  F039         	goto	l1222
  4020   007240                     l5476:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4023   007240  C088  F001         	movff	efgtoa@u,___fldiv@b
  4024   007244  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4025   007248  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4026   00724C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4027   007250  0E00               	movlw	0
  4028   007252  6E05               	movwf	___fldiv@a^0,c
  4029   007254  0E00               	movlw	0
  4030   007256  6E06               	movwf	(___fldiv@a+1)^0,c
  4031   007258  0E20               	movlw	32
  4032   00725A  6E07               	movwf	(___fldiv@a+2)^0,c
  4033   00725C  0E41               	movlw	65
  4034   00725E  6E08               	movwf	(___fldiv@a+3)^0,c
  4035   007260  EC6E  F031         	call	___fldiv	;wreg free
  4036   007264  C001  F088         	movff	?___fldiv,efgtoa@u
  4037   007268  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  4038   00726C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4039   007270  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4040   007274                     
  4041                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  4042   007274  0100               	movlb	0	; () banked
  4043   007276  076F               	decf	efgtoa@e& (0+255),f,b
  4044   007278  A0D8               	btfss	status,0,c
  4045   00727A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  4046   00727C                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4049   00727C  5188               	movf	efgtoa@u& (0+255),w,b
  4050   00727E  5D82               	subwf	efgtoa@g& (0+255),w,b
  4051   007280  6E01               	movwf	labs@a^0,c
  4052   007282  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  4053   007284  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4054   007286  6E02               	movwf	(labs@a+1)^0,c
  4055   007288  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  4056   00728A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4057   00728C  6E03               	movwf	(labs@a+2)^0,c
  4058   00728E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  4059   007290  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4060   007292  6E04               	movwf	(labs@a+3)^0,c
  4061   007294  EC6B  F025         	call	_labs	;wreg free
  4062   007298  BE04               	btfsc	(?_labs+3)^0,7,c
  4063   00729A  EF5C  F039         	goto	u6420
  4064   00729E  5004               	movf	(?_labs+3)^0,w,c
  4065   0072A0  1003               	iorwf	(?_labs+2)^0,w,c
  4066   0072A2  1002               	iorwf	(?_labs+1)^0,w,c
  4067   0072A4  E107               	bnz	u6421
  4068   0072A6  0E02               	movlw	2
  4069   0072A8  5C01               	subwf	?_labs^0,w,c
  4070   0072AA  B0D8               	btfsc	status,0,c
  4071   0072AC  EF5A  F039         	goto	u6421
  4072   0072B0  EF5C  F039         	goto	u6420
  4073   0072B4                     u6421:
  4074   0072B4  EF5E  F039         	goto	l5484
  4075   0072B8                     u6420:
  4076   0072B8  EF16  F039         	goto	l5474
  4077   0072BC                     l5484:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4080   0072BC  C082  F01A         	movff	efgtoa@g,___flge@ff1
  4081   0072C0  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4082   0072C4  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4083   0072C8  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4084   0072CC  C088  F01E         	movff	efgtoa@u,___flge@ff2
  4085   0072D0  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4086   0072D4  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4087   0072D8  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4088   0072DC  EC09  F029         	call	___flge	;wreg free
  4089   0072E0  A0D8               	btfss	status,0,c
  4090   0072E2  EF75  F039         	goto	u6431
  4091   0072E6  EF77  F039         	goto	u6430
  4092   0072EA                     u6431:
  4093   0072EA  EF20  F039         	goto	l5476
  4094   0072EE                     u6430:
  4095   0072EE                     l1222:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4098   0072EE  C033  F069         	movff	efgtoa@c,efgtoa@mode
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4101   0072F2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  4102   0072F6                     
  4103                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4104   0072F6  0100               	movlb	0	; () banked
  4105   0072F8  BFB6               	btfsc	(_prec+1)& (0+255),7,b
  4106   0072FA  EF81  F039         	goto	u6441
  4107   0072FE  EF83  F039         	goto	u6440
  4108   007302                     u6441:
  4109   007302  EF89  F039         	goto	l5490
  4110   007306                     u6440:
  4111   007306                     
  4112                           ; BSR set to: 0
  4113   007306  C0B5  F062         	movff	_prec,efgtoa@p
  4114   00730A  C0B6  F063         	movff	_prec+1,efgtoa@p+1
  4115   00730E  EF8D  F039         	goto	l5492
  4116   007312                     l5490:
  4117                           
  4118                           ; BSR set to: 0
  4119   007312  0E00               	movlw	0
  4120   007314  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  4121   007316  0E06               	movlw	6
  4122   007318  6F62               	movwf	efgtoa@p& (0+255),b
  4123   00731A                     l5492:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4127   00731A  C062  F06D         	movff	efgtoa@p,efgtoa@m
  4128   00731E  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  4129   007322                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4132   007322  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4133   007324  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4134   007326                     
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4137   007326  0E66               	movlw	102
  4138   007328  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4139   00732A  A4D8               	btfss	status,2,c
  4140   00732C  EF9A  F039         	goto	u6451
  4141   007330  EF9C  F039         	goto	u6450
  4142   007334                     u6451:
  4143   007334  EFBC  F039         	goto	l5506
  4144   007338                     u6450:
  4145   007338                     
  4146                           ; BSR set to: 0
  4147                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4148   007338  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4149   00733A  EFA3  F039         	goto	u6460
  4150   00733E  EFA1  F039         	goto	u6461
  4151   007342                     u6461:
  4152   007342  EFAF  F039         	goto	l5502
  4153   007346                     u6460:
  4154   007346                     
  4155                           ; BSR set to: 0
  4156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4157   007346  0E00               	movlw	0
  4158   007348  6F88               	movwf	efgtoa@u& (0+255),b
  4159   00734A  0E00               	movlw	0
  4160   00734C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  4161   00734E  0E80               	movlw	128
  4162   007350  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  4163   007352  0E3F               	movlw	63
  4164   007354  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  4165                           
  4166                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4167   007356  0E00               	movlw	0
  4168   007358  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  4169   00735A  0E00               	movlw	0
  4170   00735C  6F6F               	movwf	efgtoa@e& (0+255),b
  4171   00735E                     l5502:
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4175   00735E  0E67               	movlw	103
  4176   007360  1969               	xorwf	efgtoa@mode& (0+255),w,b
  4177   007362  B4D8               	btfsc	status,2,c
  4178   007364  EFB6  F039         	goto	u6471
  4179   007368  EFB8  F039         	goto	u6470
  4180   00736C                     u6471:
  4181   00736C  EFBC  F039         	goto	l5506
  4182   007370                     u6470:
  4183   007370                     
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4186   007370  516F               	movf	efgtoa@e& (0+255),w,b
  4187   007372  276D               	addwf	efgtoa@m& (0+255),f,b
  4188   007374  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  4189   007376  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4190   007378                     l5506:
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4194   007378  0E00               	movlw	0
  4195   00737A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4196   00737C  0E00               	movlw	0
  4197   00737E  6F7F               	movwf	efgtoa@i& (0+255),b
  4198   007380                     
  4199                           ; BSR set to: 0
  4200                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4201   007380  C082  F077         	movff	efgtoa@g,efgtoa@h
  4202   007384  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  4203   007388  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  4204   00738C  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  4205   007390                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4208   007390  C088  F071         	movff	efgtoa@u,efgtoa@ou
  4209   007394  C089  F072         	movff	efgtoa@u+1,efgtoa@ou+1
  4210   007398  C08A  F073         	movff	efgtoa@u+2,efgtoa@ou+2
  4211   00739C  C08B  F074         	movff	efgtoa@u+3,efgtoa@ou+3
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4214   0073A0  EF4D  F03A         	goto	l5520
  4215   0073A4                     l5512:
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4219   0073A4  C077  F001         	movff	efgtoa@h,___fldiv@b
  4220   0073A8  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4221   0073AC  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4222   0073B0  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4223   0073B4  C088  F005         	movff	efgtoa@u,___fldiv@a
  4224   0073B8  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4225   0073BC  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4226   0073C0  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4227   0073C4  EC6E  F031         	call	___fldiv	;wreg free
  4228   0073C8  C001  F01A         	movff	?___fldiv,floorf@x
  4229   0073CC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4230   0073D0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4231   0073D4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4232   0073D8  ECF1  F02D         	call	_floorf	;wreg free
  4233   0073DC  C01A  F07B         	movff	?_floorf,efgtoa@l
  4234   0073E0  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  4235   0073E4  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  4236   0073E8  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  4237                           
  4238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4239   0073EC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4240   0073F0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4241   0073F4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4242   0073F8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4243   0073FC  EC8B  F029         	call	___fltol	;wreg free
  4244   007400  C001  F06B         	movff	?___fltol,efgtoa@d
  4245   007404  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4246   007408                     
  4247                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4248   007408  C077  F01A         	movff	efgtoa@h,___flsub@b
  4249   00740C  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4250   007410  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4251   007414  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4252   007418  C07B  F005         	movff	efgtoa@l,___flmul@a
  4253   00741C  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  4254   007420  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  4255   007424  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  4256   007428  C088  F001         	movff	efgtoa@u,___flmul@b
  4257   00742C  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4258   007430  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4259   007434  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4260   007438  EC3B  F033         	call	___flmul	;wreg free
  4261   00743C  C001  F01E         	movff	?___flmul,___flsub@a
  4262   007440  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4263   007444  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4264   007448  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4265   00744C  ECFB  F024         	call	___flsub	;wreg free
  4266   007450  C01A  F077         	movff	?___flsub,efgtoa@h
  4267   007454  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  4268   007458  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  4269   00745C  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  4270   007460                     
  4271                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4272   007460  C088  F001         	movff	efgtoa@u,___fldiv@b
  4273   007464  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4274   007468  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4275   00746C  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4276   007470  0E00               	movlw	0
  4277   007472  6E05               	movwf	___fldiv@a^0,c
  4278   007474  0E00               	movlw	0
  4279   007476  6E06               	movwf	(___fldiv@a+1)^0,c
  4280   007478  0E20               	movlw	32
  4281   00747A  6E07               	movwf	(___fldiv@a+2)^0,c
  4282   00747C  0E41               	movlw	65
  4283   00747E  6E08               	movwf	(___fldiv@a+3)^0,c
  4284   007480  EC6E  F031         	call	___fldiv	;wreg free
  4285   007484  C001  F088         	movff	?___fldiv,efgtoa@u
  4286   007488  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  4287   00748C  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4288   007490  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4289   007494                     
  4290                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4291   007494  0100               	movlb	0	; () banked
  4292   007496  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4293   007498  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4294   00749A                     l5520:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4298   00749A  516D               	movf	efgtoa@m& (0+255),w,b
  4299   00749C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4300   00749E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4301   0074A0  0A80               	xorlw	128
  4302   0074A2  6E34               	movwf	??_efgtoa^0,c
  4303   0074A4  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4304   0074A6  0A80               	xorlw	128
  4305   0074A8  5834               	subwfb	??_efgtoa^0,w,c
  4306   0074AA  A0D8               	btfss	status,0,c
  4307   0074AC  EF5A  F03A         	goto	u6481
  4308   0074B0  EF5C  F03A         	goto	u6480
  4309   0074B4                     u6481:
  4310   0074B4  EFD2  F039         	goto	l5512
  4311   0074B8                     u6480:
  4312   0074B8                     
  4313                           ; BSR set to: 0
  4314                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4315   0074B8  C088  F001         	movff	efgtoa@u,___flmul@b
  4316   0074BC  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4317   0074C0  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4318   0074C4  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4319   0074C8  0E00               	movlw	0
  4320   0074CA  6E05               	movwf	___flmul@a^0,c
  4321   0074CC  0E00               	movlw	0
  4322   0074CE  6E06               	movwf	(___flmul@a+1)^0,c
  4323   0074D0  0EA0               	movlw	160
  4324   0074D2  6E07               	movwf	(___flmul@a+2)^0,c
  4325   0074D4  0E40               	movlw	64
  4326   0074D6  6E08               	movwf	(___flmul@a+3)^0,c
  4327   0074D8  EC3B  F033         	call	___flmul	;wreg free
  4328   0074DC  C001  F07B         	movff	?___flmul,efgtoa@l
  4329   0074E0  C002  F07C         	movff	?___flmul+1,efgtoa@l+1
  4330   0074E4  C003  F07D         	movff	?___flmul+2,efgtoa@l+2
  4331   0074E8  C004  F07E         	movff	?___flmul+3,efgtoa@l+3
  4332   0074EC                     
  4333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4334   0074EC  C077  F01A         	movff	efgtoa@h,___flge@ff1
  4335   0074F0  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4336   0074F4  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4337   0074F8  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4338   0074FC  C07B  F01E         	movff	efgtoa@l,___flge@ff2
  4339   007500  C07C  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4340   007504  C07D  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4341   007508  C07E  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4342   00750C  EC09  F029         	call	___flge	;wreg free
  4343   007510  B0D8               	btfsc	status,0,c
  4344   007512  EF8D  F03A         	goto	u6491
  4345   007516  EF8F  F03A         	goto	u6490
  4346   00751A                     u6491:
  4347   00751A  EF9A  F03A         	goto	l5528
  4348   00751E                     u6490:
  4349   00751E                     
  4350                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4351   00751E  0E00               	movlw	0
  4352   007520  0100               	movlb	0	; () banked
  4353   007522  6F7B               	movwf	efgtoa@l& (0+255),b
  4354   007524  0E00               	movlw	0
  4355   007526  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4356   007528  0E00               	movlw	0
  4357   00752A  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4358   00752C  0E00               	movlw	0
  4359   00752E  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4360                           
  4361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  4362   007530  EFC3  F03A         	goto	l5534
  4363   007534                     l5528:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4366   007534  C077  F001         	movff	efgtoa@h,___fleq@ff1
  4367   007538  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4368   00753C  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4369   007540  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4370   007544  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  4371   007548  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4372   00754C  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4373   007550  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4374   007554  EC68  F026         	call	___fleq	;wreg free
  4375   007558  A0D8               	btfss	status,0,c
  4376   00755A  EFB1  F03A         	goto	u6501
  4377   00755E  EFB3  F03A         	goto	u6500
  4378   007562                     u6501:
  4379   007562  EFC3  F03A         	goto	l5534
  4380   007566                     u6500:
  4381   007566  0100               	movlb	0	; () banked
  4382   007568  B16B               	btfsc	efgtoa@d& (0+255),0,b
  4383   00756A  EFB9  F03A         	goto	u6511
  4384   00756E  EFBB  F03A         	goto	u6510
  4385   007572                     u6511:
  4386   007572  EFC3  F03A         	goto	l5534
  4387   007576                     u6510:
  4388   007576                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4391   007576  0E00               	movlw	0
  4392   007578  6F7B               	movwf	efgtoa@l& (0+255),b
  4393   00757A  0E00               	movlw	0
  4394   00757C  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4395   00757E  0E00               	movlw	0
  4396   007580  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4397   007582  0E00               	movlw	0
  4398   007584  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4399   007586                     l5534:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4402   007586  C082  F001         	movff	efgtoa@g,___fladd@b
  4403   00758A  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  4404   00758E  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  4405   007592  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  4406   007596  C07B  F005         	movff	efgtoa@l,___fladd@a
  4407   00759A  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  4408   00759E  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  4409   0075A2  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  4410   0075A6  EC50  F035         	call	___fladd	;wreg free
  4411   0075AA  C001  F077         	movff	?___fladd,efgtoa@h
  4412   0075AE  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  4413   0075B2  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  4414   0075B6  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  4415   0075BA                     
  4416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4417   0075BA  C077  F01A         	movff	efgtoa@h,___flge@ff1
  4418   0075BE  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4419   0075C2  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4420   0075C6  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4421   0075CA  0E00               	movlw	0
  4422   0075CC  6E05               	movwf	___flmul@a^0,c
  4423   0075CE  0E00               	movlw	0
  4424   0075D0  6E06               	movwf	(___flmul@a+1)^0,c
  4425   0075D2  0E20               	movlw	32
  4426   0075D4  6E07               	movwf	(___flmul@a+2)^0,c
  4427   0075D6  0E41               	movlw	65
  4428   0075D8  6E08               	movwf	(___flmul@a+3)^0,c
  4429   0075DA  C071  F001         	movff	efgtoa@ou,___flmul@b
  4430   0075DE  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4431   0075E2  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4432   0075E6  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4433   0075EA  EC3B  F033         	call	___flmul	;wreg free
  4434   0075EE  C001  F01E         	movff	?___flmul,___flge@ff2
  4435   0075F2  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4436   0075F6  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4437   0075FA  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4438   0075FE  EC09  F029         	call	___flge	;wreg free
  4439   007602  A0D8               	btfss	status,0,c
  4440   007604  EF06  F03B         	goto	u6521
  4441   007608  EF08  F03B         	goto	u6520
  4442   00760C                     u6521:
  4443   00760C  EF31  F03B         	goto	l5546
  4444   007610                     u6520:
  4445   007610                     
  4446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  4447   007610  0100               	movlb	0	; () banked
  4448   007612  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4449   007614  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4450   007616                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4453   007616  C071  F001         	movff	efgtoa@ou,___flmul@b
  4454   00761A  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4455   00761E  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4456   007622  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4457   007626  0E00               	movlw	0
  4458   007628  6E05               	movwf	___flmul@a^0,c
  4459   00762A  0E00               	movlw	0
  4460   00762C  6E06               	movwf	(___flmul@a+1)^0,c
  4461   00762E  0E20               	movlw	32
  4462   007630  6E07               	movwf	(___flmul@a+2)^0,c
  4463   007632  0E41               	movlw	65
  4464   007634  6E08               	movwf	(___flmul@a+3)^0,c
  4465   007636  EC3B  F033         	call	___flmul	;wreg free
  4466   00763A  C001  F071         	movff	?___flmul,efgtoa@ou
  4467   00763E  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  4468   007642  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  4469   007646  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  4470   00764A                     
  4471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4472   00764A  0E66               	movlw	102
  4473   00764C  0100               	movlb	0	; () banked
  4474   00764E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4475   007650  A4D8               	btfss	status,2,c
  4476   007652  EF2D  F03B         	goto	u6531
  4477   007656  EF2F  F03B         	goto	u6530
  4478   00765A                     u6531:
  4479   00765A  EF31  F03B         	goto	l5546
  4480   00765E                     u6530:
  4481   00765E                     
  4482                           ; BSR set to: 0
  4483                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  4484   00765E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4485   007660  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4486   007662                     l5546:
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4489   007662  C071  F088         	movff	efgtoa@ou,efgtoa@u
  4490   007666  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4491   00766A  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4492   00766E  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4493   007672                     
  4494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4495   007672  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4496   007676  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4497   00767A                     
  4498                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4499   00767A  0E00               	movlw	0
  4500   00767C  0100               	movlb	0	; () banked
  4501   00767E  6F68               	movwf	efgtoa@pp& (0+255),b
  4502   007680                     
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4505   007680  0E00               	movlw	0
  4506   007682  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4507   007684  0E00               	movlw	0
  4508   007686  6F64               	movwf	efgtoa@t& (0+255),b
  4509   007688                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4512   007688  0E00               	movlw	0
  4513   00768A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4514   00768C  0E00               	movlw	0
  4515   00768E  6F7F               	movwf	efgtoa@i& (0+255),b
  4516                           
  4517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4518   007690  EF2F  F03C         	goto	l5596
  4519   007694                     l5556:
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4523   007694  C077  F001         	movff	efgtoa@h,___fldiv@b
  4524   007698  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4525   00769C  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4526   0076A0  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4527   0076A4  C088  F005         	movff	efgtoa@u,___fldiv@a
  4528   0076A8  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4529   0076AC  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4530   0076B0  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4531   0076B4  EC6E  F031         	call	___fldiv	;wreg free
  4532   0076B8  C001  F01A         	movff	?___fldiv,floorf@x
  4533   0076BC  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4534   0076C0  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4535   0076C4  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4536   0076C8  ECF1  F02D         	call	_floorf	;wreg free
  4537   0076CC  C01A  F07B         	movff	?_floorf,efgtoa@l
  4538   0076D0  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  4539   0076D4  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  4540   0076D8  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4543   0076DC  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4544   0076E0  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4545   0076E4  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4546   0076E8  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4547   0076EC  EC8B  F029         	call	___fltol	;wreg free
  4548   0076F0  BE02               	btfsc	(?___fltol+1)^0,7,c
  4549   0076F2  EF86  F03B         	goto	u6540
  4550   0076F6  5002               	movf	(?___fltol+1)^0,w,c
  4551   0076F8  E107               	bnz	u6541
  4552   0076FA  0E0A               	movlw	10
  4553   0076FC  5C01               	subwf	?___fltol^0,w,c
  4554   0076FE  B0D8               	btfsc	status,0,c
  4555   007700  EF84  F03B         	goto	u6541
  4556   007704  EF86  F03B         	goto	u6540
  4557   007708                     u6541:
  4558   007708  EF96  F03B         	goto	l5560
  4559   00770C                     u6540:
  4560   00770C  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4561   007710  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4562   007714  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4563   007718  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4564   00771C  EC8B  F029         	call	___fltol	;wreg free
  4565   007720  C001  F06B         	movff	?___fltol,efgtoa@d
  4566   007724  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4567   007728  EF9B  F03B         	goto	l1252
  4568   00772C                     l5560:
  4569   00772C  0E00               	movlw	0
  4570   00772E  0100               	movlb	0	; () banked
  4571   007730  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4572   007732  0E09               	movlw	9
  4573   007734  6F6B               	movwf	efgtoa@d& (0+255),b
  4574   007736                     l1252:
  4575                           
  4576                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4577   007736  0100               	movlb	0	; () banked
  4578   007738  5168               	movf	efgtoa@pp& (0+255),w,b
  4579   00773A  A4D8               	btfss	status,2,c
  4580   00773C  EFA2  F03B         	goto	u6551
  4581   007740  EFA4  F03B         	goto	u6550
  4582   007744                     u6551:
  4583   007744  EFCC  F03B         	goto	l5580
  4584   007748                     u6550:
  4585   007748                     
  4586                           ; BSR set to: 0
  4587   007748  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4588   00774A  EFAB  F03B         	goto	u6560
  4589   00774E  EFA9  F03B         	goto	u6561
  4590   007752                     u6561:
  4591   007752  EFCC  F03B         	goto	l5580
  4592   007756                     u6560:
  4593   007756                     
  4594                           ; BSR set to: 0
  4595                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4596   007756  0E00               	movlw	low _dbuf
  4597   007758  2586               	addwf	efgtoa@n& (0+255),w,b
  4598   00775A  6ED9               	movwf	fsr2l,c
  4599   00775C  0E01               	movlw	high _dbuf
  4600   00775E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4601   007760  6EDA               	movwf	fsr2h,c
  4602   007762  0E2E               	movlw	46
  4603   007764  6EDF               	movwf	indf2,c
  4604   007766                     
  4605                           ; BSR set to: 0
  4606   007766  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4607   007768  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4608   00776A                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4611   00776A  0775               	decf	efgtoa@w& (0+255),f,b
  4612   00776C  A0D8               	btfss	status,0,c
  4613   00776E  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4614   007770                     
  4615                           ; BSR set to: 0
  4616                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4617   007770  0E01               	movlw	1
  4618   007772  6F68               	movwf	efgtoa@pp& (0+255),b
  4619   007774  EFCC  F03B         	goto	l5580
  4620   007778                     l5572:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4624   007778  0E00               	movlw	low _dbuf
  4625   00777A  2586               	addwf	efgtoa@n& (0+255),w,b
  4626   00777C  6ED9               	movwf	fsr2l,c
  4627   00777E  0E01               	movlw	high _dbuf
  4628   007780  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4629   007782  6EDA               	movwf	fsr2h,c
  4630   007784  0E30               	movlw	48
  4631   007786  6EDF               	movwf	indf2,c
  4632   007788                     
  4633                           ; BSR set to: 0
  4634   007788  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4635   00778A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4636   00778C                     
  4637                           ; BSR set to: 0
  4638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4639   00778C  0775               	decf	efgtoa@w& (0+255),f,b
  4640   00778E  A0D8               	btfss	status,0,c
  4641   007790  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4642   007792                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4645   007792  0764               	decf	efgtoa@t& (0+255),f,b
  4646   007794  A0D8               	btfss	status,0,c
  4647   007796  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4648   007798                     l5580:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4652   007798  5164               	movf	efgtoa@t& (0+255),w,b
  4653   00779A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4654   00779C  A4D8               	btfss	status,2,c
  4655   00779E  EFD3  F03B         	goto	u6571
  4656   0077A2  EFD5  F03B         	goto	u6570
  4657   0077A6                     u6571:
  4658   0077A6  EFBC  F03B         	goto	l5572
  4659   0077AA                     u6570:
  4660   0077AA                     
  4661                           ; BSR set to: 0
  4662                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4663   0077AA  0E00               	movlw	low _dbuf
  4664   0077AC  2586               	addwf	efgtoa@n& (0+255),w,b
  4665   0077AE  6ED9               	movwf	fsr2l,c
  4666   0077B0  0E01               	movlw	high _dbuf
  4667   0077B2  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4668   0077B4  6EDA               	movwf	fsr2h,c
  4669   0077B6  516B               	movf	efgtoa@d& (0+255),w,b
  4670   0077B8  0F30               	addlw	48
  4671   0077BA  6EDF               	movwf	indf2,c
  4672   0077BC                     
  4673                           ; BSR set to: 0
  4674   0077BC  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4675   0077BE  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4676   0077C0                     
  4677                           ; BSR set to: 0
  4678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4679   0077C0  0775               	decf	efgtoa@w& (0+255),f,b
  4680   0077C2  A0D8               	btfss	status,0,c
  4681   0077C4  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4682   0077C6                     
  4683                           ; BSR set to: 0
  4684                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4685   0077C6  C077  F01A         	movff	efgtoa@h,___flsub@b
  4686   0077CA  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4687   0077CE  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4688   0077D2  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4689   0077D6  C07B  F005         	movff	efgtoa@l,___flmul@a
  4690   0077DA  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  4691   0077DE  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  4692   0077E2  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  4693   0077E6  C088  F001         	movff	efgtoa@u,___flmul@b
  4694   0077EA  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4695   0077EE  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4696   0077F2  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4697   0077F6  EC3B  F033         	call	___flmul	;wreg free
  4698   0077FA  C001  F01E         	movff	?___flmul,___flsub@a
  4699   0077FE  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4700   007802  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4701   007806  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4702   00780A  ECFB  F024         	call	___flsub	;wreg free
  4703   00780E  C01A  F077         	movff	?___flsub,efgtoa@h
  4704   007812  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  4705   007816  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  4706   00781A  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  4707   00781E                     
  4708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4709   00781E  C088  F001         	movff	efgtoa@u,___fldiv@b
  4710   007822  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4711   007826  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4712   00782A  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4713   00782E  0E00               	movlw	0
  4714   007830  6E05               	movwf	___fldiv@a^0,c
  4715   007832  0E00               	movlw	0
  4716   007834  6E06               	movwf	(___fldiv@a+1)^0,c
  4717   007836  0E20               	movlw	32
  4718   007838  6E07               	movwf	(___fldiv@a+2)^0,c
  4719   00783A  0E41               	movlw	65
  4720   00783C  6E08               	movwf	(___fldiv@a+3)^0,c
  4721   00783E  EC6E  F031         	call	___fldiv	;wreg free
  4722   007842  C001  F088         	movff	?___fldiv,efgtoa@u
  4723   007846  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  4724   00784A  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4725   00784E  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4726   007852                     
  4727                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4728   007852  0100               	movlb	0	; () banked
  4729   007854  0760               	decf	efgtoa@ne& (0+255),f,b
  4730   007856  A0D8               	btfss	status,0,c
  4731   007858  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4732   00785A                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4735   00785A  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4736   00785C  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4737   00785E                     l5596:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4741   00785E  516D               	movf	efgtoa@m& (0+255),w,b
  4742   007860  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4743   007862  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4744   007864  0A80               	xorlw	128
  4745   007866  6E34               	movwf	??_efgtoa^0,c
  4746   007868  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4747   00786A  0A80               	xorlw	128
  4748   00786C  5834               	subwfb	??_efgtoa^0,w,c
  4749   00786E  B0D8               	btfsc	status,0,c
  4750   007870  EF3C  F03C         	goto	u6581
  4751   007874  EF3E  F03C         	goto	u6580
  4752   007878                     u6581:
  4753   007878  EF4C  F03C         	goto	l5600
  4754   00787C                     u6580:
  4755   00787C                     
  4756                           ; BSR set to: 0
  4757   00787C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4758   00787E  EF4A  F03C         	goto	u6591
  4759   007882  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4760   007884  E109               	bnz	u6590
  4761   007886  0E4B               	movlw	75
  4762   007888  5D86               	subwf	efgtoa@n& (0+255),w,b
  4763   00788A  A0D8               	btfss	status,0,c
  4764   00788C  EF4A  F03C         	goto	u6591
  4765   007890  EF4C  F03C         	goto	u6590
  4766   007894                     u6591:
  4767   007894  EF4A  F03B         	goto	l5556
  4768   007898                     u6590:
  4769   007898                     l5600:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4773   007898  0E00               	movlw	0
  4774   00789A  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4775   00789C  0E4F               	movlw	79
  4776   00789E  6F7F               	movwf	efgtoa@i& (0+255),b
  4777   0078A0                     
  4778                           ; BSR set to: 0
  4779                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4780   0078A0  0E00               	movlw	low _dbuf
  4781   0078A2  257F               	addwf	efgtoa@i& (0+255),w,b
  4782   0078A4  6ED9               	movwf	fsr2l,c
  4783   0078A6  0E01               	movlw	high _dbuf
  4784   0078A8  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4785   0078AA  6EDA               	movwf	fsr2h,c
  4786   0078AC  6ADF               	clrf	indf2,c
  4787   0078AE                     
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4790   0078AE  0E00               	movlw	low _dbuf
  4791   0078B0  6E34               	movwf	??_efgtoa^0,c
  4792   0078B2  0E01               	movlw	high _dbuf
  4793   0078B4  6E35               	movwf	(??_efgtoa+1)^0,c
  4794   0078B6  5186               	movf	efgtoa@n& (0+255),w,b
  4795   0078B8  5E34               	subwf	??_efgtoa^0,f,c
  4796   0078BA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4797   0078BC  5A35               	subwfb	(??_efgtoa+1)^0,f,c
  4798   0078BE  517F               	movf	efgtoa@i& (0+255),w,b
  4799   0078C0  2434               	addwf	??_efgtoa^0,w,c
  4800   0078C2  6E01               	movwf	memcpy@d1^0,c
  4801   0078C4  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4802   0078C6  2035               	addwfc	(??_efgtoa+1)^0,w,c
  4803   0078C8  6E02               	movwf	(memcpy@d1+1)^0,c
  4804   0078CA  0E00               	movlw	low _dbuf
  4805   0078CC  6E03               	movwf	memcpy@s1^0,c
  4806   0078CE  0E01               	movlw	high _dbuf
  4807   0078D0  6E04               	movwf	(memcpy@s1+1)^0,c
  4808   0078D2  C086  F005         	movff	efgtoa@n,memcpy@n
  4809   0078D6  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  4810   0078DA  EC43  F025         	call	_memcpy	;wreg free
  4811   0078DE                     
  4812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4813   0078DE  0100               	movlb	0	; () banked
  4814   0078E0  5186               	movf	efgtoa@n& (0+255),w,b
  4815   0078E2  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4816   0078E4  6F86               	movwf	efgtoa@n& (0+255),b
  4817   0078E6  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4818   0078E8  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4819   0078EA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4820   0078EC                     
  4821                           ; BSR set to: 0
  4822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4823   0078EC  5181               	movf	efgtoa@sign& (0+255),w,b
  4824   0078EE  A4D8               	btfss	status,2,c
  4825   0078F0  EF7C  F03C         	goto	u6601
  4826   0078F4  EF7F  F03C         	goto	u6600
  4827   0078F8                     u6601:
  4828   0078F8  0E01               	movlw	1
  4829   0078FA  EF80  F03C         	goto	u6610
  4830   0078FE                     u6600:
  4831   0078FE  0E00               	movlw	0
  4832   007900                     u6610:
  4833   007900  6F7F               	movwf	efgtoa@i& (0+255),b
  4834   007902  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  4835   007904                     
  4836                           ; BSR set to: 0
  4837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  4838   007904  A3B7               	btfss	_flags& (0+255),1,b
  4839   007906  EF87  F03C         	goto	u6621
  4840   00790A  EF89  F03C         	goto	u6620
  4841   00790E                     u6621:
  4842   00790E  EFB7  F03C         	goto	l5622
  4843   007912                     u6620:
  4844   007912  EF99  F03C         	goto	l5618
  4845   007916                     l5614:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  4849   007916  0786               	decf	efgtoa@n& (0+255),f,b
  4850   007918  A0D8               	btfss	status,0,c
  4851   00791A  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4852   00791C  0E00               	movlw	low _dbuf
  4853   00791E  2586               	addwf	efgtoa@n& (0+255),w,b
  4854   007920  6ED9               	movwf	fsr2l,c
  4855   007922  0E01               	movlw	high _dbuf
  4856   007924  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4857   007926  6EDA               	movwf	fsr2h,c
  4858   007928  0E30               	movlw	48
  4859   00792A  6EDF               	movwf	indf2,c
  4860   00792C                     
  4861                           ; BSR set to: 0
  4862                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  4863   00792C  0775               	decf	efgtoa@w& (0+255),f,b
  4864   00792E  A0D8               	btfss	status,0,c
  4865   007930  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4866   007932                     l5618:
  4867                           
  4868                           ; BSR set to: 0
  4869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  4870   007932  5175               	movf	efgtoa@w& (0+255),w,b
  4871   007934  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4872   007936  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4873   007938  0A80               	xorlw	128
  4874   00793A  6E34               	movwf	??_efgtoa^0,c
  4875   00793C  5176               	movf	(efgtoa@w+1)& (0+255),w,b
  4876   00793E  0A80               	xorlw	128
  4877   007940  5834               	subwfb	??_efgtoa^0,w,c
  4878   007942  B0D8               	btfsc	status,0,c
  4879   007944  EFA6  F03C         	goto	u6631
  4880   007948  EFA8  F03C         	goto	u6630
  4881   00794C                     u6631:
  4882   00794C  EFB7  F03C         	goto	l5622
  4883   007950                     u6630:
  4884   007950                     
  4885                           ; BSR set to: 0
  4886   007950  5186               	movf	efgtoa@n& (0+255),w,b
  4887   007952  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4888   007954  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4889   007956  0A80               	xorlw	128
  4890   007958  6E34               	movwf	??_efgtoa^0,c
  4891   00795A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4892   00795C  0A80               	xorlw	128
  4893   00795E  5834               	subwfb	??_efgtoa^0,w,c
  4894   007960  A0D8               	btfss	status,0,c
  4895   007962  EFB5  F03C         	goto	u6641
  4896   007966  EFB7  F03C         	goto	u6640
  4897   00796A                     u6641:
  4898   00796A  EF8B  F03C         	goto	l5614
  4899   00796E                     u6640:
  4900   00796E                     l5622:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4904   00796E  5181               	movf	efgtoa@sign& (0+255),w,b
  4905   007970  B4D8               	btfsc	status,2,c
  4906   007972  EFBD  F03C         	goto	u6651
  4907   007976  EFBF  F03C         	goto	u6650
  4908   00797A                     u6651:
  4909   00797A  EFCA  F03C         	goto	l5626
  4910   00797E                     u6650:
  4911   00797E                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4914   00797E  0786               	decf	efgtoa@n& (0+255),f,b
  4915   007980  A0D8               	btfss	status,0,c
  4916   007982  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4917   007984  0E00               	movlw	low _dbuf
  4918   007986  2586               	addwf	efgtoa@n& (0+255),w,b
  4919   007988  6ED9               	movwf	fsr2l,c
  4920   00798A  0E01               	movlw	high _dbuf
  4921   00798C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4922   00798E  6EDA               	movwf	fsr2h,c
  4923   007990  C081  FFDF         	movff	efgtoa@sign,indf2
  4924   007994                     l5626:
  4925                           
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4928   007994  517F               	movf	efgtoa@i& (0+255),w,b
  4929   007996  5F75               	subwf	efgtoa@w& (0+255),f,b
  4930   007998  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4931   00799A  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4932   00799C                     
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4935   00799C  C02E  F00F         	movff	efgtoa@fp,pad@fp
  4936   0079A0  0E00               	movlw	low _dbuf
  4937   0079A2  2586               	addwf	efgtoa@n& (0+255),w,b
  4938   0079A4  6E10               	movwf	pad@buf^0,c
  4939   0079A6  0E01               	movlw	high _dbuf
  4940   0079A8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4941   0079AA  6E11               	movwf	(pad@buf+1)^0,c
  4942   0079AC  C075  F012         	movff	efgtoa@w,pad@p
  4943   0079B0  C076  F013         	movff	efgtoa@w+1,pad@p+1
  4944   0079B4  ECF4  F025         	call	_pad	;wreg free
  4945   0079B8                     l1219:
  4946   0079B8  0012               	return		;funcret
  4947   0079BA                     __end_of_efgtoa:
  4948                           	callstack 0
  4949                           
  4950 ;; *************** function _strcpy *****************
  4951 ;; Defined at:
  4952 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4955 ;;		 -> dbuf(80), 
  4956 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4957 ;;		 -> STR_6(4), STR_3(4), 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  d               2    4[COMRAM] PTR unsigned char 
  4960 ;;		 -> dbuf(80), 
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  2    0[COMRAM] PTR unsigned char 
  4963 ;; Registers used:
  4964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4970 ;;      Params:         4       0       0       0       0       0       0       0       0
  4971 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4973 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4974 ;;Total ram usage:        6 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_efgtoa
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text7
  4984   004902                     __ptext7:
  4985                           	callstack 0
  4986   004902                     _strcpy:
  4987                           	callstack 26
  4988   004902  C001  F005         	movff	strcpy@dest,strcpy@d
  4989   004906  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4990   00490A                     l5384:
  4991   00490A  C003  FFF6         	movff	strcpy@src,tblptrl
  4992   00490E  C004  FFF7         	movff	strcpy@src+1,tblptrh
  4993   004912  4A03               	infsnz	strcpy@src^0,f,c
  4994   004914  2A04               	incf	(strcpy@src+1)^0,f,c
  4995   004916                     	if	0	;tblptru may be non-zero
  4996   004916                     	endif
  4997   004916                     	if	0	;tblptru may be non-zero
  4998   004916                     	endif
  4999   004916  C005  FFD9         	movff	strcpy@d,fsr2l
  5000   00491A  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5001   00491E  4A05               	infsnz	strcpy@d^0,f,c
  5002   004920  2A06               	incf	(strcpy@d+1)^0,f,c
  5003   004922  0008               	tblrd		*
  5004   004924  CFF5 FFDF          	movff	tablat,indf2
  5005   004928  50DF               	movf	indf2,w,c
  5006   00492A  A4D8               	btfss	status,2,c
  5007   00492C  EF9A  F024         	goto	u6291
  5008   004930  EF9C  F024         	goto	u6290
  5009   004934                     u6291:
  5010   004934  EF85  F024         	goto	l5384
  5011   004938                     u6290:
  5012   004938  0012               	return		;funcret
  5013   00493A                     __end_of_strcpy:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function _pad *****************
  5017 ;; Defined at:
  5018 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  5021 ;;		 -> sprintf@f(12), 
  5022 ;;  buf             2   15[COMRAM] PTR unsigned char 
  5023 ;;		 -> dbuf(80), 
  5024 ;;  p               2   17[COMRAM] int 
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;  i               2   20[COMRAM] int 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5036 ;;      Params:         5       0       0       0       0       0       0       0       0
  5037 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5038 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5039 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5040 ;;Total ram usage:        8 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 3
  5043 ;; This function calls:
  5044 ;;		_fputc
  5045 ;;		_fputs
  5046 ;; This function is called by:
  5047 ;;		_efgtoa
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text8
  5052   004BE8                     __ptext8:
  5053                           	callstack 0
  5054   004BE8                     _pad:
  5055                           	callstack 23
  5056   004BE8                     
  5057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  5058   004BE8  BE13               	btfsc	(pad@p+1)^0,7,c
  5059   004BEA  EFFB  F025         	goto	u6270
  5060   004BEE  EFF9  F025         	goto	u6271
  5061   004BF2                     u6271:
  5062   004BF2  EFFF  F025         	goto	l1204
  5063   004BF6                     u6270:
  5064   004BF6                     
  5065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5066   004BF6  0E00               	movlw	0
  5067   004BF8  6E13               	movwf	(pad@p+1)^0,c
  5068   004BFA  0E00               	movlw	0
  5069   004BFC  6E12               	movwf	pad@p^0,c
  5070   004BFE                     l1204:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5073   004BFE  0E00               	movlw	0
  5074   004C00  6E16               	movwf	(pad@i+1)^0,c
  5075   004C02  0E00               	movlw	0
  5076   004C04  6E15               	movwf	pad@i^0,c
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5079   004C06  EF0F  F026         	goto	l5378
  5080   004C0A                     l5374:
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5083   004C0A  0E00               	movlw	0
  5084   004C0C  6E02               	movwf	(fputc@c+1)^0,c
  5085   004C0E  0E20               	movlw	32
  5086   004C10  6E01               	movwf	fputc@c^0,c
  5087   004C12  C00F  F003         	movff	pad@fp,fputc@fp
  5088   004C16  ECBD  F026         	call	_fputc	;wreg free
  5089   004C1A                     
  5090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5091   004C1A  4A15               	infsnz	pad@i^0,f,c
  5092   004C1C  2A16               	incf	(pad@i+1)^0,f,c
  5093   004C1E                     l5378:
  5094                           
  5095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5096   004C1E  5012               	movf	pad@p^0,w,c
  5097   004C20  5C15               	subwf	pad@i^0,w,c
  5098   004C22  5016               	movf	(pad@i+1)^0,w,c
  5099   004C24  0A80               	xorlw	128
  5100   004C26  6E14               	movwf	??_pad^0,c
  5101   004C28  5013               	movf	(pad@p+1)^0,w,c
  5102   004C2A  0A80               	xorlw	128
  5103   004C2C  5814               	subwfb	??_pad^0,w,c
  5104   004C2E  A0D8               	btfss	status,0,c
  5105   004C30  EF1C  F026         	goto	u6281
  5106   004C34  EF1E  F026         	goto	u6280
  5107   004C38                     u6281:
  5108   004C38  EF05  F026         	goto	l5374
  5109   004C3C                     u6280:
  5110   004C3C                     
  5111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5112   004C3C  C010  F009         	movff	pad@buf,fputs@s
  5113   004C40  C011  F00A         	movff	pad@buf+1,fputs@s+1
  5114   004C44  C00F  F00B         	movff	pad@fp,fputs@fp
  5115   004C48  ECBA  F024         	call	_fputs	;wreg free
  5116   004C4C  0012               	return		;funcret
  5117   004C4E                     __end_of_pad:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _fputs *****************
  5121 ;; Defined at:
  5122 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5125 ;;		 -> dbuf(80), 
  5126 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  5127 ;;		 -> sprintf@f(12), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  i               2   12[COMRAM] int 
  5130 ;;  c               1   11[COMRAM] unsigned char 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    8[COMRAM] int 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5140 ;;      Params:         3       0       0       0       0       0       0       0       0
  5141 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5143 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5144 ;;Total ram usage:        6 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 2
  5147 ;; This function calls:
  5148 ;;		_fputc
  5149 ;; This function is called by:
  5150 ;;		_pad
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text9
  5155   004974                     __ptext9:
  5156                           	callstack 0
  5157   004974                     _fputs:
  5158                           	callstack 23
  5159   004974  0E00               	movlw	0
  5160   004976  6E0E               	movwf	(fputs@i+1)^0,c
  5161   004978  0E00               	movlw	0
  5162   00497A  6E0D               	movwf	fputs@i^0,c
  5163   00497C  EFC9  F024         	goto	l5368
  5164   004980                     l5364:
  5165   004980  C00C  F001         	movff	fputs@c,fputc@c
  5166   004984  6A02               	clrf	(fputc@c+1)^0,c
  5167   004986  C00B  F003         	movff	fputs@fp,fputc@fp
  5168   00498A  ECBD  F026         	call	_fputc	;wreg free
  5169   00498E  4A0D               	infsnz	fputs@i^0,f,c
  5170   004990  2A0E               	incf	(fputs@i+1)^0,f,c
  5171   004992                     l5368:
  5172   004992  500D               	movf	fputs@i^0,w,c
  5173   004994  2409               	addwf	fputs@s^0,w,c
  5174   004996  6ED9               	movwf	fsr2l,c
  5175   004998  500E               	movf	(fputs@i+1)^0,w,c
  5176   00499A  200A               	addwfc	(fputs@s+1)^0,w,c
  5177   00499C  6EDA               	movwf	fsr2h,c
  5178   00499E  50DF               	movf	indf2,w,c
  5179   0049A0  6E0C               	movwf	fputs@c^0,c
  5180   0049A2  500C               	movf	fputs@c^0,w,c
  5181   0049A4  A4D8               	btfss	status,2,c
  5182   0049A6  EFD7  F024         	goto	u6261
  5183   0049AA  EFD9  F024         	goto	u6260
  5184   0049AE                     u6261:
  5185   0049AE  EFC0  F024         	goto	l5364
  5186   0049B2                     u6260:
  5187   0049B2  0012               	return		;funcret
  5188   0049B4                     __end_of_fputs:
  5189                           	callstack 0
  5190                           
  5191 ;; *************** function _fputc *****************
  5192 ;; Defined at:
  5193 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;  c               2    0[COMRAM] int 
  5196 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  5197 ;;		 -> sprintf@f(12), 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  2    0[COMRAM] int 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5209 ;;      Params:         3       0       0       0       0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5211 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5212 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5213 ;;Total ram usage:        8 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 1
  5216 ;; This function calls:
  5217 ;;		_putch
  5218 ;; This function is called by:
  5219 ;;		_pad
  5220 ;;		_vfpfcnvrt
  5221 ;;		_fputs
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text10
  5226   004D7A                     __ptext10:
  5227                           	callstack 0
  5228   004D7A                     _fputc:
  5229                           	callstack 26
  5230   004D7A  5003               	movf	fputc@fp^0,w,c
  5231   004D7C  B4D8               	btfsc	status,2,c
  5232   004D7E  EFC3  F026         	goto	u3161
  5233   004D82  EFC5  F026         	goto	u3160
  5234   004D86                     u3161:
  5235   004D86  EFCD  F026         	goto	l3390
  5236   004D8A                     u3160:
  5237   004D8A  5003               	movf	fputc@fp^0,w,c
  5238   004D8C  A4D8               	btfss	status,2,c
  5239   004D8E  EFCB  F026         	goto	u3171
  5240   004D92  EFCD  F026         	goto	u3170
  5241   004D96                     u3171:
  5242   004D96  EFD2  F026         	goto	l3392
  5243   004D9A                     u3170:
  5244   004D9A                     l3390:
  5245   004D9A  5001               	movf	fputc@c^0,w,c
  5246   004D9C  EC0A  F024         	call	_putch
  5247   004DA0  EF11  F027         	goto	l1357
  5248   004DA4                     l3392:
  5249   004DA4  5003               	movf	fputc@fp^0,w,c
  5250   004DA6  6ED9               	movwf	fsr2l,c
  5251   004DA8  6ADA               	clrf	fsr2h,c
  5252   004DAA  0E0A               	movlw	10
  5253   004DAC  26D9               	addwf	fsr2l,f,c
  5254   004DAE  50DE               	movf	postinc2,w,c
  5255   004DB0  10DE               	iorwf	postinc2,w,c
  5256   004DB2  B4D8               	btfsc	status,2,c
  5257   004DB4  EFDE  F026         	goto	u3181
  5258   004DB8  EFE0  F026         	goto	u3180
  5259   004DBC                     u3181:
  5260   004DBC  EFF9  F026         	goto	l3396
  5261   004DC0                     u3180:
  5262   004DC0  5003               	movf	fputc@fp^0,w,c
  5263   004DC2  6ED9               	movwf	fsr2l,c
  5264   004DC4  6ADA               	clrf	fsr2h,c
  5265   004DC6  0E0A               	movlw	10
  5266   004DC8  26D9               	addwf	fsr2l,f,c
  5267   004DCA  5003               	movf	fputc@fp^0,w,c
  5268   004DCC  6EE1               	movwf	fsr1l,c
  5269   004DCE  6AE2               	clrf	fsr1h,c
  5270   004DD0  0E03               	movlw	3
  5271   004DD2  26E1               	addwf	fsr1l,f,c
  5272   004DD4  50DE               	movf	postinc2,w,c
  5273   004DD6  5CE6               	subwf	postinc1,w,c
  5274   004DD8  50E6               	movf	postinc1,w,c
  5275   004DDA  0A80               	xorlw	128
  5276   004DDC  6E08               	movwf	(??_fputc+4)^0,c
  5277   004DDE  50DE               	movf	postinc2,w,c
  5278   004DE0  0A80               	xorlw	128
  5279   004DE2  5808               	subwfb	(??_fputc+4)^0,w,c
  5280   004DE4  B0D8               	btfsc	status,0,c
  5281   004DE6  EFF7  F026         	goto	u3191
  5282   004DEA  EFF9  F026         	goto	u3190
  5283   004DEE                     u3191:
  5284   004DEE  EF11  F027         	goto	l1357
  5285   004DF2                     u3190:
  5286   004DF2                     l3396:
  5287   004DF2  5003               	movf	fputc@fp^0,w,c
  5288   004DF4  6ED9               	movwf	fsr2l,c
  5289   004DF6  6ADA               	clrf	fsr2h,c
  5290   004DF8  0E03               	movlw	3
  5291   004DFA  26D9               	addwf	fsr2l,f,c
  5292   004DFC  50DF               	movf	indf2,w,c
  5293   004DFE  6E04               	movwf	??_fputc^0,c
  5294   004E00  5003               	movf	fputc@fp^0,w,c
  5295   004E02  6ED9               	movwf	fsr2l,c
  5296   004E04  6ADA               	clrf	fsr2h,c
  5297   004E06  50DF               	movf	indf2,w,c
  5298   004E08  2404               	addwf	??_fputc^0,w,c
  5299   004E0A  6ED9               	movwf	fsr2l,c
  5300   004E0C  6ADA               	clrf	fsr2h,c
  5301   004E0E  C001  FFDF         	movff	fputc@c,indf2
  5302   004E12  5003               	movf	fputc@fp^0,w,c
  5303   004E14  6ED9               	movwf	fsr2l,c
  5304   004E16  6ADA               	clrf	fsr2h,c
  5305   004E18  0E03               	movlw	3
  5306   004E1A  26D9               	addwf	fsr2l,f,c
  5307   004E1C  2ADE               	incf	postinc2,f,c
  5308   004E1E  0E00               	movlw	0
  5309   004E20  22DD               	addwfc	postdec2,f,c
  5310   004E22                     l1357:
  5311   004E22  0012               	return		;funcret
  5312   004E24                     __end_of_fputc:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _putch *****************
  5316 ;; Defined at:
  5317 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  c               1    wreg     unsigned char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  c               1    0[COMRAM] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_fputc
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text11
  5345   004814                     __ptext11:
  5346                           	callstack 0
  5347   004814                     _putch:
  5348                           	callstack 26
  5349   004814  0012               	return		;funcret
  5350   004816                     __end_of_putch:
  5351                           	callstack 0
  5352                           
  5353 ;; *************** function _memcpy *****************
  5354 ;; Defined at:
  5355 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  d1              2    0[COMRAM] PTR void 
  5358 ;;		 -> dbuf(80), 
  5359 ;;  s1              2    2[COMRAM] PTR const void 
  5360 ;;		 -> dbuf(80), 
  5361 ;;  n               2    4[COMRAM] unsigned int 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5364 ;;		 -> dbuf(80), 
  5365 ;;  d               2    7[COMRAM] PTR unsigned char 
  5366 ;;		 -> dbuf(80), 
  5367 ;;  tmp             1    6[COMRAM] unsigned char 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    0[COMRAM] PTR void 
  5370 ;; Registers used:
  5371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5377 ;;      Params:         6       0       0       0       0       0       0       0       0
  5378 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5380 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5381 ;;Total ram usage:       11 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_efgtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text12
  5391   004A86                     __ptext12:
  5392                           	callstack 0
  5393   004A86                     _memcpy:
  5394                           	callstack 26
  5395   004A86  C003  F00A         	movff	memcpy@s1,memcpy@s
  5396   004A8A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5397   004A8E  C001  F008         	movff	memcpy@d1,memcpy@d
  5398   004A92  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5399   004A96  EF5D  F025         	goto	l5396
  5400   004A9A                     l5388:
  5401   004A9A  C00A  FFD9         	movff	memcpy@s,fsr2l
  5402   004A9E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5403   004AA2  50DF               	movf	indf2,w,c
  5404   004AA4  6E07               	movwf	memcpy@tmp^0,c
  5405   004AA6  4A0A               	infsnz	memcpy@s^0,f,c
  5406   004AA8  2A0B               	incf	(memcpy@s+1)^0,f,c
  5407   004AAA  C008  FFD9         	movff	memcpy@d,fsr2l
  5408   004AAE  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5409   004AB2  C007  FFDF         	movff	memcpy@tmp,indf2
  5410   004AB6  4A08               	infsnz	memcpy@d^0,f,c
  5411   004AB8  2A09               	incf	(memcpy@d+1)^0,f,c
  5412   004ABA                     l5396:
  5413   004ABA  0605               	decf	memcpy@n^0,f,c
  5414   004ABC  A0D8               	btfss	status,0,c
  5415   004ABE  0606               	decf	(memcpy@n+1)^0,f,c
  5416   004AC0  2805               	incf	memcpy@n^0,w,c
  5417   004AC2  E106               	bnz	u6301
  5418   004AC4  2806               	incf	(memcpy@n+1)^0,w,c
  5419   004AC6  A4D8               	btfss	status,2,c
  5420   004AC8  EF68  F025         	goto	u6301
  5421   004ACC  EF6A  F025         	goto	u6300
  5422   004AD0                     u6301:
  5423   004AD0  EF4D  F025         	goto	l5388
  5424   004AD4                     u6300:
  5425   004AD4  0012               	return		;funcret
  5426   004AD6                     __end_of_memcpy:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _labs *****************
  5430 ;; Defined at:
  5431 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  a               4    0[COMRAM] long 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  4    0[COMRAM] long 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5445 ;;      Params:         4       0       0       0       0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5447 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5448 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5449 ;;Total ram usage:        8 bytes
  5450 ;; Hardware stack levels used: 1
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_efgtoa
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text13
  5459   004AD6                     __ptext13:
  5460                           	callstack 0
  5461   004AD6                     _labs:
  5462                           	callstack 26
  5463   004AD6  BE04               	btfsc	(labs@a+3)^0,7,c
  5464   004AD8  EF70  F025         	goto	u4301
  5465   004ADC  EF72  F025         	goto	u4300
  5466   004AE0                     u4301:
  5467   004AE0  EF7C  F025         	goto	l4030
  5468   004AE4                     u4300:
  5469   004AE4  C001  F001         	movff	labs@a,?_labs
  5470   004AE8  C002  F002         	movff	labs@a+1,?_labs+1
  5471   004AEC  C003  F003         	movff	labs@a+2,?_labs+2
  5472   004AF0  C004  F004         	movff	labs@a+3,?_labs+3
  5473   004AF4  EF95  F025         	goto	l1339
  5474   004AF8                     l4030:
  5475   004AF8  C001  F005         	movff	labs@a,??_labs
  5476   004AFC  C002  F006         	movff	labs@a+1,??_labs+1
  5477   004B00  C003  F007         	movff	labs@a+2,??_labs+2
  5478   004B04  C004  F008         	movff	labs@a+3,??_labs+3
  5479   004B08  1E05               	comf	??_labs^0,f,c
  5480   004B0A  1E06               	comf	(??_labs+1)^0,f,c
  5481   004B0C  1E07               	comf	(??_labs+2)^0,f,c
  5482   004B0E  1E08               	comf	(??_labs+3)^0,f,c
  5483   004B10  2A05               	incf	??_labs^0,f,c
  5484   004B12  0E00               	movlw	0
  5485   004B14  2206               	addwfc	(??_labs+1)^0,f,c
  5486   004B16  2207               	addwfc	(??_labs+2)^0,f,c
  5487   004B18  2208               	addwfc	(??_labs+3)^0,f,c
  5488   004B1A  C005  F001         	movff	??_labs,?_labs
  5489   004B1E  C006  F002         	movff	??_labs+1,?_labs+1
  5490   004B22  C007  F003         	movff	??_labs+2,?_labs+2
  5491   004B26  C008  F004         	movff	??_labs+3,?_labs+3
  5492   004B2A                     l1339:
  5493   004B2A  0012               	return		;funcret
  5494   004B2C                     __end_of_labs:
  5495                           	callstack 0
  5496                           
  5497 ;; *************** function _floorf *****************
  5498 ;; Defined at:
  5499 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  x               4   25[COMRAM] float 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  u               4   41[COMRAM] struct .
  5504 ;;  m               4   35[COMRAM] unsigned long 
  5505 ;;  e               2   39[COMRAM] int 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  4   25[COMRAM] float 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5515 ;;      Params:         4       0       0       0       0       0       0       0       0
  5516 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5518 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:       20 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_efgtoa
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text14
  5529   005BE2                     __ptext14:
  5530                           	callstack 0
  5531   005BE2                     _floorf:
  5532                           	callstack 26
  5533   005BE2  C0AB  F02A         	movff	floorf@F521,floorf@u
  5534   005BE6  C0AC  F02B         	movff	floorf@F521+1,floorf@u+1
  5535   005BEA  C0AD  F02C         	movff	floorf@F521+2,floorf@u+2
  5536   005BEE  C0AE  F02D         	movff	floorf@F521+3,floorf@u+3
  5537   005BF2  C01A  F02A         	movff	floorf@x,floorf@u
  5538   005BF6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5539   005BFA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5540   005BFE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5541   005C02  0E81               	movlw	129
  5542   005C04  6E1E               	movwf	??_floorf^0,c
  5543   005C06  0EFF               	movlw	255
  5544   005C08  6E1F               	movwf	(??_floorf+1)^0,c
  5545   005C0A  C02A  F020         	movff	floorf@u,??_floorf+2
  5546   005C0E  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5547   005C12  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5548   005C16  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5549   005C1A  0E18               	movlw	24
  5550   005C1C  EF15  F02E         	goto	u4310
  5551   005C20                     u4315:
  5552   005C20  90D8               	bcf	status,0,c
  5553   005C22  3223               	rrcf	(??_floorf+5)^0,f,c
  5554   005C24  3222               	rrcf	(??_floorf+4)^0,f,c
  5555   005C26  3221               	rrcf	(??_floorf+3)^0,f,c
  5556   005C28  3220               	rrcf	(??_floorf+2)^0,f,c
  5557   005C2A                     u4310:
  5558   005C2A  2EE8               	decfsz	wreg,f,c
  5559   005C2C  EF10  F02E         	goto	u4315
  5560   005C30  5020               	movf	(??_floorf+2)^0,w,c
  5561   005C32  241E               	addwf	??_floorf^0,w,c
  5562   005C34  6E28               	movwf	floorf@e^0,c
  5563   005C36  0E00               	movlw	0
  5564   005C38  201F               	addwfc	(??_floorf+1)^0,w,c
  5565   005C3A  6E29               	movwf	(floorf@e+1)^0,c
  5566   005C3C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5567   005C3E  EF2A  F02E         	goto	u4321
  5568   005C42  5029               	movf	(floorf@e+1)^0,w,c
  5569   005C44  E109               	bnz	u4320
  5570   005C46  0E17               	movlw	23
  5571   005C48  5C28               	subwf	floorf@e^0,w,c
  5572   005C4A  A0D8               	btfss	status,0,c
  5573   005C4C  EF2A  F02E         	goto	u4321
  5574   005C50  EF2C  F02E         	goto	u4320
  5575   005C54                     u4321:
  5576   005C54  EF36  F02E         	goto	l4040
  5577   005C58                     u4320:
  5578   005C58                     l4038:
  5579   005C58  C01A  F01A         	movff	floorf@x,?_floorf
  5580   005C5C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5581   005C60  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5582   005C64  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5583   005C68  EFF9  F02E         	goto	l1325
  5584   005C6C                     l4040:
  5585   005C6C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5586   005C6E  EF3B  F02E         	goto	u4331
  5587   005C72  EF3D  F02E         	goto	u4330
  5588   005C76                     u4331:
  5589   005C76  EFAD  F02E         	goto	l4050
  5590   005C7A                     u4330:
  5591   005C7A  C028  F01E         	movff	floorf@e,??_floorf
  5592   005C7E  0EFF               	movlw	255
  5593   005C80  6E1F               	movwf	(??_floorf+1)^0,c
  5594   005C82  0EFF               	movlw	255
  5595   005C84  6E20               	movwf	(??_floorf+2)^0,c
  5596   005C86  0E7F               	movlw	127
  5597   005C88  6E21               	movwf	(??_floorf+3)^0,c
  5598   005C8A  0E00               	movlw	0
  5599   005C8C  6E22               	movwf	(??_floorf+4)^0,c
  5600   005C8E                     u4345:
  5601   005C8E  661E               	tstfsz	??_floorf^0,c
  5602   005C90  EF4C  F02E         	goto	u4346
  5603   005C94  EF54  F02E         	goto	u4347
  5604   005C98                     u4346:
  5605   005C98  3422               	rlcf	(??_floorf+4)^0,w,c
  5606   005C9A  3222               	rrcf	(??_floorf+4)^0,f,c
  5607   005C9C  3221               	rrcf	(??_floorf+3)^0,f,c
  5608   005C9E  3220               	rrcf	(??_floorf+2)^0,f,c
  5609   005CA0  321F               	rrcf	(??_floorf+1)^0,f,c
  5610   005CA2  2E1E               	decfsz	??_floorf^0,f,c
  5611   005CA4  EF47  F02E         	goto	u4345
  5612   005CA8                     u4347:
  5613   005CA8  C01F  F024         	movff	??_floorf+1,floorf@m
  5614   005CAC  C020  F025         	movff	??_floorf+2,floorf@m+1
  5615   005CB0  C021  F026         	movff	??_floorf+3,floorf@m+2
  5616   005CB4  C022  F027         	movff	??_floorf+4,floorf@m+3
  5617   005CB8  5024               	movf	floorf@m^0,w,c
  5618   005CBA  142A               	andwf	floorf@u^0,w,c
  5619   005CBC  6E1E               	movwf	??_floorf^0,c
  5620   005CBE  5025               	movf	(floorf@m+1)^0,w,c
  5621   005CC0  142B               	andwf	(floorf@u+1)^0,w,c
  5622   005CC2  6E1F               	movwf	(??_floorf+1)^0,c
  5623   005CC4  5026               	movf	(floorf@m+2)^0,w,c
  5624   005CC6  142C               	andwf	(floorf@u+2)^0,w,c
  5625   005CC8  6E20               	movwf	(??_floorf+2)^0,c
  5626   005CCA  5027               	movf	(floorf@m+3)^0,w,c
  5627   005CCC  142D               	andwf	(floorf@u+3)^0,w,c
  5628   005CCE  6E21               	movwf	(??_floorf+3)^0,c
  5629   005CD0  501E               	movf	??_floorf^0,w,c
  5630   005CD2  101F               	iorwf	(??_floorf+1)^0,w,c
  5631   005CD4  1020               	iorwf	(??_floorf+2)^0,w,c
  5632   005CD6  1021               	iorwf	(??_floorf+3)^0,w,c
  5633   005CD8  A4D8               	btfss	status,2,c
  5634   005CDA  EF71  F02E         	goto	u4351
  5635   005CDE  EF73  F02E         	goto	u4350
  5636   005CE2                     u4351:
  5637   005CE2  EF75  F02E         	goto	l4046
  5638   005CE6                     u4350:
  5639   005CE6  EF2C  F02E         	goto	l4038
  5640   005CEA                     l4046:
  5641   005CEA  C02A  F01E         	movff	floorf@u,??_floorf
  5642   005CEE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5643   005CF2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5644   005CF6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5645   005CFA  0E20               	movlw	32
  5646   005CFC  EF85  F02E         	goto	u4360
  5647   005D00                     u4365:
  5648   005D00  90D8               	bcf	status,0,c
  5649   005D02  3221               	rrcf	(??_floorf+3)^0,f,c
  5650   005D04  3220               	rrcf	(??_floorf+2)^0,f,c
  5651   005D06  321F               	rrcf	(??_floorf+1)^0,f,c
  5652   005D08  321E               	rrcf	??_floorf^0,f,c
  5653   005D0A                     u4360:
  5654   005D0A  2EE8               	decfsz	wreg,f,c
  5655   005D0C  EF80  F02E         	goto	u4365
  5656   005D10  501E               	movf	??_floorf^0,w,c
  5657   005D12  101F               	iorwf	(??_floorf+1)^0,w,c
  5658   005D14  1020               	iorwf	(??_floorf+2)^0,w,c
  5659   005D16  1021               	iorwf	(??_floorf+3)^0,w,c
  5660   005D18  B4D8               	btfsc	status,2,c
  5661   005D1A  EF91  F02E         	goto	u4371
  5662   005D1E  EF93  F02E         	goto	u4370
  5663   005D22                     u4371:
  5664   005D22  EF9B  F02E         	goto	l1328
  5665   005D26                     u4370:
  5666   005D26  5024               	movf	floorf@m^0,w,c
  5667   005D28  262A               	addwf	floorf@u^0,f,c
  5668   005D2A  5025               	movf	(floorf@m+1)^0,w,c
  5669   005D2C  222B               	addwfc	(floorf@u+1)^0,f,c
  5670   005D2E  5026               	movf	(floorf@m+2)^0,w,c
  5671   005D30  222C               	addwfc	(floorf@u+2)^0,f,c
  5672   005D32  5027               	movf	(floorf@m+3)^0,w,c
  5673   005D34  222D               	addwfc	(floorf@u+3)^0,f,c
  5674   005D36                     l1328:
  5675   005D36  1C24               	comf	floorf@m^0,w,c
  5676   005D38  6E1E               	movwf	??_floorf^0,c
  5677   005D3A  1C25               	comf	(floorf@m+1)^0,w,c
  5678   005D3C  6E1F               	movwf	(??_floorf+1)^0,c
  5679   005D3E  1C26               	comf	(floorf@m+2)^0,w,c
  5680   005D40  6E20               	movwf	(??_floorf+2)^0,c
  5681   005D42  1C27               	comf	(floorf@m+3)^0,w,c
  5682   005D44  6E21               	movwf	(??_floorf+3)^0,c
  5683   005D46  501E               	movf	??_floorf^0,w,c
  5684   005D48  162A               	andwf	floorf@u^0,f,c
  5685   005D4A  501F               	movf	(??_floorf+1)^0,w,c
  5686   005D4C  162B               	andwf	(floorf@u+1)^0,f,c
  5687   005D4E  5020               	movf	(??_floorf+2)^0,w,c
  5688   005D50  162C               	andwf	(floorf@u+2)^0,f,c
  5689   005D52  5021               	movf	(??_floorf+3)^0,w,c
  5690   005D54  162D               	andwf	(floorf@u+3)^0,f,c
  5691   005D56  EFF1  F02E         	goto	l4058
  5692   005D5A                     l4050:
  5693   005D5A  C02A  F01E         	movff	floorf@u,??_floorf
  5694   005D5E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5695   005D62  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5696   005D66  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5697   005D6A  0E20               	movlw	32
  5698   005D6C  EFBD  F02E         	goto	u4380
  5699   005D70                     u4385:
  5700   005D70  90D8               	bcf	status,0,c
  5701   005D72  3221               	rrcf	(??_floorf+3)^0,f,c
  5702   005D74  3220               	rrcf	(??_floorf+2)^0,f,c
  5703   005D76  321F               	rrcf	(??_floorf+1)^0,f,c
  5704   005D78  321E               	rrcf	??_floorf^0,f,c
  5705   005D7A                     u4380:
  5706   005D7A  2EE8               	decfsz	wreg,f,c
  5707   005D7C  EFB8  F02E         	goto	u4385
  5708   005D80  501E               	movf	??_floorf^0,w,c
  5709   005D82  101F               	iorwf	(??_floorf+1)^0,w,c
  5710   005D84  1020               	iorwf	(??_floorf+2)^0,w,c
  5711   005D86  1021               	iorwf	(??_floorf+3)^0,w,c
  5712   005D88  A4D8               	btfss	status,2,c
  5713   005D8A  EFC9  F02E         	goto	u4391
  5714   005D8E  EFCB  F02E         	goto	u4390
  5715   005D92                     u4391:
  5716   005D92  EFD5  F02E         	goto	l4054
  5717   005D96                     u4390:
  5718   005D96  0E00               	movlw	0
  5719   005D98  6E2A               	movwf	floorf@u^0,c
  5720   005D9A  0E00               	movlw	0
  5721   005D9C  6E2B               	movwf	(floorf@u+1)^0,c
  5722   005D9E  0E00               	movlw	0
  5723   005DA0  6E2C               	movwf	(floorf@u+2)^0,c
  5724   005DA2  0E00               	movlw	0
  5725   005DA4  6E2D               	movwf	(floorf@u+3)^0,c
  5726   005DA6  EFF1  F02E         	goto	l4058
  5727   005DAA                     l4054:
  5728   005DAA  90D8               	bcf	status,0,c
  5729   005DAC  342A               	rlcf	floorf@u^0,w,c
  5730   005DAE  6E1E               	movwf	??_floorf^0,c
  5731   005DB0  342B               	rlcf	(floorf@u+1)^0,w,c
  5732   005DB2  6E1F               	movwf	(??_floorf+1)^0,c
  5733   005DB4  342C               	rlcf	(floorf@u+2)^0,w,c
  5734   005DB6  6E20               	movwf	(??_floorf+2)^0,c
  5735   005DB8  342D               	rlcf	(floorf@u+3)^0,w,c
  5736   005DBA  6E21               	movwf	(??_floorf+3)^0,c
  5737   005DBC  501E               	movf	??_floorf^0,w,c
  5738   005DBE  101F               	iorwf	(??_floorf+1)^0,w,c
  5739   005DC0  1020               	iorwf	(??_floorf+2)^0,w,c
  5740   005DC2  1021               	iorwf	(??_floorf+3)^0,w,c
  5741   005DC4  B4D8               	btfsc	status,2,c
  5742   005DC6  EFE7  F02E         	goto	u4401
  5743   005DCA  EFE9  F02E         	goto	u4400
  5744   005DCE                     u4401:
  5745   005DCE  EFF1  F02E         	goto	l4058
  5746   005DD2                     u4400:
  5747   005DD2  0E00               	movlw	0
  5748   005DD4  6E2A               	movwf	floorf@u^0,c
  5749   005DD6  0E00               	movlw	0
  5750   005DD8  6E2B               	movwf	(floorf@u+1)^0,c
  5751   005DDA  0E80               	movlw	128
  5752   005DDC  6E2C               	movwf	(floorf@u+2)^0,c
  5753   005DDE  0EBF               	movlw	191
  5754   005DE0  6E2D               	movwf	(floorf@u+3)^0,c
  5755   005DE2                     l4058:
  5756   005DE2  C02A  F01A         	movff	floorf@u,?_floorf
  5757   005DE6  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5758   005DEA  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5759   005DEE  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5760   005DF2                     l1325:
  5761   005DF2  0012               	return		;funcret
  5762   005DF4                     __end_of_floorf:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function ___fpclassifyf *****************
  5766 ;; Defined at:
  5767 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  x               4    0[COMRAM] float 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  u               4   10[COMRAM] struct .
  5772 ;;  e               2    8[COMRAM] int 
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  2    0[COMRAM] int 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5782 ;;      Params:         4       0       0       0       0       0       0       0       0
  5783 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5784 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5785 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5786 ;;Total ram usage:       14 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_efgtoa
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text15
  5796   005114                     __ptext15:
  5797                           	callstack 0
  5798   005114                     ___fpclassifyf:
  5799                           	callstack 26
  5800   005114  C0AF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5801   005118  C0B0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5802   00511C  C0B1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5803   005120  C0B2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5804   005124  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5805   005128  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5806   00512C  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5807   005130  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5808   005134  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5809   005138  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5810   00513C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5811   005140  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5812   005144  0E18               	movlw	24
  5813   005146  EFAA  F028         	goto	u4220
  5814   00514A                     u4225:
  5815   00514A  90D8               	bcf	status,0,c
  5816   00514C  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5817   00514E  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5818   005150  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5819   005152  3205               	rrcf	??___fpclassifyf^0,f,c
  5820   005154                     u4220:
  5821   005154  2EE8               	decfsz	wreg,f,c
  5822   005156  EFA5  F028         	goto	u4225
  5823   00515A  5005               	movf	??___fpclassifyf^0,w,c
  5824   00515C  6E09               	movwf	___fpclassifyf@e^0,c
  5825   00515E  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5826   005160  5009               	movf	___fpclassifyf@e^0,w,c
  5827   005162  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5828   005164  A4D8               	btfss	status,2,c
  5829   005166  EFB7  F028         	goto	u4231
  5830   00516A  EFB9  F028         	goto	u4230
  5831   00516E                     u4231:
  5832   00516E  EFD9  F028         	goto	l4012
  5833   005172                     u4230:
  5834   005172  90D8               	bcf	status,0,c
  5835   005174  340B               	rlcf	___fpclassifyf@u^0,w,c
  5836   005176  6E05               	movwf	??___fpclassifyf^0,c
  5837   005178  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5838   00517A  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5839   00517C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5840   00517E  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5841   005180  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5842   005182  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5843   005184  5005               	movf	??___fpclassifyf^0,w,c
  5844   005186  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5845   005188  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5846   00518A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5847   00518C  A4D8               	btfss	status,2,c
  5848   00518E  EFCB  F028         	goto	u4241
  5849   005192  EFCD  F028         	goto	u4240
  5850   005196                     u4241:
  5851   005196  EFD3  F028         	goto	l4008
  5852   00519A                     u4240:
  5853   00519A  0E00               	movlw	0
  5854   00519C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5855   00519E  0E02               	movlw	2
  5856   0051A0  6E01               	movwf	?___fpclassifyf^0,c
  5857   0051A2  EF08  F029         	goto	l1318
  5858   0051A6                     l4008:
  5859   0051A6  0E00               	movlw	0
  5860   0051A8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5861   0051AA  0E03               	movlw	3
  5862   0051AC  6E01               	movwf	?___fpclassifyf^0,c
  5863   0051AE  EF08  F029         	goto	l1318
  5864   0051B2                     l4012:
  5865   0051B2  2809               	incf	___fpclassifyf@e^0,w,c
  5866   0051B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5867   0051B6  A4D8               	btfss	status,2,c
  5868   0051B8  EFE0  F028         	goto	u4251
  5869   0051BC  EFE2  F028         	goto	u4250
  5870   0051C0                     u4251:
  5871   0051C0  EF04  F029         	goto	l4018
  5872   0051C4                     u4250:
  5873   0051C4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5874   0051C8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5875   0051CC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5876   0051D0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5877   0051D4  0E09               	movlw	9
  5878   0051D6                     u4265:
  5879   0051D6  90D8               	bcf	status,0,c
  5880   0051D8  3605               	rlcf	??___fpclassifyf^0,f,c
  5881   0051DA  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5882   0051DC  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5883   0051DE  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5884   0051E0  2EE8               	decfsz	wreg,f,c
  5885   0051E2  EFEB  F028         	goto	u4265
  5886   0051E6  5005               	movf	??___fpclassifyf^0,w,c
  5887   0051E8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5888   0051EA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5889   0051EC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5890   0051EE  B4D8               	btfsc	status,2,c
  5891   0051F0  EFFC  F028         	goto	u4271
  5892   0051F4  EFFF  F028         	goto	u4270
  5893   0051F8                     u4271:
  5894   0051F8  0E01               	movlw	1
  5895   0051FA  EF00  F029         	goto	u4280
  5896   0051FE                     u4270:
  5897   0051FE  0E00               	movlw	0
  5898   005200                     u4280:
  5899   005200  6E01               	movwf	?___fpclassifyf^0,c
  5900   005202  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5901   005204  EF08  F029         	goto	l1318
  5902   005208                     l4018:
  5903   005208  0E00               	movlw	0
  5904   00520A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5905   00520C  0E04               	movlw	4
  5906   00520E  6E01               	movwf	?___fpclassifyf^0,c
  5907   005210                     l1318:
  5908   005210  0012               	return		;funcret
  5909   005212                     __end_of___fpclassifyf:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function ___fltol *****************
  5913 ;; Defined at:
  5914 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  f1              4    0[COMRAM] int 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  exp1            1    9[COMRAM] unsigned char 
  5919 ;;  sign1           1    8[COMRAM] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  4    0[COMRAM] long 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5929 ;;      Params:         4       0       0       0       0       0       0       0       0
  5930 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5931 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5932 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5933 ;;Total ram usage:       10 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_efgtoa
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text16
  5943   005316                     __ptext16:
  5944                           	callstack 0
  5945   005316                     ___fltol:
  5946                           	callstack 26
  5947   005316  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5948   005318  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5949   00531A  6E0A               	movwf	___fltol@exp1^0,c
  5950   00531C  500A               	movf	___fltol@exp1^0,w,c
  5951   00531E  A4D8               	btfss	status,2,c
  5952   005320  EF94  F029         	goto	u4131
  5953   005324  EF96  F029         	goto	u4130
  5954   005328                     u4131:
  5955   005328  EFA0  F029         	goto	l3950
  5956   00532C                     u4130:
  5957   00532C                     l3946:
  5958   00532C  0E00               	movlw	0
  5959   00532E  6E01               	movwf	?___fltol^0,c
  5960   005330  0E00               	movlw	0
  5961   005332  6E02               	movwf	(?___fltol+1)^0,c
  5962   005334  0E00               	movlw	0
  5963   005336  6E03               	movwf	(?___fltol+2)^0,c
  5964   005338  0E00               	movlw	0
  5965   00533A  6E04               	movwf	(?___fltol+3)^0,c
  5966   00533C  EF0D  F02A         	goto	l789
  5967   005340                     l3950:
  5968   005340  C001  F005         	movff	___fltol@f1,??___fltol
  5969   005344  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5970   005348  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5971   00534C  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5972   005350  0E20               	movlw	32
  5973   005352  EFB0  F029         	goto	u4140
  5974   005356                     u4145:
  5975   005356  90D8               	bcf	status,0,c
  5976   005358  3208               	rrcf	(??___fltol+3)^0,f,c
  5977   00535A  3207               	rrcf	(??___fltol+2)^0,f,c
  5978   00535C  3206               	rrcf	(??___fltol+1)^0,f,c
  5979   00535E  3205               	rrcf	??___fltol^0,f,c
  5980   005360                     u4140:
  5981   005360  2EE8               	decfsz	wreg,f,c
  5982   005362  EFAB  F029         	goto	u4145
  5983   005366  5005               	movf	??___fltol^0,w,c
  5984   005368  6E09               	movwf	___fltol@sign1^0,c
  5985   00536A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5986   00536C  0EFF               	movlw	255
  5987   00536E  1601               	andwf	___fltol@f1^0,f,c
  5988   005370  0EFF               	movlw	255
  5989   005372  1602               	andwf	(___fltol@f1+1)^0,f,c
  5990   005374  0EFF               	movlw	255
  5991   005376  1603               	andwf	(___fltol@f1+2)^0,f,c
  5992   005378  0E00               	movlw	0
  5993   00537A  1604               	andwf	(___fltol@f1+3)^0,f,c
  5994   00537C  0E96               	movlw	150
  5995   00537E  5E0A               	subwf	___fltol@exp1^0,f,c
  5996   005380  BE0A               	btfsc	___fltol@exp1^0,7,c
  5997   005382  EFC7  F029         	goto	u4150
  5998   005386  EFC5  F029         	goto	u4151
  5999   00538A                     u4151:
  6000   00538A  EFDD  F029         	goto	l3970
  6001   00538E                     u4150:
  6002   00538E  500A               	movf	___fltol@exp1^0,w,c
  6003   005390  0A80               	xorlw	128
  6004   005392  0F97               	addlw	151
  6005   005394  B0D8               	btfsc	status,0,c
  6006   005396  EFCF  F029         	goto	u4161
  6007   00539A  EFD1  F029         	goto	u4160
  6008   00539E                     u4161:
  6009   00539E  EFD3  F029         	goto	l3966
  6010   0053A2                     u4160:
  6011   0053A2  EF96  F029         	goto	l3946
  6012   0053A6                     l3966:
  6013   0053A6  90D8               	bcf	status,0,c
  6014   0053A8  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6015   0053AA  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6016   0053AC  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6017   0053AE  3201               	rrcf	___fltol@f1^0,f,c
  6018   0053B0  3E0A               	incfsz	___fltol@exp1^0,f,c
  6019   0053B2  EFD3  F029         	goto	l3966
  6020   0053B6  EFF5  F029         	goto	l3980
  6021   0053BA                     l3970:
  6022   0053BA  0E1F               	movlw	31
  6023   0053BC  640A               	cpfsgt	___fltol@exp1^0,c
  6024   0053BE  EFE3  F029         	goto	u4171
  6025   0053C2  EFE5  F029         	goto	u4170
  6026   0053C6                     u4171:
  6027   0053C6  EFED  F029         	goto	l3978
  6028   0053CA                     u4170:
  6029   0053CA  EF96  F029         	goto	l3946
  6030   0053CE                     l3976:
  6031   0053CE  90D8               	bcf	status,0,c
  6032   0053D0  3601               	rlcf	___fltol@f1^0,f,c
  6033   0053D2  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6034   0053D4  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6035   0053D6  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6036   0053D8  060A               	decf	___fltol@exp1^0,f,c
  6037   0053DA                     l3978:
  6038   0053DA  500A               	movf	___fltol@exp1^0,w,c
  6039   0053DC  A4D8               	btfss	status,2,c
  6040   0053DE  EFF3  F029         	goto	u4181
  6041   0053E2  EFF5  F029         	goto	u4180
  6042   0053E6                     u4181:
  6043   0053E6  EFE7  F029         	goto	l3976
  6044   0053EA                     u4180:
  6045   0053EA                     l3980:
  6046   0053EA  5009               	movf	___fltol@sign1^0,w,c
  6047   0053EC  B4D8               	btfsc	status,2,c
  6048   0053EE  EFFB  F029         	goto	u4191
  6049   0053F2  EFFD  F029         	goto	u4190
  6050   0053F6                     u4191:
  6051   0053F6  EF05  F02A         	goto	l3984
  6052   0053FA                     u4190:
  6053   0053FA  1E04               	comf	(___fltol@f1+3)^0,f,c
  6054   0053FC  1E03               	comf	(___fltol@f1+2)^0,f,c
  6055   0053FE  1E02               	comf	(___fltol@f1+1)^0,f,c
  6056   005400  6C01               	negf	___fltol@f1^0,c
  6057   005402  0E00               	movlw	0
  6058   005404  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6059   005406  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6060   005408  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6061   00540A                     l3984:
  6062   00540A  C001  F001         	movff	___fltol@f1,?___fltol
  6063   00540E  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6064   005412  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6065   005416  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6066   00541A                     l789:
  6067   00541A  0012               	return		;funcret
  6068   00541C                     __end_of___fltol:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function ___flsub *****************
  6072 ;; Defined at:
  6073 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;  b               4   25[COMRAM] long 
  6076 ;;  a               4   29[COMRAM] long 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  4   25[COMRAM] long 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2, status,0, cstack
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6088 ;;      Params:         8       0       0       0       0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6091 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6092 ;;Total ram usage:        8 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 1
  6095 ;; This function calls:
  6096 ;;		___fladd
  6097 ;; This function is called by:
  6098 ;;		_efgtoa
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text17
  6103   0049F6                     __ptext17:
  6104                           	callstack 0
  6105   0049F6                     ___flsub:
  6106                           	callstack 25
  6107   0049F6  0E00               	movlw	0
  6108   0049F8  1A1E               	xorwf	___flsub@a^0,f,c
  6109   0049FA  0E00               	movlw	0
  6110   0049FC  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6111   0049FE  0E00               	movlw	0
  6112   004A00  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6113   004A02  0E80               	movlw	128
  6114   004A04  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6115   004A06  C01A  F001         	movff	___flsub@b,___fladd@b
  6116   004A0A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6117   004A0E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6118   004A12  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6119   004A16  C01E  F005         	movff	___flsub@a,___fladd@a
  6120   004A1A  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6121   004A1E  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6122   004A22  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6123   004A26  EC50  F035         	call	___fladd	;wreg free
  6124   004A2A  C001  F01A         	movff	?___fladd,?___flsub
  6125   004A2E  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6126   004A32  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6127   004A36  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6128   004A3A  0012               	return		;funcret
  6129   004A3C                     __end_of___flsub:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function ___fladd *****************
  6133 ;; Defined at:
  6134 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  b               4    0[COMRAM] long 
  6137 ;;  a               4    4[COMRAM] long 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  grs             1   15[COMRAM] unsigned char 
  6140 ;;  bexp            1   14[COMRAM] unsigned char 
  6141 ;;  aexp            1   13[COMRAM] unsigned char 
  6142 ;;  signs           1   12[COMRAM] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  4    0[COMRAM] unsigned char 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6152 ;;      Params:         8       0       0       0       0       0       0       0       0
  6153 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6154 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6155 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6156 ;;Total ram usage:       16 bytes
  6157 ;; Hardware stack levels used: 1
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		___flsub
  6162 ;;		_efgtoa
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text18
  6167   006AA0                     __ptext18:
  6168                           	callstack 0
  6169   006AA0                     ___fladd:
  6170                           	callstack 25
  6171   006AA0  5004               	movf	(___fladd@b+3)^0,w,c
  6172   006AA2  0B80               	andlw	128
  6173   006AA4  6E0D               	movwf	___fladd@signs^0,c
  6174   006AA6  5004               	movf	(___fladd@b+3)^0,w,c
  6175   006AA8  2404               	addwf	(___fladd@b+3)^0,w,c
  6176   006AAA  6E0F               	movwf	___fladd@bexp^0,c
  6177   006AAC  AE03               	btfss	(___fladd@b+2)^0,7,c
  6178   006AAE  EF5B  F035         	goto	u3221
  6179   006AB2  EF5D  F035         	goto	u3220
  6180   006AB6                     u3221:
  6181   006AB6  EF5E  F035         	goto	l3408
  6182   006ABA                     u3220:
  6183   006ABA  800F               	bsf	___fladd@bexp^0,0,c
  6184   006ABC                     l3408:
  6185   006ABC  500F               	movf	___fladd@bexp^0,w,c
  6186   006ABE  B4D8               	btfsc	status,2,c
  6187   006AC0  EF64  F035         	goto	u3231
  6188   006AC4  EF66  F035         	goto	u3230
  6189   006AC8                     u3231:
  6190   006AC8  EF7B  F035         	goto	l3418
  6191   006ACC                     u3230:
  6192   006ACC  280F               	incf	___fladd@bexp^0,w,c
  6193   006ACE  A4D8               	btfss	status,2,c
  6194   006AD0  EF6C  F035         	goto	u3241
  6195   006AD4  EF6E  F035         	goto	u3240
  6196   006AD8                     u3241:
  6197   006AD8  EF76  F035         	goto	l3414
  6198   006ADC                     u3240:
  6199   006ADC  0E00               	movlw	0
  6200   006ADE  6E01               	movwf	___fladd@b^0,c
  6201   006AE0  0E00               	movlw	0
  6202   006AE2  6E02               	movwf	(___fladd@b+1)^0,c
  6203   006AE4  0E00               	movlw	0
  6204   006AE6  6E03               	movwf	(___fladd@b+2)^0,c
  6205   006AE8  0E00               	movlw	0
  6206   006AEA  6E04               	movwf	(___fladd@b+3)^0,c
  6207   006AEC                     l3414:
  6208   006AEC  8E03               	bsf	(___fladd@b+2)^0,7,c
  6209   006AEE  0E00               	movlw	0
  6210   006AF0  6E04               	movwf	(___fladd@b+3)^0,c
  6211   006AF2  EF83  F035         	goto	l3420
  6212   006AF6                     l3418:
  6213   006AF6  0E00               	movlw	0
  6214   006AF8  6E01               	movwf	___fladd@b^0,c
  6215   006AFA  0E00               	movlw	0
  6216   006AFC  6E02               	movwf	(___fladd@b+1)^0,c
  6217   006AFE  0E00               	movlw	0
  6218   006B00  6E03               	movwf	(___fladd@b+2)^0,c
  6219   006B02  0E00               	movlw	0
  6220   006B04  6E04               	movwf	(___fladd@b+3)^0,c
  6221   006B06                     l3420:
  6222   006B06  5008               	movf	(___fladd@a+3)^0,w,c
  6223   006B08  0B80               	andlw	128
  6224   006B0A  6E0E               	movwf	___fladd@aexp^0,c
  6225   006B0C  500D               	movf	___fladd@signs^0,w,c
  6226   006B0E  180E               	xorwf	___fladd@aexp^0,w,c
  6227   006B10  B4D8               	btfsc	status,2,c
  6228   006B12  EF8D  F035         	goto	u3251
  6229   006B16  EF8F  F035         	goto	u3250
  6230   006B1A                     u3251:
  6231   006B1A  EF90  F035         	goto	l3426
  6232   006B1E                     u3250:
  6233   006B1E  8C0D               	bsf	___fladd@signs^0,6,c
  6234   006B20                     l3426:
  6235   006B20  5008               	movf	(___fladd@a+3)^0,w,c
  6236   006B22  2408               	addwf	(___fladd@a+3)^0,w,c
  6237   006B24  6E0E               	movwf	___fladd@aexp^0,c
  6238   006B26  AE07               	btfss	(___fladd@a+2)^0,7,c
  6239   006B28  EF98  F035         	goto	u3261
  6240   006B2C  EF9A  F035         	goto	u3260
  6241   006B30                     u3261:
  6242   006B30  EF9B  F035         	goto	l3432
  6243   006B34                     u3260:
  6244   006B34  800E               	bsf	___fladd@aexp^0,0,c
  6245   006B36                     l3432:
  6246   006B36  500E               	movf	___fladd@aexp^0,w,c
  6247   006B38  B4D8               	btfsc	status,2,c
  6248   006B3A  EFA1  F035         	goto	u3271
  6249   006B3E  EFA3  F035         	goto	u3270
  6250   006B42                     u3271:
  6251   006B42  EFB8  F035         	goto	l3442
  6252   006B46                     u3270:
  6253   006B46  280E               	incf	___fladd@aexp^0,w,c
  6254   006B48  A4D8               	btfss	status,2,c
  6255   006B4A  EFA9  F035         	goto	u3281
  6256   006B4E  EFAB  F035         	goto	u3280
  6257   006B52                     u3281:
  6258   006B52  EFB3  F035         	goto	l3438
  6259   006B56                     u3280:
  6260   006B56  0E00               	movlw	0
  6261   006B58  6E05               	movwf	___fladd@a^0,c
  6262   006B5A  0E00               	movlw	0
  6263   006B5C  6E06               	movwf	(___fladd@a+1)^0,c
  6264   006B5E  0E00               	movlw	0
  6265   006B60  6E07               	movwf	(___fladd@a+2)^0,c
  6266   006B62  0E00               	movlw	0
  6267   006B64  6E08               	movwf	(___fladd@a+3)^0,c
  6268   006B66                     l3438:
  6269   006B66  8E07               	bsf	(___fladd@a+2)^0,7,c
  6270   006B68  0E00               	movlw	0
  6271   006B6A  6E08               	movwf	(___fladd@a+3)^0,c
  6272   006B6C  EFC0  F035         	goto	l3444
  6273   006B70                     l3442:
  6274   006B70  0E00               	movlw	0
  6275   006B72  6E05               	movwf	___fladd@a^0,c
  6276   006B74  0E00               	movlw	0
  6277   006B76  6E06               	movwf	(___fladd@a+1)^0,c
  6278   006B78  0E00               	movlw	0
  6279   006B7A  6E07               	movwf	(___fladd@a+2)^0,c
  6280   006B7C  0E00               	movlw	0
  6281   006B7E  6E08               	movwf	(___fladd@a+3)^0,c
  6282   006B80                     l3444:
  6283   006B80  500F               	movf	___fladd@bexp^0,w,c
  6284   006B82  5C0E               	subwf	___fladd@aexp^0,w,c
  6285   006B84  B0D8               	btfsc	status,0,c
  6286   006B86  EFC7  F035         	goto	u3291
  6287   006B8A  EFC9  F035         	goto	u3290
  6288   006B8E                     u3291:
  6289   006B8E  EFF0  F035         	goto	l3480
  6290   006B92                     u3290:
  6291   006B92  AC0D               	btfss	___fladd@signs^0,6,c
  6292   006B94  EFCE  F035         	goto	u3301
  6293   006B98  EFD0  F035         	goto	u3300
  6294   006B9C                     u3301:
  6295   006B9C  EFD2  F035         	goto	l3450
  6296   006BA0                     u3300:
  6297   006BA0  0E80               	movlw	128
  6298   006BA2  1A0D               	xorwf	___fladd@signs^0,f,c
  6299   006BA4                     l3450:
  6300   006BA4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6301   006BA8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6302   006BAC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6303   006BB0  C001  F010         	movff	___fladd@b,___fladd@grs
  6304   006BB4  C005  F001         	movff	___fladd@a,___fladd@b
  6305   006BB8  C010  F005         	movff	___fladd@grs,___fladd@a
  6306   006BBC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6307   006BC0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6308   006BC4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6309   006BC8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6310   006BCC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6311   006BD0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6312   006BD4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6313   006BD8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6314   006BDC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6315   006BE0                     l3480:
  6316   006BE0  0E00               	movlw	0
  6317   006BE2  6E10               	movwf	___fladd@grs^0,c
  6318   006BE4  500F               	movf	___fladd@bexp^0,w,c
  6319   006BE6  C00E  F009         	movff	___fladd@aexp,??___fladd
  6320   006BEA  6A0A               	clrf	(??___fladd+1)^0,c
  6321   006BEC  5E09               	subwf	??___fladd^0,f,c
  6322   006BEE  0E00               	movlw	0
  6323   006BF0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6324   006BF2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6325   006BF4  EF05  F036         	goto	u3311
  6326   006BF8  500A               	movf	(??___fladd+1)^0,w,c
  6327   006BFA  E109               	bnz	u3310
  6328   006BFC  0E1A               	movlw	26
  6329   006BFE  5C09               	subwf	??___fladd^0,w,c
  6330   006C00  A0D8               	btfss	status,0,c
  6331   006C02  EF05  F036         	goto	u3311
  6332   006C06  EF07  F036         	goto	u3310
  6333   006C0A                     u3311:
  6334   006C0A  EF3E  F036         	goto	l1021
  6335   006C0E                     u3310:
  6336   006C0E  5001               	movf	___fladd@b^0,w,c
  6337   006C10  1002               	iorwf	(___fladd@b+1)^0,w,c
  6338   006C12  1003               	iorwf	(___fladd@b+2)^0,w,c
  6339   006C14  1004               	iorwf	(___fladd@b+3)^0,w,c
  6340   006C16  A4D8               	btfss	status,2,c
  6341   006C18  EF10  F036         	goto	u3321
  6342   006C1C  EF13  F036         	goto	u3320
  6343   006C20                     u3321:
  6344   006C20  0E01               	movlw	1
  6345   006C22  EF14  F036         	goto	u3330
  6346   006C26                     u3320:
  6347   006C26  0E00               	movlw	0
  6348   006C28                     u3330:
  6349   006C28  6E10               	movwf	___fladd@grs^0,c
  6350   006C2A  0E00               	movlw	0
  6351   006C2C  6E01               	movwf	___fladd@b^0,c
  6352   006C2E  0E00               	movlw	0
  6353   006C30  6E02               	movwf	(___fladd@b+1)^0,c
  6354   006C32  0E00               	movlw	0
  6355   006C34  6E03               	movwf	(___fladd@b+2)^0,c
  6356   006C36  0E00               	movlw	0
  6357   006C38  6E04               	movwf	(___fladd@b+3)^0,c
  6358   006C3A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6359   006C3E  EF47  F036         	goto	l1020
  6360   006C42                     l1022:
  6361   006C42  A010               	btfss	___fladd@grs^0,0,c
  6362   006C44  EF26  F036         	goto	u3341
  6363   006C48  EF28  F036         	goto	u3340
  6364   006C4C                     u3341:
  6365   006C4C  EF2E  F036         	goto	l3492
  6366   006C50                     u3340:
  6367   006C50  90D8               	bcf	status,0,c
  6368   006C52  3010               	rrcf	___fladd@grs^0,w,c
  6369   006C54  0901               	iorlw	1
  6370   006C56  6E10               	movwf	___fladd@grs^0,c
  6371   006C58  EF30  F036         	goto	l3494
  6372   006C5C                     l3492:
  6373   006C5C  90D8               	bcf	status,0,c
  6374   006C5E  3210               	rrcf	___fladd@grs^0,f,c
  6375   006C60                     l3494:
  6376   006C60  A001               	btfss	___fladd@b^0,0,c
  6377   006C62  EF35  F036         	goto	u3351
  6378   006C66  EF37  F036         	goto	u3350
  6379   006C6A                     u3351:
  6380   006C6A  EF38  F036         	goto	l3498
  6381   006C6E                     u3350:
  6382   006C6E  8E10               	bsf	___fladd@grs^0,7,c
  6383   006C70                     l3498:
  6384   006C70  3404               	rlcf	(___fladd@b+3)^0,w,c
  6385   006C72  3204               	rrcf	(___fladd@b+3)^0,f,c
  6386   006C74  3203               	rrcf	(___fladd@b+2)^0,f,c
  6387   006C76  3202               	rrcf	(___fladd@b+1)^0,f,c
  6388   006C78  3201               	rrcf	___fladd@b^0,f,c
  6389   006C7A  2A0F               	incf	___fladd@bexp^0,f,c
  6390   006C7C                     l1021:
  6391   006C7C  500E               	movf	___fladd@aexp^0,w,c
  6392   006C7E  5C0F               	subwf	___fladd@bexp^0,w,c
  6393   006C80  A0D8               	btfss	status,0,c
  6394   006C82  EF45  F036         	goto	u3361
  6395   006C86  EF47  F036         	goto	u3360
  6396   006C8A                     u3361:
  6397   006C8A  EF21  F036         	goto	l1022
  6398   006C8E                     u3360:
  6399   006C8E                     l1020:
  6400   006C8E  BC0D               	btfsc	___fladd@signs^0,6,c
  6401   006C90  EF4C  F036         	goto	u3371
  6402   006C94  EF4E  F036         	goto	u3370
  6403   006C98                     u3371:
  6404   006C98  EF8E  F036         	goto	l3526
  6405   006C9C                     u3370:
  6406   006C9C  500F               	movf	___fladd@bexp^0,w,c
  6407   006C9E  A4D8               	btfss	status,2,c
  6408   006CA0  EF54  F036         	goto	u3381
  6409   006CA4  EF56  F036         	goto	u3380
  6410   006CA8                     u3381:
  6411   006CA8  EF60  F036         	goto	l3508
  6412   006CAC                     u3380:
  6413   006CAC  0E00               	movlw	0
  6414   006CAE  6E01               	movwf	?___fladd^0,c
  6415   006CB0  0E00               	movlw	0
  6416   006CB2  6E02               	movwf	(?___fladd+1)^0,c
  6417   006CB4  0E00               	movlw	0
  6418   006CB6  6E03               	movwf	(?___fladd+2)^0,c
  6419   006CB8  0E00               	movlw	0
  6420   006CBA  6E04               	movwf	(?___fladd+3)^0,c
  6421   006CBC  EFAF  F037         	goto	l1029
  6422   006CC0                     l3508:
  6423   006CC0  5005               	movf	___fladd@a^0,w,c
  6424   006CC2  2601               	addwf	___fladd@b^0,f,c
  6425   006CC4  5006               	movf	(___fladd@a+1)^0,w,c
  6426   006CC6  2202               	addwfc	(___fladd@b+1)^0,f,c
  6427   006CC8  5007               	movf	(___fladd@a+2)^0,w,c
  6428   006CCA  2203               	addwfc	(___fladd@b+2)^0,f,c
  6429   006CCC  5008               	movf	(___fladd@a+3)^0,w,c
  6430   006CCE  2204               	addwfc	(___fladd@b+3)^0,f,c
  6431   006CD0  A004               	btfss	(___fladd@b+3)^0,0,c
  6432   006CD2  EF6D  F036         	goto	u3391
  6433   006CD6  EF6F  F036         	goto	u3390
  6434   006CDA                     u3391:
  6435   006CDA  EF1B  F037         	goto	l3562
  6436   006CDE                     u3390:
  6437   006CDE  A010               	btfss	___fladd@grs^0,0,c
  6438   006CE0  EF74  F036         	goto	u3401
  6439   006CE4  EF76  F036         	goto	u3400
  6440   006CE8                     u3401:
  6441   006CE8  EF7C  F036         	goto	l3516
  6442   006CEC                     u3400:
  6443   006CEC  90D8               	bcf	status,0,c
  6444   006CEE  3010               	rrcf	___fladd@grs^0,w,c
  6445   006CF0  0901               	iorlw	1
  6446   006CF2  6E10               	movwf	___fladd@grs^0,c
  6447   006CF4  EF7E  F036         	goto	l3518
  6448   006CF8                     l3516:
  6449   006CF8  90D8               	bcf	status,0,c
  6450   006CFA  3210               	rrcf	___fladd@grs^0,f,c
  6451   006CFC                     l3518:
  6452   006CFC  A001               	btfss	___fladd@b^0,0,c
  6453   006CFE  EF83  F036         	goto	u3411
  6454   006D02  EF85  F036         	goto	u3410
  6455   006D06                     u3411:
  6456   006D06  EF86  F036         	goto	l3522
  6457   006D0A                     u3410:
  6458   006D0A  8E10               	bsf	___fladd@grs^0,7,c
  6459   006D0C                     l3522:
  6460   006D0C  3404               	rlcf	(___fladd@b+3)^0,w,c
  6461   006D0E  3204               	rrcf	(___fladd@b+3)^0,f,c
  6462   006D10  3203               	rrcf	(___fladd@b+2)^0,f,c
  6463   006D12  3202               	rrcf	(___fladd@b+1)^0,f,c
  6464   006D14  3201               	rrcf	___fladd@b^0,f,c
  6465   006D16  2A0F               	incf	___fladd@bexp^0,f,c
  6466   006D18  EF1B  F037         	goto	l3562
  6467   006D1C                     l3526:
  6468   006D1C  5005               	movf	___fladd@a^0,w,c
  6469   006D1E  5C01               	subwf	___fladd@b^0,w,c
  6470   006D20  5006               	movf	(___fladd@a+1)^0,w,c
  6471   006D22  5802               	subwfb	(___fladd@b+1)^0,w,c
  6472   006D24  5007               	movf	(___fladd@a+2)^0,w,c
  6473   006D26  5803               	subwfb	(___fladd@b+2)^0,w,c
  6474   006D28  5004               	movf	(___fladd@b+3)^0,w,c
  6475   006D2A  0A80               	xorlw	128
  6476   006D2C  6E09               	movwf	??___fladd^0,c
  6477   006D2E  5008               	movf	(___fladd@a+3)^0,w,c
  6478   006D30  0A80               	xorlw	128
  6479   006D32  5809               	subwfb	??___fladd^0,w,c
  6480   006D34  B0D8               	btfsc	status,0,c
  6481   006D36  EF9F  F036         	goto	u3421
  6482   006D3A  EFA1  F036         	goto	u3420
  6483   006D3E                     u3421:
  6484   006D3E  EFCC  F036         	goto	l3536
  6485   006D42                     u3420:
  6486   006D42  5001               	movf	___fladd@b^0,w,c
  6487   006D44  5C05               	subwf	___fladd@a^0,w,c
  6488   006D46  6E09               	movwf	??___fladd^0,c
  6489   006D48  5002               	movf	(___fladd@b+1)^0,w,c
  6490   006D4A  5806               	subwfb	(___fladd@a+1)^0,w,c
  6491   006D4C  6E0A               	movwf	(??___fladd+1)^0,c
  6492   006D4E  5003               	movf	(___fladd@b+2)^0,w,c
  6493   006D50  5807               	subwfb	(___fladd@a+2)^0,w,c
  6494   006D52  6E0B               	movwf	(??___fladd+2)^0,c
  6495   006D54  5004               	movf	(___fladd@b+3)^0,w,c
  6496   006D56  5808               	subwfb	(___fladd@a+3)^0,w,c
  6497   006D58  6E0C               	movwf	(??___fladd+3)^0,c
  6498   006D5A  0EFF               	movlw	255
  6499   006D5C  2409               	addwf	??___fladd^0,w,c
  6500   006D5E  6E01               	movwf	___fladd@b^0,c
  6501   006D60  0EFF               	movlw	255
  6502   006D62  200A               	addwfc	(??___fladd+1)^0,w,c
  6503   006D64  6E02               	movwf	(___fladd@b+1)^0,c
  6504   006D66  0EFF               	movlw	255
  6505   006D68  200B               	addwfc	(??___fladd+2)^0,w,c
  6506   006D6A  6E03               	movwf	(___fladd@b+2)^0,c
  6507   006D6C  0EFF               	movlw	255
  6508   006D6E  200C               	addwfc	(??___fladd+3)^0,w,c
  6509   006D70  6E04               	movwf	(___fladd@b+3)^0,c
  6510   006D72  0E80               	movlw	128
  6511   006D74  1A0D               	xorwf	___fladd@signs^0,f,c
  6512   006D76  6C10               	negf	___fladd@grs^0,c
  6513   006D78  5010               	movf	___fladd@grs^0,w,c
  6514   006D7A  A4D8               	btfss	status,2,c
  6515   006D7C  EFC2  F036         	goto	u3431
  6516   006D80  EFC4  F036         	goto	u3430
  6517   006D84                     u3431:
  6518   006D84  EFD4  F036         	goto	l1037
  6519   006D88                     u3430:
  6520   006D88  0E01               	movlw	1
  6521   006D8A  2601               	addwf	___fladd@b^0,f,c
  6522   006D8C  0E00               	movlw	0
  6523   006D8E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6524   006D90  2203               	addwfc	(___fladd@b+2)^0,f,c
  6525   006D92  2204               	addwfc	(___fladd@b+3)^0,f,c
  6526   006D94  EFD4  F036         	goto	l1037
  6527   006D98                     l3536:
  6528   006D98  5005               	movf	___fladd@a^0,w,c
  6529   006D9A  5E01               	subwf	___fladd@b^0,f,c
  6530   006D9C  5006               	movf	(___fladd@a+1)^0,w,c
  6531   006D9E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6532   006DA0  5007               	movf	(___fladd@a+2)^0,w,c
  6533   006DA2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6534   006DA4  5008               	movf	(___fladd@a+3)^0,w,c
  6535   006DA6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6536   006DA8                     l1037:
  6537   006DA8  5001               	movf	___fladd@b^0,w,c
  6538   006DAA  1002               	iorwf	(___fladd@b+1)^0,w,c
  6539   006DAC  1003               	iorwf	(___fladd@b+2)^0,w,c
  6540   006DAE  1004               	iorwf	(___fladd@b+3)^0,w,c
  6541   006DB0  A4D8               	btfss	status,2,c
  6542   006DB2  EFDD  F036         	goto	u3441
  6543   006DB6  EFDF  F036         	goto	u3440
  6544   006DBA                     u3441:
  6545   006DBA  EF14  F037         	goto	l3560
  6546   006DBE                     u3440:
  6547   006DBE  5010               	movf	___fladd@grs^0,w,c
  6548   006DC0  A4D8               	btfss	status,2,c
  6549   006DC2  EFE5  F036         	goto	u3451
  6550   006DC6  EFE7  F036         	goto	u3450
  6551   006DCA                     u3451:
  6552   006DCA  EF14  F037         	goto	l3560
  6553   006DCE                     u3450:
  6554   006DCE  0E00               	movlw	0
  6555   006DD0  6E01               	movwf	?___fladd^0,c
  6556   006DD2  0E00               	movlw	0
  6557   006DD4  6E02               	movwf	(?___fladd+1)^0,c
  6558   006DD6  0E00               	movlw	0
  6559   006DD8  6E03               	movwf	(?___fladd+2)^0,c
  6560   006DDA  0E00               	movlw	0
  6561   006DDC  6E04               	movwf	(?___fladd+3)^0,c
  6562   006DDE  EFAF  F037         	goto	l1029
  6563   006DE2                     l3544:
  6564   006DE2  90D8               	bcf	status,0,c
  6565   006DE4  3601               	rlcf	___fladd@b^0,f,c
  6566   006DE6  3602               	rlcf	(___fladd@b+1)^0,f,c
  6567   006DE8  3603               	rlcf	(___fladd@b+2)^0,f,c
  6568   006DEA  3604               	rlcf	(___fladd@b+3)^0,f,c
  6569   006DEC  AE10               	btfss	___fladd@grs^0,7,c
  6570   006DEE  EFFB  F036         	goto	u3461
  6571   006DF2  EFFD  F036         	goto	u3460
  6572   006DF6                     u3461:
  6573   006DF6  EFFE  F036         	goto	l3550
  6574   006DFA                     u3460:
  6575   006DFA  8001               	bsf	___fladd@b^0,0,c
  6576   006DFC                     l3550:
  6577   006DFC  A010               	btfss	___fladd@grs^0,0,c
  6578   006DFE  EF03  F037         	goto	u3471
  6579   006E02  EF05  F037         	goto	u3470
  6580   006E06                     u3471:
  6581   006E06  EF09  F037         	goto	l3554
  6582   006E0A                     u3470:
  6583   006E0A  80D8               	bsf	status,0,c
  6584   006E0C  3610               	rlcf	___fladd@grs^0,f,c
  6585   006E0E  EF0B  F037         	goto	l3556
  6586   006E12                     l3554:
  6587   006E12  90D8               	bcf	status,0,c
  6588   006E14  3610               	rlcf	___fladd@grs^0,f,c
  6589   006E16                     l3556:
  6590   006E16  500F               	movf	___fladd@bexp^0,w,c
  6591   006E18  B4D8               	btfsc	status,2,c
  6592   006E1A  EF11  F037         	goto	u3481
  6593   006E1E  EF13  F037         	goto	u3480
  6594   006E22                     u3481:
  6595   006E22  EF14  F037         	goto	l3560
  6596   006E26                     u3480:
  6597   006E26  060F               	decf	___fladd@bexp^0,f,c
  6598   006E28                     l3560:
  6599   006E28  AE03               	btfss	(___fladd@b+2)^0,7,c
  6600   006E2A  EF19  F037         	goto	u3491
  6601   006E2E  EF1B  F037         	goto	u3490
  6602   006E32                     u3491:
  6603   006E32  EFF1  F036         	goto	l3544
  6604   006E36                     u3490:
  6605   006E36                     l3562:
  6606   006E36  0E00               	movlw	0
  6607   006E38  6E0E               	movwf	___fladd@aexp^0,c
  6608   006E3A  AE10               	btfss	___fladd@grs^0,7,c
  6609   006E3C  EF22  F037         	goto	u3501
  6610   006E40  EF24  F037         	goto	u3500
  6611   006E44                     u3501:
  6612   006E44  EF3C  F037         	goto	l1046
  6613   006E48                     u3500:
  6614   006E48  C010  F009         	movff	___fladd@grs,??___fladd
  6615   006E4C  0E7F               	movlw	127
  6616   006E4E  1609               	andwf	??___fladd^0,f,c
  6617   006E50  B4D8               	btfsc	status,2,c
  6618   006E52  EF2D  F037         	goto	u3511
  6619   006E56  EF2F  F037         	goto	u3510
  6620   006E5A                     u3511:
  6621   006E5A  EF33  F037         	goto	l1047
  6622   006E5E                     u3510:
  6623   006E5E                     l3568:
  6624   006E5E  0E01               	movlw	1
  6625   006E60  6E0E               	movwf	___fladd@aexp^0,c
  6626   006E62  EF3C  F037         	goto	l1046
  6627   006E66                     l1047:
  6628   006E66  A001               	btfss	___fladd@b^0,0,c
  6629   006E68  EF38  F037         	goto	u3521
  6630   006E6C  EF3A  F037         	goto	u3520
  6631   006E70                     u3521:
  6632   006E70  EF3C  F037         	goto	l1046
  6633   006E74                     u3520:
  6634   006E74  EF2F  F037         	goto	l3568
  6635   006E78                     l1046:
  6636   006E78  500E               	movf	___fladd@aexp^0,w,c
  6637   006E7A  B4D8               	btfsc	status,2,c
  6638   006E7C  EF42  F037         	goto	u3531
  6639   006E80  EF44  F037         	goto	u3530
  6640   006E84                     u3531:
  6641   006E84  EF6F  F037         	goto	l3580
  6642   006E88                     u3530:
  6643   006E88  0E01               	movlw	1
  6644   006E8A  2601               	addwf	___fladd@b^0,f,c
  6645   006E8C  0E00               	movlw	0
  6646   006E8E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6647   006E90  2203               	addwfc	(___fladd@b+2)^0,f,c
  6648   006E92  2204               	addwfc	(___fladd@b+3)^0,f,c
  6649   006E94  A004               	btfss	(___fladd@b+3)^0,0,c
  6650   006E96  EF4F  F037         	goto	u3541
  6651   006E9A  EF51  F037         	goto	u3540
  6652   006E9E                     u3541:
  6653   006E9E  EF6F  F037         	goto	l3580
  6654   006EA2                     u3540:
  6655   006EA2  C001  F009         	movff	___fladd@b,??___fladd
  6656   006EA6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6657   006EAA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6658   006EAE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6659   006EB2  340C               	rlcf	(??___fladd+3)^0,w,c
  6660   006EB4  320C               	rrcf	(??___fladd+3)^0,f,c
  6661   006EB6  320B               	rrcf	(??___fladd+2)^0,f,c
  6662   006EB8  320A               	rrcf	(??___fladd+1)^0,f,c
  6663   006EBA  3209               	rrcf	??___fladd^0,f,c
  6664   006EBC  C009  F001         	movff	??___fladd,___fladd@b
  6665   006EC0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6666   006EC4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6667   006EC8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6668   006ECC  280F               	incf	___fladd@bexp^0,w,c
  6669   006ECE  B4D8               	btfsc	status,2,c
  6670   006ED0  EF6C  F037         	goto	u3551
  6671   006ED4  EF6E  F037         	goto	u3550
  6672   006ED8                     u3551:
  6673   006ED8  EF6F  F037         	goto	l3580
  6674   006EDC                     u3550:
  6675   006EDC  2A0F               	incf	___fladd@bexp^0,f,c
  6676   006EDE                     l3580:
  6677   006EDE  280F               	incf	___fladd@bexp^0,w,c
  6678   006EE0  B4D8               	btfsc	status,2,c
  6679   006EE2  EF75  F037         	goto	u3561
  6680   006EE6  EF77  F037         	goto	u3560
  6681   006EEA                     u3561:
  6682   006EEA  EF7F  F037         	goto	l3584
  6683   006EEE                     u3560:
  6684   006EEE  500F               	movf	___fladd@bexp^0,w,c
  6685   006EF0  A4D8               	btfss	status,2,c
  6686   006EF2  EF7D  F037         	goto	u3571
  6687   006EF6  EF7F  F037         	goto	u3570
  6688   006EFA                     u3571:
  6689   006EFA  EF91  F037         	goto	l3588
  6690   006EFE                     u3570:
  6691   006EFE                     l3584:
  6692   006EFE  0E00               	movlw	0
  6693   006F00  6E01               	movwf	___fladd@b^0,c
  6694   006F02  0E00               	movlw	0
  6695   006F04  6E02               	movwf	(___fladd@b+1)^0,c
  6696   006F06  0E00               	movlw	0
  6697   006F08  6E03               	movwf	(___fladd@b+2)^0,c
  6698   006F0A  0E00               	movlw	0
  6699   006F0C  6E04               	movwf	(___fladd@b+3)^0,c
  6700   006F0E  500F               	movf	___fladd@bexp^0,w,c
  6701   006F10  A4D8               	btfss	status,2,c
  6702   006F12  EF8D  F037         	goto	u3581
  6703   006F16  EF8F  F037         	goto	u3580
  6704   006F1A                     u3581:
  6705   006F1A  EF91  F037         	goto	l3588
  6706   006F1E                     u3580:
  6707   006F1E  0E00               	movlw	0
  6708   006F20  6E0D               	movwf	___fladd@signs^0,c
  6709   006F22                     l3588:
  6710   006F22  A00F               	btfss	___fladd@bexp^0,0,c
  6711   006F24  EF96  F037         	goto	u3591
  6712   006F28  EF98  F037         	goto	u3590
  6713   006F2C                     u3591:
  6714   006F2C  EF9B  F037         	goto	l3592
  6715   006F30                     u3590:
  6716   006F30  8E03               	bsf	(___fladd@b+2)^0,7,c
  6717   006F32  EF9C  F037         	goto	l3594
  6718   006F36                     l3592:
  6719   006F36  9E03               	bcf	(___fladd@b+2)^0,7,c
  6720   006F38                     l3594:
  6721   006F38  90D8               	bcf	status,0,c
  6722   006F3A  300F               	rrcf	___fladd@bexp^0,w,c
  6723   006F3C  6E04               	movwf	(___fladd@b+3)^0,c
  6724   006F3E  AE0D               	btfss	___fladd@signs^0,7,c
  6725   006F40  EFA4  F037         	goto	u3601
  6726   006F44  EFA6  F037         	goto	u3600
  6727   006F48                     u3601:
  6728   006F48  EFA7  F037         	goto	l3600
  6729   006F4C                     u3600:
  6730   006F4C  8E04               	bsf	(___fladd@b+3)^0,7,c
  6731   006F4E                     l3600:
  6732   006F4E  C001  F001         	movff	___fladd@b,?___fladd
  6733   006F52  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6734   006F56  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6735   006F5A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6736   006F5E                     l1029:
  6737   006F5E  0012               	return		;funcret
  6738   006F60                     __end_of___fladd:
  6739                           	callstack 0
  6740                           
  6741 ;; *************** function ___flneg *****************
  6742 ;; Defined at:
  6743 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;  f1              4    0[COMRAM] unsigned char 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  4    0[COMRAM] unsigned char 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6757 ;;      Params:         4       0       0       0       0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6760 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6761 ;;Total ram usage:        4 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_efgtoa
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text19
  6771   0048CA                     __ptext19:
  6772                           	callstack 0
  6773   0048CA                     ___flneg:
  6774                           	callstack 26
  6775   0048CA  5001               	movf	___flneg@f1^0,w,c
  6776   0048CC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6777   0048CE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6778   0048D0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6779   0048D2  B4D8               	btfsc	status,2,c
  6780   0048D4  EF6E  F024         	goto	u4121
  6781   0048D8  EF70  F024         	goto	u4120
  6782   0048DC                     u4121:
  6783   0048DC  EF78  F024         	goto	l3940
  6784   0048E0                     u4120:
  6785   0048E0  0E00               	movlw	0
  6786   0048E2  1A01               	xorwf	___flneg@f1^0,f,c
  6787   0048E4  0E00               	movlw	0
  6788   0048E6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6789   0048E8  0E00               	movlw	0
  6790   0048EA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6791   0048EC  0E80               	movlw	128
  6792   0048EE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6793   0048F0                     l3940:
  6794   0048F0  C001  F001         	movff	___flneg@f1,?___flneg
  6795   0048F4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6796   0048F8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6797   0048FC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6798   004900  0012               	return		;funcret
  6799   004902                     __end_of___flneg:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function ___flmul *****************
  6803 ;; Defined at:
  6804 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  b               4    0[COMRAM] unsigned char 
  6807 ;;  a               4    4[COMRAM] unsigned char 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  prod            4   19[COMRAM] struct .
  6810 ;;  grs             4   13[COMRAM] unsigned long 
  6811 ;;  temp            2   23[COMRAM] struct .
  6812 ;;  bexp            1   18[COMRAM] unsigned char 
  6813 ;;  aexp            1   17[COMRAM] unsigned char 
  6814 ;;  sign            1   12[COMRAM] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  4    0[COMRAM] unsigned char 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, prodl, prodh
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6824 ;;      Params:         8       0       0       0       0       0       0       0       0
  6825 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6826 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6827 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6828 ;;Total ram usage:       25 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_efgtoa
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text20
  6838   006676                     __ptext20:
  6839                           	callstack 0
  6840   006676                     ___flmul:
  6841                           	callstack 26
  6842   006676  5004               	movf	(___flmul@b+3)^0,w,c
  6843   006678  0B80               	andlw	128
  6844   00667A  6E0D               	movwf	___flmul@sign^0,c
  6845   00667C  5004               	movf	(___flmul@b+3)^0,w,c
  6846   00667E  2404               	addwf	(___flmul@b+3)^0,w,c
  6847   006680  6E13               	movwf	___flmul@bexp^0,c
  6848   006682  AE03               	btfss	(___flmul@b+2)^0,7,c
  6849   006684  EF46  F033         	goto	u3851
  6850   006688  EF48  F033         	goto	u3850
  6851   00668C                     u3851:
  6852   00668C  EF49  F033         	goto	l3768
  6853   006690                     u3850:
  6854   006690  8013               	bsf	___flmul@bexp^0,0,c
  6855   006692                     l3768:
  6856   006692  5013               	movf	___flmul@bexp^0,w,c
  6857   006694  B4D8               	btfsc	status,2,c
  6858   006696  EF4F  F033         	goto	u3861
  6859   00669A  EF51  F033         	goto	u3860
  6860   00669E                     u3861:
  6861   00669E  EF64  F033         	goto	l3776
  6862   0066A2                     u3860:
  6863   0066A2  2813               	incf	___flmul@bexp^0,w,c
  6864   0066A4  A4D8               	btfss	status,2,c
  6865   0066A6  EF57  F033         	goto	u3871
  6866   0066AA  EF59  F033         	goto	u3870
  6867   0066AE                     u3871:
  6868   0066AE  EF61  F033         	goto	l3774
  6869   0066B2                     u3870:
  6870   0066B2  0E00               	movlw	0
  6871   0066B4  6E01               	movwf	___flmul@b^0,c
  6872   0066B6  0E00               	movlw	0
  6873   0066B8  6E02               	movwf	(___flmul@b+1)^0,c
  6874   0066BA  0E00               	movlw	0
  6875   0066BC  6E03               	movwf	(___flmul@b+2)^0,c
  6876   0066BE  0E00               	movlw	0
  6877   0066C0  6E04               	movwf	(___flmul@b+3)^0,c
  6878   0066C2                     l3774:
  6879   0066C2  8E03               	bsf	(___flmul@b+2)^0,7,c
  6880   0066C4  EF6C  F033         	goto	l3778
  6881   0066C8                     l3776:
  6882   0066C8  0E00               	movlw	0
  6883   0066CA  6E01               	movwf	___flmul@b^0,c
  6884   0066CC  0E00               	movlw	0
  6885   0066CE  6E02               	movwf	(___flmul@b+1)^0,c
  6886   0066D0  0E00               	movlw	0
  6887   0066D2  6E03               	movwf	(___flmul@b+2)^0,c
  6888   0066D4  0E00               	movlw	0
  6889   0066D6  6E04               	movwf	(___flmul@b+3)^0,c
  6890   0066D8                     l3778:
  6891   0066D8  5008               	movf	(___flmul@a+3)^0,w,c
  6892   0066DA  0B80               	andlw	128
  6893   0066DC  1A0D               	xorwf	___flmul@sign^0,f,c
  6894   0066DE  5008               	movf	(___flmul@a+3)^0,w,c
  6895   0066E0  2408               	addwf	(___flmul@a+3)^0,w,c
  6896   0066E2  6E12               	movwf	___flmul@aexp^0,c
  6897   0066E4  AE07               	btfss	(___flmul@a+2)^0,7,c
  6898   0066E6  EF77  F033         	goto	u3881
  6899   0066EA  EF79  F033         	goto	u3880
  6900   0066EE                     u3881:
  6901   0066EE  EF7A  F033         	goto	l3786
  6902   0066F2                     u3880:
  6903   0066F2  8012               	bsf	___flmul@aexp^0,0,c
  6904   0066F4                     l3786:
  6905   0066F4  5012               	movf	___flmul@aexp^0,w,c
  6906   0066F6  B4D8               	btfsc	status,2,c
  6907   0066F8  EF80  F033         	goto	u3891
  6908   0066FC  EF82  F033         	goto	u3890
  6909   006700                     u3891:
  6910   006700  EF95  F033         	goto	l3794
  6911   006704                     u3890:
  6912   006704  2812               	incf	___flmul@aexp^0,w,c
  6913   006706  A4D8               	btfss	status,2,c
  6914   006708  EF88  F033         	goto	u3901
  6915   00670C  EF8A  F033         	goto	u3900
  6916   006710                     u3901:
  6917   006710  EF92  F033         	goto	l3792
  6918   006714                     u3900:
  6919   006714  0E00               	movlw	0
  6920   006716  6E05               	movwf	___flmul@a^0,c
  6921   006718  0E00               	movlw	0
  6922   00671A  6E06               	movwf	(___flmul@a+1)^0,c
  6923   00671C  0E00               	movlw	0
  6924   00671E  6E07               	movwf	(___flmul@a+2)^0,c
  6925   006720  0E00               	movlw	0
  6926   006722  6E08               	movwf	(___flmul@a+3)^0,c
  6927   006724                     l3792:
  6928   006724  8E07               	bsf	(___flmul@a+2)^0,7,c
  6929   006726  EF9D  F033         	goto	l1106
  6930   00672A                     l3794:
  6931   00672A  0E00               	movlw	0
  6932   00672C  6E05               	movwf	___flmul@a^0,c
  6933   00672E  0E00               	movlw	0
  6934   006730  6E06               	movwf	(___flmul@a+1)^0,c
  6935   006732  0E00               	movlw	0
  6936   006734  6E07               	movwf	(___flmul@a+2)^0,c
  6937   006736  0E00               	movlw	0
  6938   006738  6E08               	movwf	(___flmul@a+3)^0,c
  6939   00673A                     l1106:
  6940   00673A  5012               	movf	___flmul@aexp^0,w,c
  6941   00673C  B4D8               	btfsc	status,2,c
  6942   00673E  EFA3  F033         	goto	u3911
  6943   006742  EFA5  F033         	goto	u3910
  6944   006746                     u3911:
  6945   006746  EFAD  F033         	goto	l3798
  6946   00674A                     u3910:
  6947   00674A  5013               	movf	___flmul@bexp^0,w,c
  6948   00674C  A4D8               	btfss	status,2,c
  6949   00674E  EFAB  F033         	goto	u3921
  6950   006752  EFAD  F033         	goto	u3920
  6951   006756                     u3921:
  6952   006756  EFB7  F033         	goto	l3802
  6953   00675A                     u3920:
  6954   00675A                     l3798:
  6955   00675A  0E00               	movlw	0
  6956   00675C  6E01               	movwf	?___flmul^0,c
  6957   00675E  0E00               	movlw	0
  6958   006760  6E02               	movwf	(?___flmul+1)^0,c
  6959   006762  0E00               	movlw	0
  6960   006764  6E03               	movwf	(?___flmul+2)^0,c
  6961   006766  0E00               	movlw	0
  6962   006768  6E04               	movwf	(?___flmul+3)^0,c
  6963   00676A  EF4F  F035         	goto	l1110
  6964   00676E                     l3802:
  6965   00676E  5007               	movf	(___flmul@a+2)^0,w,c
  6966   006770  0201               	mulwf	___flmul@b^0,c
  6967   006772  CFF3 F018          	movff	prodl,___flmul@temp
  6968   006776  CFF4 F019          	movff	prodh,___flmul@temp+1
  6969   00677A  5018               	movf	___flmul@temp^0,w,c
  6970   00677C  6E0E               	movwf	___flmul@grs^0,c
  6971   00677E  6A0F               	clrf	(___flmul@grs+1)^0,c
  6972   006780  6A10               	clrf	(___flmul@grs+2)^0,c
  6973   006782  6A11               	clrf	(___flmul@grs+3)^0,c
  6974   006784  5019               	movf	(___flmul@temp+1)^0,w,c
  6975   006786  6E14               	movwf	___flmul@prod^0,c
  6976   006788  6A15               	clrf	(___flmul@prod+1)^0,c
  6977   00678A  6A16               	clrf	(___flmul@prod+2)^0,c
  6978   00678C  6A17               	clrf	(___flmul@prod+3)^0,c
  6979   00678E  5006               	movf	(___flmul@a+1)^0,w,c
  6980   006790  0202               	mulwf	(___flmul@b+1)^0,c
  6981   006792  CFF3 F018          	movff	prodl,___flmul@temp
  6982   006796  CFF4 F019          	movff	prodh,___flmul@temp+1
  6983   00679A  5018               	movf	___flmul@temp^0,w,c
  6984   00679C  260E               	addwf	___flmul@grs^0,f,c
  6985   00679E  0E00               	movlw	0
  6986   0067A0  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6987   0067A2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6988   0067A4  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6989   0067A6  5019               	movf	(___flmul@temp+1)^0,w,c
  6990   0067A8  2614               	addwf	___flmul@prod^0,f,c
  6991   0067AA  0E00               	movlw	0
  6992   0067AC  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6993   0067AE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6994   0067B0  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6995   0067B2  5005               	movf	___flmul@a^0,w,c
  6996   0067B4  0203               	mulwf	(___flmul@b+2)^0,c
  6997   0067B6  CFF3 F018          	movff	prodl,___flmul@temp
  6998   0067BA  CFF4 F019          	movff	prodh,___flmul@temp+1
  6999   0067BE  5018               	movf	___flmul@temp^0,w,c
  7000   0067C0  260E               	addwf	___flmul@grs^0,f,c
  7001   0067C2  0E00               	movlw	0
  7002   0067C4  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7003   0067C6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7004   0067C8  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7005   0067CA  5019               	movf	(___flmul@temp+1)^0,w,c
  7006   0067CC  2614               	addwf	___flmul@prod^0,f,c
  7007   0067CE  0E00               	movlw	0
  7008   0067D0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7009   0067D2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7010   0067D4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7011   0067D6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7012   0067DA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7013   0067DE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7014   0067E2  6A0E               	clrf	___flmul@grs^0,c
  7015   0067E4  5005               	movf	___flmul@a^0,w,c
  7016   0067E6  0202               	mulwf	(___flmul@b+1)^0,c
  7017   0067E8  CFF3 F018          	movff	prodl,___flmul@temp
  7018   0067EC  CFF4 F019          	movff	prodh,___flmul@temp+1
  7019   0067F0  5018               	movf	___flmul@temp^0,w,c
  7020   0067F2  260E               	addwf	___flmul@grs^0,f,c
  7021   0067F4  5019               	movf	(___flmul@temp+1)^0,w,c
  7022   0067F6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7023   0067F8  0E00               	movlw	0
  7024   0067FA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7025   0067FC  0E00               	movlw	0
  7026   0067FE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7027   006800  5006               	movf	(___flmul@a+1)^0,w,c
  7028   006802  0201               	mulwf	___flmul@b^0,c
  7029   006804  CFF3 F018          	movff	prodl,___flmul@temp
  7030   006808  CFF4 F019          	movff	prodh,___flmul@temp+1
  7031   00680C  5018               	movf	___flmul@temp^0,w,c
  7032   00680E  260E               	addwf	___flmul@grs^0,f,c
  7033   006810  5019               	movf	(___flmul@temp+1)^0,w,c
  7034   006812  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7035   006814  0E00               	movlw	0
  7036   006816  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7037   006818  0E00               	movlw	0
  7038   00681A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7039   00681C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7040   006820  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7041   006824  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7042   006828  6A0E               	clrf	___flmul@grs^0,c
  7043   00682A  5005               	movf	___flmul@a^0,w,c
  7044   00682C  0201               	mulwf	___flmul@b^0,c
  7045   00682E  CFF3 F018          	movff	prodl,___flmul@temp
  7046   006832  CFF4 F019          	movff	prodh,___flmul@temp+1
  7047   006836  5018               	movf	___flmul@temp^0,w,c
  7048   006838  260E               	addwf	___flmul@grs^0,f,c
  7049   00683A  5019               	movf	(___flmul@temp+1)^0,w,c
  7050   00683C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7051   00683E  0E00               	movlw	0
  7052   006840  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7053   006842  0E00               	movlw	0
  7054   006844  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7055   006846  5007               	movf	(___flmul@a+2)^0,w,c
  7056   006848  0202               	mulwf	(___flmul@b+1)^0,c
  7057   00684A  CFF3 F018          	movff	prodl,___flmul@temp
  7058   00684E  CFF4 F019          	movff	prodh,___flmul@temp+1
  7059   006852  5018               	movf	___flmul@temp^0,w,c
  7060   006854  2614               	addwf	___flmul@prod^0,f,c
  7061   006856  5019               	movf	(___flmul@temp+1)^0,w,c
  7062   006858  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7063   00685A  0E00               	movlw	0
  7064   00685C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7065   00685E  0E00               	movlw	0
  7066   006860  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7067   006862  5006               	movf	(___flmul@a+1)^0,w,c
  7068   006864  0203               	mulwf	(___flmul@b+2)^0,c
  7069   006866  CFF3 F018          	movff	prodl,___flmul@temp
  7070   00686A  CFF4 F019          	movff	prodh,___flmul@temp+1
  7071   00686E  5018               	movf	___flmul@temp^0,w,c
  7072   006870  2614               	addwf	___flmul@prod^0,f,c
  7073   006872  5019               	movf	(___flmul@temp+1)^0,w,c
  7074   006874  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7075   006876  0E00               	movlw	0
  7076   006878  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7077   00687A  0E00               	movlw	0
  7078   00687C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7079   00687E  5007               	movf	(___flmul@a+2)^0,w,c
  7080   006880  0203               	mulwf	(___flmul@b+2)^0,c
  7081   006882  CFF3 F018          	movff	prodl,___flmul@temp
  7082   006886  CFF4 F019          	movff	prodh,___flmul@temp+1
  7083   00688A  5018               	movf	___flmul@temp^0,w,c
  7084   00688C  6E09               	movwf	??___flmul^0,c
  7085   00688E  5019               	movf	(___flmul@temp+1)^0,w,c
  7086   006890  6E0A               	movwf	(??___flmul+1)^0,c
  7087   006892  6A0B               	clrf	(??___flmul+2)^0,c
  7088   006894  6A0C               	clrf	(??___flmul+3)^0,c
  7089   006896  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7090   00689A  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7091   00689E  C009  F00A         	movff	??___flmul,??___flmul+1
  7092   0068A2  6A09               	clrf	??___flmul^0,c
  7093   0068A4  5009               	movf	??___flmul^0,w,c
  7094   0068A6  2614               	addwf	___flmul@prod^0,f,c
  7095   0068A8  500A               	movf	(??___flmul+1)^0,w,c
  7096   0068AA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7097   0068AC  500B               	movf	(??___flmul+2)^0,w,c
  7098   0068AE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7099   0068B0  500C               	movf	(??___flmul+3)^0,w,c
  7100   0068B2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7101   0068B4  C00E  F009         	movff	___flmul@grs,??___flmul
  7102   0068B8  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7103   0068BC  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7104   0068C0  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7105   0068C4  0E19               	movlw	25
  7106   0068C6  EF6A  F034         	goto	u3930
  7107   0068CA                     u3935:
  7108   0068CA  90D8               	bcf	status,0,c
  7109   0068CC  320C               	rrcf	(??___flmul+3)^0,f,c
  7110   0068CE  320B               	rrcf	(??___flmul+2)^0,f,c
  7111   0068D0  320A               	rrcf	(??___flmul+1)^0,f,c
  7112   0068D2  3209               	rrcf	??___flmul^0,f,c
  7113   0068D4                     u3930:
  7114   0068D4  2EE8               	decfsz	wreg,f,c
  7115   0068D6  EF65  F034         	goto	u3935
  7116   0068DA  5009               	movf	??___flmul^0,w,c
  7117   0068DC  2614               	addwf	___flmul@prod^0,f,c
  7118   0068DE  500A               	movf	(??___flmul+1)^0,w,c
  7119   0068E0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7120   0068E2  500B               	movf	(??___flmul+2)^0,w,c
  7121   0068E4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7122   0068E6  500C               	movf	(??___flmul+3)^0,w,c
  7123   0068E8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7124   0068EA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7125   0068EE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7126   0068F2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7127   0068F6  6A0E               	clrf	___flmul@grs^0,c
  7128   0068F8  5012               	movf	___flmul@aexp^0,w,c
  7129   0068FA  C013  F009         	movff	___flmul@bexp,??___flmul
  7130   0068FE  6A0A               	clrf	(??___flmul+1)^0,c
  7131   006900  2609               	addwf	??___flmul^0,f,c
  7132   006902  0E00               	movlw	0
  7133   006904  220A               	addwfc	(??___flmul+1)^0,f,c
  7134   006906  0E82               	movlw	130
  7135   006908  2409               	addwf	??___flmul^0,w,c
  7136   00690A  6E18               	movwf	___flmul@temp^0,c
  7137   00690C  0EFF               	movlw	255
  7138   00690E  200A               	addwfc	(??___flmul+1)^0,w,c
  7139   006910  6E19               	movwf	(___flmul@temp+1)^0,c
  7140   006912  EFA0  F034         	goto	l3850
  7141   006916                     l3844:
  7142   006916  90D8               	bcf	status,0,c
  7143   006918  3614               	rlcf	___flmul@prod^0,f,c
  7144   00691A  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7145   00691C  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7146   00691E  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7147   006920  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7148   006922  EF95  F034         	goto	u3941
  7149   006926  EF97  F034         	goto	u3940
  7150   00692A                     u3941:
  7151   00692A  EF98  F034         	goto	l1113
  7152   00692E                     u3940:
  7153   00692E  8014               	bsf	___flmul@prod^0,0,c
  7154   006930                     l1113:
  7155   006930  90D8               	bcf	status,0,c
  7156   006932  360E               	rlcf	___flmul@grs^0,f,c
  7157   006934  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7158   006936  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7159   006938  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7160   00693A  0618               	decf	___flmul@temp^0,f,c
  7161   00693C  A0D8               	btfss	status,0,c
  7162   00693E  0619               	decf	(___flmul@temp+1)^0,f,c
  7163   006940                     l3850:
  7164   006940  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7165   006942  EFA5  F034         	goto	u3951
  7166   006946  EFA7  F034         	goto	u3950
  7167   00694A                     u3951:
  7168   00694A  EF8B  F034         	goto	l3844
  7169   00694E                     u3950:
  7170   00694E  0E00               	movlw	0
  7171   006950  6E12               	movwf	___flmul@aexp^0,c
  7172   006952  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7173   006954  EFAE  F034         	goto	u3961
  7174   006958  EFB0  F034         	goto	u3960
  7175   00695C                     u3961:
  7176   00695C  EFD4  F034         	goto	l1115
  7177   006960                     u3960:
  7178   006960  0EFF               	movlw	255
  7179   006962  140E               	andwf	___flmul@grs^0,w,c
  7180   006964  6E09               	movwf	??___flmul^0,c
  7181   006966  0EFF               	movlw	255
  7182   006968  140F               	andwf	(___flmul@grs+1)^0,w,c
  7183   00696A  6E0A               	movwf	(??___flmul+1)^0,c
  7184   00696C  0EFF               	movlw	255
  7185   00696E  1410               	andwf	(___flmul@grs+2)^0,w,c
  7186   006970  6E0B               	movwf	(??___flmul+2)^0,c
  7187   006972  0E7F               	movlw	127
  7188   006974  1411               	andwf	(___flmul@grs+3)^0,w,c
  7189   006976  6E0C               	movwf	(??___flmul+3)^0,c
  7190   006978  5009               	movf	??___flmul^0,w,c
  7191   00697A  100A               	iorwf	(??___flmul+1)^0,w,c
  7192   00697C  100B               	iorwf	(??___flmul+2)^0,w,c
  7193   00697E  100C               	iorwf	(??___flmul+3)^0,w,c
  7194   006980  B4D8               	btfsc	status,2,c
  7195   006982  EFC5  F034         	goto	u3971
  7196   006986  EFC7  F034         	goto	u3970
  7197   00698A                     u3971:
  7198   00698A  EFCB  F034         	goto	l1116
  7199   00698E                     u3970:
  7200   00698E                     l3858:
  7201   00698E  0E01               	movlw	1
  7202   006990  6E12               	movwf	___flmul@aexp^0,c
  7203   006992  EFD4  F034         	goto	l1115
  7204   006996                     l1116:
  7205   006996  A014               	btfss	___flmul@prod^0,0,c
  7206   006998  EFD0  F034         	goto	u3981
  7207   00699C  EFD2  F034         	goto	u3980
  7208   0069A0                     u3981:
  7209   0069A0  EFD4  F034         	goto	l1115
  7210   0069A4                     u3980:
  7211   0069A4  EFC7  F034         	goto	l3858
  7212   0069A8                     l1115:
  7213   0069A8  5012               	movf	___flmul@aexp^0,w,c
  7214   0069AA  B4D8               	btfsc	status,2,c
  7215   0069AC  EFDA  F034         	goto	u3991
  7216   0069B0  EFDC  F034         	goto	u3990
  7217   0069B4                     u3991:
  7218   0069B4  EF00  F035         	goto	l3870
  7219   0069B8                     u3990:
  7220   0069B8  0E01               	movlw	1
  7221   0069BA  2614               	addwf	___flmul@prod^0,f,c
  7222   0069BC  0E00               	movlw	0
  7223   0069BE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7224   0069C0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7225   0069C2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7226   0069C4  A017               	btfss	(___flmul@prod+3)^0,0,c
  7227   0069C6  EFE7  F034         	goto	u4001
  7228   0069CA  EFE9  F034         	goto	u4000
  7229   0069CE                     u4001:
  7230   0069CE  EF00  F035         	goto	l3870
  7231   0069D2                     u4000:
  7232   0069D2  C014  F009         	movff	___flmul@prod,??___flmul
  7233   0069D6  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7234   0069DA  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7235   0069DE  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7236   0069E2  340C               	rlcf	(??___flmul+3)^0,w,c
  7237   0069E4  320C               	rrcf	(??___flmul+3)^0,f,c
  7238   0069E6  320B               	rrcf	(??___flmul+2)^0,f,c
  7239   0069E8  320A               	rrcf	(??___flmul+1)^0,f,c
  7240   0069EA  3209               	rrcf	??___flmul^0,f,c
  7241   0069EC  C009  F014         	movff	??___flmul,___flmul@prod
  7242   0069F0  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7243   0069F4  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7244   0069F8  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7245   0069FC  4A18               	infsnz	___flmul@temp^0,f,c
  7246   0069FE  2A19               	incf	(___flmul@temp+1)^0,f,c
  7247   006A00                     l3870:
  7248   006A00  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7249   006A02  EF0B  F035         	goto	u4011
  7250   006A06  5019               	movf	(___flmul@temp+1)^0,w,c
  7251   006A08  E108               	bnz	u4010
  7252   006A0A  2818               	incf	___flmul@temp^0,w,c
  7253   006A0C  A0D8               	btfss	status,0,c
  7254   006A0E  EF0B  F035         	goto	u4011
  7255   006A12  EF0D  F035         	goto	u4010
  7256   006A16                     u4011:
  7257   006A16  EF17  F035         	goto	l3874
  7258   006A1A                     u4010:
  7259   006A1A  0E00               	movlw	0
  7260   006A1C  6E14               	movwf	___flmul@prod^0,c
  7261   006A1E  0E00               	movlw	0
  7262   006A20  6E15               	movwf	(___flmul@prod+1)^0,c
  7263   006A22  0E80               	movlw	128
  7264   006A24  6E16               	movwf	(___flmul@prod+2)^0,c
  7265   006A26  0E7F               	movlw	127
  7266   006A28  6E17               	movwf	(___flmul@prod+3)^0,c
  7267   006A2A  EF45  F035         	goto	l3886
  7268   006A2E                     l3874:
  7269   006A2E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7270   006A30  EF24  F035         	goto	u4020
  7271   006A34  5019               	movf	(___flmul@temp+1)^0,w,c
  7272   006A36  E106               	bnz	u4021
  7273   006A38  0418               	decf	___flmul@temp^0,w,c
  7274   006A3A  B0D8               	btfsc	status,0,c
  7275   006A3C  EF22  F035         	goto	u4021
  7276   006A40  EF24  F035         	goto	u4020
  7277   006A44                     u4021:
  7278   006A44  EF30  F035         	goto	l1123
  7279   006A48                     u4020:
  7280   006A48  0E00               	movlw	0
  7281   006A4A  6E14               	movwf	___flmul@prod^0,c
  7282   006A4C  0E00               	movlw	0
  7283   006A4E  6E15               	movwf	(___flmul@prod+1)^0,c
  7284   006A50  0E00               	movlw	0
  7285   006A52  6E16               	movwf	(___flmul@prod+2)^0,c
  7286   006A54  0E00               	movlw	0
  7287   006A56  6E17               	movwf	(___flmul@prod+3)^0,c
  7288   006A58  0E00               	movlw	0
  7289   006A5A  6E0D               	movwf	___flmul@sign^0,c
  7290   006A5C  EF45  F035         	goto	l3886
  7291   006A60                     l1123:
  7292   006A60  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7293   006A64  0EFF               	movlw	255
  7294   006A66  1614               	andwf	___flmul@prod^0,f,c
  7295   006A68  0EFF               	movlw	255
  7296   006A6A  1615               	andwf	(___flmul@prod+1)^0,f,c
  7297   006A6C  0E7F               	movlw	127
  7298   006A6E  1616               	andwf	(___flmul@prod+2)^0,f,c
  7299   006A70  0E00               	movlw	0
  7300   006A72  1617               	andwf	(___flmul@prod+3)^0,f,c
  7301   006A74  A013               	btfss	___flmul@bexp^0,0,c
  7302   006A76  EF3F  F035         	goto	u4031
  7303   006A7A  EF41  F035         	goto	u4030
  7304   006A7E                     u4031:
  7305   006A7E  EF42  F035         	goto	l3884
  7306   006A82                     u4030:
  7307   006A82  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7308   006A84                     l3884:
  7309   006A84  90D8               	bcf	status,0,c
  7310   006A86  3013               	rrcf	___flmul@bexp^0,w,c
  7311   006A88  6E17               	movwf	(___flmul@prod+3)^0,c
  7312   006A8A                     l3886:
  7313   006A8A  500D               	movf	___flmul@sign^0,w,c
  7314   006A8C  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7315   006A8E  C014  F001         	movff	___flmul@prod,?___flmul
  7316   006A92  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7317   006A96  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7318   006A9A  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7319   006A9E                     l1110:
  7320   006A9E  0012               	return		;funcret
  7321   006AA0                     __end_of___flmul:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function ___flge *****************
  7325 ;; Defined at:
  7326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  ff1             4   25[COMRAM] unsigned char 
  7329 ;;  ff2             4   29[COMRAM] unsigned char 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;		None               void
  7334 ;; Registers used:
  7335 ;;		wreg, status,2, status,0
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7341 ;;      Params:         8       0       0       0       0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7343 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7344 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7345 ;;Total ram usage:       12 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_efgtoa
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           	psect	text21
  7355   005212                     __ptext21:
  7356                           	callstack 0
  7357   005212                     ___flge:
  7358                           	callstack 26
  7359   005212  0E00               	movlw	0
  7360   005214  141A               	andwf	___flge@ff1^0,w,c
  7361   005216  6E22               	movwf	??___flge^0,c
  7362   005218  0E00               	movlw	0
  7363   00521A  141B               	andwf	(___flge@ff1+1)^0,w,c
  7364   00521C  6E23               	movwf	(??___flge+1)^0,c
  7365   00521E  0E80               	movlw	128
  7366   005220  141C               	andwf	(___flge@ff1+2)^0,w,c
  7367   005222  6E24               	movwf	(??___flge+2)^0,c
  7368   005224  0E7F               	movlw	127
  7369   005226  141D               	andwf	(___flge@ff1+3)^0,w,c
  7370   005228  6E25               	movwf	(??___flge+3)^0,c
  7371   00522A  5022               	movf	??___flge^0,w,c
  7372   00522C  1023               	iorwf	(??___flge+1)^0,w,c
  7373   00522E  1024               	iorwf	(??___flge+2)^0,w,c
  7374   005230  1025               	iorwf	(??___flge+3)^0,w,c
  7375   005232  A4D8               	btfss	status,2,c
  7376   005234  EF1E  F029         	goto	u4071
  7377   005238  EF20  F029         	goto	u4070
  7378   00523C                     u4071:
  7379   00523C  EF28  F029         	goto	l3918
  7380   005240                     u4070:
  7381   005240  0E00               	movlw	0
  7382   005242  6E1A               	movwf	___flge@ff1^0,c
  7383   005244  0E00               	movlw	0
  7384   005246  6E1B               	movwf	(___flge@ff1+1)^0,c
  7385   005248  0E00               	movlw	0
  7386   00524A  6E1C               	movwf	(___flge@ff1+2)^0,c
  7387   00524C  0E00               	movlw	0
  7388   00524E  6E1D               	movwf	(___flge@ff1+3)^0,c
  7389   005250                     l3918:
  7390   005250  0E00               	movlw	0
  7391   005252  141E               	andwf	___flge@ff2^0,w,c
  7392   005254  6E22               	movwf	??___flge^0,c
  7393   005256  0E00               	movlw	0
  7394   005258  141F               	andwf	(___flge@ff2+1)^0,w,c
  7395   00525A  6E23               	movwf	(??___flge+1)^0,c
  7396   00525C  0E80               	movlw	128
  7397   00525E  1420               	andwf	(___flge@ff2+2)^0,w,c
  7398   005260  6E24               	movwf	(??___flge+2)^0,c
  7399   005262  0E7F               	movlw	127
  7400   005264  1421               	andwf	(___flge@ff2+3)^0,w,c
  7401   005266  6E25               	movwf	(??___flge+3)^0,c
  7402   005268  5022               	movf	??___flge^0,w,c
  7403   00526A  1023               	iorwf	(??___flge+1)^0,w,c
  7404   00526C  1024               	iorwf	(??___flge+2)^0,w,c
  7405   00526E  1025               	iorwf	(??___flge+3)^0,w,c
  7406   005270  A4D8               	btfss	status,2,c
  7407   005272  EF3D  F029         	goto	u4081
  7408   005276  EF3F  F029         	goto	u4080
  7409   00527A                     u4081:
  7410   00527A  EF47  F029         	goto	l3922
  7411   00527E                     u4080:
  7412   00527E  0E00               	movlw	0
  7413   005280  6E1E               	movwf	___flge@ff2^0,c
  7414   005282  0E00               	movlw	0
  7415   005284  6E1F               	movwf	(___flge@ff2+1)^0,c
  7416   005286  0E00               	movlw	0
  7417   005288  6E20               	movwf	(___flge@ff2+2)^0,c
  7418   00528A  0E00               	movlw	0
  7419   00528C  6E21               	movwf	(___flge@ff2+3)^0,c
  7420   00528E                     l3922:
  7421   00528E  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7422   005290  EF4C  F029         	goto	u4091
  7423   005294  EF4E  F029         	goto	u4090
  7424   005298                     u4091:
  7425   005298  EF57  F029         	goto	l3926
  7426   00529C                     u4090:
  7427   00529C  6C1A               	negf	___flge@ff1^0,c
  7428   00529E  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7429   0052A0  B0D8               	btfsc	status,0,c
  7430   0052A2  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7431   0052A4  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7432   0052A6  B0D8               	btfsc	status,0,c
  7433   0052A8  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7434   0052AA  0E80               	movlw	128
  7435   0052AC  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7436   0052AE                     l3926:
  7437   0052AE  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7438   0052B0  EF5C  F029         	goto	u4101
  7439   0052B4  EF5E  F029         	goto	u4100
  7440   0052B8                     u4101:
  7441   0052B8  EF67  F029         	goto	l757
  7442   0052BC                     u4100:
  7443   0052BC  6C1E               	negf	___flge@ff2^0,c
  7444   0052BE  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7445   0052C0  B0D8               	btfsc	status,0,c
  7446   0052C2  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7447   0052C4  1E20               	comf	(___flge@ff2+2)^0,f,c
  7448   0052C6  B0D8               	btfsc	status,0,c
  7449   0052C8  2A20               	incf	(___flge@ff2+2)^0,f,c
  7450   0052CA  0E80               	movlw	128
  7451   0052CC  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7452   0052CE                     l757:
  7453   0052CE  0E00               	movlw	0
  7454   0052D0  1A1A               	xorwf	___flge@ff1^0,f,c
  7455   0052D2  0E00               	movlw	0
  7456   0052D4  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7457   0052D6  0E00               	movlw	0
  7458   0052D8  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7459   0052DA  0E80               	movlw	128
  7460   0052DC  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7461   0052DE  0E00               	movlw	0
  7462   0052E0  1A1E               	xorwf	___flge@ff2^0,f,c
  7463   0052E2  0E00               	movlw	0
  7464   0052E4  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7465   0052E6  0E00               	movlw	0
  7466   0052E8  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7467   0052EA  0E80               	movlw	128
  7468   0052EC  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7469   0052EE  501E               	movf	___flge@ff2^0,w,c
  7470   0052F0  5C1A               	subwf	___flge@ff1^0,w,c
  7471   0052F2  501F               	movf	(___flge@ff2+1)^0,w,c
  7472   0052F4  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7473   0052F6  5020               	movf	(___flge@ff2+2)^0,w,c
  7474   0052F8  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7475   0052FA  5021               	movf	(___flge@ff2+3)^0,w,c
  7476   0052FC  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7477   0052FE  B0D8               	btfsc	status,0,c
  7478   005300  EF84  F029         	goto	u4111
  7479   005304  EF86  F029         	goto	u4110
  7480   005308                     u4111:
  7481   005308  EF89  F029         	goto	l3932
  7482   00530C                     u4110:
  7483   00530C  90D8               	bcf	status,0,c
  7484   00530E  EF8A  F029         	goto	l762
  7485   005312                     l3932:
  7486   005312  80D8               	bsf	status,0,c
  7487   005314                     l762:
  7488   005314  0012               	return		;funcret
  7489   005316                     __end_of___flge:
  7490                           	callstack 0
  7491                           
  7492 ;; *************** function ___fleq *****************
  7493 ;; Defined at:
  7494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  ff1             4    0[COMRAM] unsigned char 
  7497 ;;  ff2             4    4[COMRAM] unsigned char 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;		None               void
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7509 ;;      Params:         8       0       0       0       0       0       0       0       0
  7510 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7511 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7512 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7513 ;;Total ram usage:       12 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_efgtoa
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text22
  7523   004CD0                     __ptext22:
  7524                           	callstack 0
  7525   004CD0                     ___fleq:
  7526                           	callstack 26
  7527   004CD0  0E00               	movlw	0
  7528   004CD2  1401               	andwf	___fleq@ff1^0,w,c
  7529   004CD4  6E09               	movwf	??___fleq^0,c
  7530   004CD6  0E00               	movlw	0
  7531   004CD8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7532   004CDA  6E0A               	movwf	(??___fleq+1)^0,c
  7533   004CDC  0E80               	movlw	128
  7534   004CDE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7535   004CE0  6E0B               	movwf	(??___fleq+2)^0,c
  7536   004CE2  0E7F               	movlw	127
  7537   004CE4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7538   004CE6  6E0C               	movwf	(??___fleq+3)^0,c
  7539   004CE8  5009               	movf	??___fleq^0,w,c
  7540   004CEA  100A               	iorwf	(??___fleq+1)^0,w,c
  7541   004CEC  100B               	iorwf	(??___fleq+2)^0,w,c
  7542   004CEE  100C               	iorwf	(??___fleq+3)^0,w,c
  7543   004CF0  A4D8               	btfss	status,2,c
  7544   004CF2  EF7D  F026         	goto	u4041
  7545   004CF6  EF7F  F026         	goto	u4040
  7546   004CFA                     u4041:
  7547   004CFA  EF87  F026         	goto	l3902
  7548   004CFE                     u4040:
  7549   004CFE  0E00               	movlw	0
  7550   004D00  6E01               	movwf	___fleq@ff1^0,c
  7551   004D02  0E00               	movlw	0
  7552   004D04  6E02               	movwf	(___fleq@ff1+1)^0,c
  7553   004D06  0E00               	movlw	0
  7554   004D08  6E03               	movwf	(___fleq@ff1+2)^0,c
  7555   004D0A  0E00               	movlw	0
  7556   004D0C  6E04               	movwf	(___fleq@ff1+3)^0,c
  7557   004D0E                     l3902:
  7558   004D0E  0E00               	movlw	0
  7559   004D10  1405               	andwf	___fleq@ff2^0,w,c
  7560   004D12  6E09               	movwf	??___fleq^0,c
  7561   004D14  0E00               	movlw	0
  7562   004D16  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7563   004D18  6E0A               	movwf	(??___fleq+1)^0,c
  7564   004D1A  0E80               	movlw	128
  7565   004D1C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7566   004D1E  6E0B               	movwf	(??___fleq+2)^0,c
  7567   004D20  0E7F               	movlw	127
  7568   004D22  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7569   004D24  6E0C               	movwf	(??___fleq+3)^0,c
  7570   004D26  5009               	movf	??___fleq^0,w,c
  7571   004D28  100A               	iorwf	(??___fleq+1)^0,w,c
  7572   004D2A  100B               	iorwf	(??___fleq+2)^0,w,c
  7573   004D2C  100C               	iorwf	(??___fleq+3)^0,w,c
  7574   004D2E  A4D8               	btfss	status,2,c
  7575   004D30  EF9C  F026         	goto	u4051
  7576   004D34  EF9E  F026         	goto	u4050
  7577   004D38                     u4051:
  7578   004D38  EFA6  F026         	goto	l3906
  7579   004D3C                     u4050:
  7580   004D3C  0E00               	movlw	0
  7581   004D3E  6E05               	movwf	___fleq@ff2^0,c
  7582   004D40  0E00               	movlw	0
  7583   004D42  6E06               	movwf	(___fleq@ff2+1)^0,c
  7584   004D44  0E00               	movlw	0
  7585   004D46  6E07               	movwf	(___fleq@ff2+2)^0,c
  7586   004D48  0E00               	movlw	0
  7587   004D4A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7588   004D4C                     l3906:
  7589   004D4C  5005               	movf	___fleq@ff2^0,w,c
  7590   004D4E  1801               	xorwf	___fleq@ff1^0,w,c
  7591   004D50  E10F               	bnz	u4060
  7592   004D52  5006               	movf	(___fleq@ff2+1)^0,w,c
  7593   004D54  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7594   004D56  E10C               	bnz	u4060
  7595   004D58  5007               	movf	(___fleq@ff2+2)^0,w,c
  7596   004D5A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7597   004D5C  E109               	bnz	u4060
  7598   004D5E  5008               	movf	(___fleq@ff2+3)^0,w,c
  7599   004D60  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7600   004D62  B4D8               	btfsc	status,2,c
  7601   004D64  EFB6  F026         	goto	u4061
  7602   004D68  EFB8  F026         	goto	u4060
  7603   004D6C                     u4061:
  7604   004D6C  EFBB  F026         	goto	l3910
  7605   004D70                     u4060:
  7606   004D70  90D8               	bcf	status,0,c
  7607   004D72  EFBC  F026         	goto	l751
  7608   004D76                     l3910:
  7609   004D76  80D8               	bsf	status,0,c
  7610   004D78                     l751:
  7611   004D78  0012               	return		;funcret
  7612   004D7A                     __end_of___fleq:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function ___fldiv *****************
  7616 ;; Defined at:
  7617 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  b               4    0[COMRAM] unsigned char 
  7620 ;;  a               4    4[COMRAM] unsigned char 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;  grs             4   19[COMRAM] unsigned long 
  7623 ;;  rem             4   12[COMRAM] unsigned long 
  7624 ;;  new_exp         2   17[COMRAM] short 
  7625 ;;  aexp            1   24[COMRAM] unsigned char 
  7626 ;;  bexp            1   23[COMRAM] unsigned char 
  7627 ;;  sign            1   16[COMRAM] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  4    0[COMRAM] unsigned char 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7637 ;;      Params:         8       0       0       0       0       0       0       0       0
  7638 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7640 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:       25 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_efgtoa
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text23
  7651   0062DC                     __ptext23:
  7652                           	callstack 0
  7653   0062DC                     ___fldiv:
  7654                           	callstack 26
  7655   0062DC  5004               	movf	(___fldiv@b+3)^0,w,c
  7656   0062DE  0B80               	andlw	128
  7657   0062E0  6E11               	movwf	___fldiv@sign^0,c
  7658   0062E2  5004               	movf	(___fldiv@b+3)^0,w,c
  7659   0062E4  2404               	addwf	(___fldiv@b+3)^0,w,c
  7660   0062E6  6E18               	movwf	___fldiv@bexp^0,c
  7661   0062E8  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7662   0062EA  EF79  F031         	goto	u3621
  7663   0062EE  EF7B  F031         	goto	u3620
  7664   0062F2                     u3621:
  7665   0062F2  EF7C  F031         	goto	l3630
  7666   0062F6                     u3620:
  7667   0062F6  8018               	bsf	___fldiv@bexp^0,0,c
  7668   0062F8                     l3630:
  7669   0062F8  5018               	movf	___fldiv@bexp^0,w,c
  7670   0062FA  B4D8               	btfsc	status,2,c
  7671   0062FC  EF82  F031         	goto	u3631
  7672   006300  EF84  F031         	goto	u3630
  7673   006304                     u3631:
  7674   006304  EF99  F031         	goto	l3640
  7675   006308                     u3630:
  7676   006308  2818               	incf	___fldiv@bexp^0,w,c
  7677   00630A  A4D8               	btfss	status,2,c
  7678   00630C  EF8A  F031         	goto	u3641
  7679   006310  EF8C  F031         	goto	u3640
  7680   006314                     u3641:
  7681   006314  EF94  F031         	goto	l3636
  7682   006318                     u3640:
  7683   006318  0E00               	movlw	0
  7684   00631A  6E01               	movwf	___fldiv@b^0,c
  7685   00631C  0E00               	movlw	0
  7686   00631E  6E02               	movwf	(___fldiv@b+1)^0,c
  7687   006320  0E00               	movlw	0
  7688   006322  6E03               	movwf	(___fldiv@b+2)^0,c
  7689   006324  0E00               	movlw	0
  7690   006326  6E04               	movwf	(___fldiv@b+3)^0,c
  7691   006328                     l3636:
  7692   006328  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7693   00632A  0E00               	movlw	0
  7694   00632C  6E04               	movwf	(___fldiv@b+3)^0,c
  7695   00632E  EFA1  F031         	goto	l3642
  7696   006332                     l3640:
  7697   006332  0E00               	movlw	0
  7698   006334  6E01               	movwf	___fldiv@b^0,c
  7699   006336  0E00               	movlw	0
  7700   006338  6E02               	movwf	(___fldiv@b+1)^0,c
  7701   00633A  0E00               	movlw	0
  7702   00633C  6E03               	movwf	(___fldiv@b+2)^0,c
  7703   00633E  0E00               	movlw	0
  7704   006340  6E04               	movwf	(___fldiv@b+3)^0,c
  7705   006342                     l3642:
  7706   006342  5008               	movf	(___fldiv@a+3)^0,w,c
  7707   006344  0B80               	andlw	128
  7708   006346  1A11               	xorwf	___fldiv@sign^0,f,c
  7709   006348  5008               	movf	(___fldiv@a+3)^0,w,c
  7710   00634A  2408               	addwf	(___fldiv@a+3)^0,w,c
  7711   00634C  6E19               	movwf	___fldiv@aexp^0,c
  7712   00634E  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7713   006350  EFAC  F031         	goto	u3651
  7714   006354  EFAE  F031         	goto	u3650
  7715   006358                     u3651:
  7716   006358  EFAF  F031         	goto	l3650
  7717   00635C                     u3650:
  7718   00635C  8019               	bsf	___fldiv@aexp^0,0,c
  7719   00635E                     l3650:
  7720   00635E  5019               	movf	___fldiv@aexp^0,w,c
  7721   006360  B4D8               	btfsc	status,2,c
  7722   006362  EFB5  F031         	goto	u3661
  7723   006366  EFB7  F031         	goto	u3660
  7724   00636A                     u3661:
  7725   00636A  EFCC  F031         	goto	l3660
  7726   00636E                     u3660:
  7727   00636E  2819               	incf	___fldiv@aexp^0,w,c
  7728   006370  A4D8               	btfss	status,2,c
  7729   006372  EFBD  F031         	goto	u3671
  7730   006376  EFBF  F031         	goto	u3670
  7731   00637A                     u3671:
  7732   00637A  EFC7  F031         	goto	l3656
  7733   00637E                     u3670:
  7734   00637E  0E00               	movlw	0
  7735   006380  6E05               	movwf	___fldiv@a^0,c
  7736   006382  0E00               	movlw	0
  7737   006384  6E06               	movwf	(___fldiv@a+1)^0,c
  7738   006386  0E00               	movlw	0
  7739   006388  6E07               	movwf	(___fldiv@a+2)^0,c
  7740   00638A  0E00               	movlw	0
  7741   00638C  6E08               	movwf	(___fldiv@a+3)^0,c
  7742   00638E                     l3656:
  7743   00638E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7744   006390  0E00               	movlw	0
  7745   006392  6E08               	movwf	(___fldiv@a+3)^0,c
  7746   006394  EFD4  F031         	goto	l3662
  7747   006398                     l3660:
  7748   006398  0E00               	movlw	0
  7749   00639A  6E05               	movwf	___fldiv@a^0,c
  7750   00639C  0E00               	movlw	0
  7751   00639E  6E06               	movwf	(___fldiv@a+1)^0,c
  7752   0063A0  0E00               	movlw	0
  7753   0063A2  6E07               	movwf	(___fldiv@a+2)^0,c
  7754   0063A4  0E00               	movlw	0
  7755   0063A6  6E08               	movwf	(___fldiv@a+3)^0,c
  7756   0063A8                     l3662:
  7757   0063A8  5005               	movf	___fldiv@a^0,w,c
  7758   0063AA  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7759   0063AC  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7760   0063AE  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7761   0063B0  A4D8               	btfss	status,2,c
  7762   0063B2  EFDD  F031         	goto	u3681
  7763   0063B6  EFDF  F031         	goto	u3680
  7764   0063BA                     u3681:
  7765   0063BA  EFF7  F031         	goto	l3674
  7766   0063BE                     u3680:
  7767   0063BE  0E00               	movlw	0
  7768   0063C0  6E01               	movwf	___fldiv@b^0,c
  7769   0063C2  0E00               	movlw	0
  7770   0063C4  6E02               	movwf	(___fldiv@b+1)^0,c
  7771   0063C6  0E00               	movlw	0
  7772   0063C8  6E03               	movwf	(___fldiv@b+2)^0,c
  7773   0063CA  0E00               	movlw	0
  7774   0063CC  6E04               	movwf	(___fldiv@b+3)^0,c
  7775   0063CE  0E80               	movlw	128
  7776   0063D0  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7777   0063D2  0E7F               	movlw	127
  7778   0063D4  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7779   0063D6                     l3668:
  7780   0063D6  5011               	movf	___fldiv@sign^0,w,c
  7781   0063D8  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7782   0063DA  C001  F001         	movff	___fldiv@b,?___fldiv
  7783   0063DE  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7784   0063E2  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7785   0063E6  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7786   0063EA  EF3A  F033         	goto	l1074
  7787   0063EE                     l3674:
  7788   0063EE  5018               	movf	___fldiv@bexp^0,w,c
  7789   0063F0  A4D8               	btfss	status,2,c
  7790   0063F2  EFFD  F031         	goto	u3691
  7791   0063F6  EFFF  F031         	goto	u3690
  7792   0063FA                     u3691:
  7793   0063FA  EF09  F032         	goto	l3682
  7794   0063FE                     u3690:
  7795   0063FE  0E00               	movlw	0
  7796   006400  6E01               	movwf	?___fldiv^0,c
  7797   006402  0E00               	movlw	0
  7798   006404  6E02               	movwf	(?___fldiv+1)^0,c
  7799   006406  0E00               	movlw	0
  7800   006408  6E03               	movwf	(?___fldiv+2)^0,c
  7801   00640A  0E00               	movlw	0
  7802   00640C  6E04               	movwf	(?___fldiv+3)^0,c
  7803   00640E  EF3A  F033         	goto	l1074
  7804   006412                     l3682:
  7805   006412  5019               	movf	___fldiv@aexp^0,w,c
  7806   006414  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7807   006418  6A0A               	clrf	(??___fldiv+1)^0,c
  7808   00641A  5E09               	subwf	??___fldiv^0,f,c
  7809   00641C  0E00               	movlw	0
  7810   00641E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7811   006420  0E7F               	movlw	127
  7812   006422  2409               	addwf	??___fldiv^0,w,c
  7813   006424  6E12               	movwf	___fldiv@new_exp^0,c
  7814   006426  0E00               	movlw	0
  7815   006428  200A               	addwfc	(??___fldiv+1)^0,w,c
  7816   00642A  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7817   00642C  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7818   006430  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7819   006434  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7820   006438  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7821   00643C  0E00               	movlw	0
  7822   00643E  6E01               	movwf	___fldiv@b^0,c
  7823   006440  0E00               	movlw	0
  7824   006442  6E02               	movwf	(___fldiv@b+1)^0,c
  7825   006444  0E00               	movlw	0
  7826   006446  6E03               	movwf	(___fldiv@b+2)^0,c
  7827   006448  0E00               	movlw	0
  7828   00644A  6E04               	movwf	(___fldiv@b+3)^0,c
  7829   00644C  0E00               	movlw	0
  7830   00644E  6E14               	movwf	___fldiv@grs^0,c
  7831   006450  0E00               	movlw	0
  7832   006452  6E15               	movwf	(___fldiv@grs+1)^0,c
  7833   006454  0E00               	movlw	0
  7834   006456  6E16               	movwf	(___fldiv@grs+2)^0,c
  7835   006458  0E00               	movlw	0
  7836   00645A  6E17               	movwf	(___fldiv@grs+3)^0,c
  7837   00645C  0E00               	movlw	0
  7838   00645E  6E19               	movwf	___fldiv@aexp^0,c
  7839   006460  EF6A  F032         	goto	l1076
  7840   006464                     l3692:
  7841   006464  5019               	movf	___fldiv@aexp^0,w,c
  7842   006466  B4D8               	btfsc	status,2,c
  7843   006468  EF38  F032         	goto	u3701
  7844   00646C  EF3A  F032         	goto	u3700
  7845   006470                     u3701:
  7846   006470  EF51  F032         	goto	l3700
  7847   006474                     u3700:
  7848   006474  90D8               	bcf	status,0,c
  7849   006476  360D               	rlcf	___fldiv@rem^0,f,c
  7850   006478  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7851   00647A  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7852   00647C  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7853   00647E  90D8               	bcf	status,0,c
  7854   006480  3601               	rlcf	___fldiv@b^0,f,c
  7855   006482  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7856   006484  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7857   006486  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7858   006488  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7859   00648A  EF49  F032         	goto	u3711
  7860   00648E  EF4B  F032         	goto	u3710
  7861   006492                     u3711:
  7862   006492  EF4C  F032         	goto	l1079
  7863   006496                     u3710:
  7864   006496  8001               	bsf	___fldiv@b^0,0,c
  7865   006498                     l1079:
  7866   006498  90D8               	bcf	status,0,c
  7867   00649A  3614               	rlcf	___fldiv@grs^0,f,c
  7868   00649C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7869   00649E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7870   0064A0  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7871   0064A2                     l3700:
  7872   0064A2  5005               	movf	___fldiv@a^0,w,c
  7873   0064A4  5C0D               	subwf	___fldiv@rem^0,w,c
  7874   0064A6  5006               	movf	(___fldiv@a+1)^0,w,c
  7875   0064A8  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7876   0064AA  5007               	movf	(___fldiv@a+2)^0,w,c
  7877   0064AC  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7878   0064AE  5008               	movf	(___fldiv@a+3)^0,w,c
  7879   0064B0  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7880   0064B2  A0D8               	btfss	status,0,c
  7881   0064B4  EF5E  F032         	goto	u3721
  7882   0064B8  EF60  F032         	goto	u3720
  7883   0064BC                     u3721:
  7884   0064BC  EF69  F032         	goto	l3706
  7885   0064C0                     u3720:
  7886   0064C0  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7887   0064C2  5005               	movf	___fldiv@a^0,w,c
  7888   0064C4  5E0D               	subwf	___fldiv@rem^0,f,c
  7889   0064C6  5006               	movf	(___fldiv@a+1)^0,w,c
  7890   0064C8  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7891   0064CA  5007               	movf	(___fldiv@a+2)^0,w,c
  7892   0064CC  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7893   0064CE  5008               	movf	(___fldiv@a+3)^0,w,c
  7894   0064D0  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7895   0064D2                     l3706:
  7896   0064D2  2A19               	incf	___fldiv@aexp^0,f,c
  7897   0064D4                     l1076:
  7898   0064D4  0E19               	movlw	25
  7899   0064D6  6419               	cpfsgt	___fldiv@aexp^0,c
  7900   0064D8  EF70  F032         	goto	u3731
  7901   0064DC  EF72  F032         	goto	u3730
  7902   0064E0                     u3731:
  7903   0064E0  EF32  F032         	goto	l3692
  7904   0064E4                     u3730:
  7905   0064E4  500D               	movf	___fldiv@rem^0,w,c
  7906   0064E6  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7907   0064E8  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7908   0064EA  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7909   0064EC  B4D8               	btfsc	status,2,c
  7910   0064EE  EF7B  F032         	goto	u3741
  7911   0064F2  EF7D  F032         	goto	u3740
  7912   0064F6                     u3741:
  7913   0064F6  EF95  F032         	goto	l3718
  7914   0064FA                     u3740:
  7915   0064FA  8014               	bsf	___fldiv@grs^0,0,c
  7916   0064FC  EF95  F032         	goto	l3718
  7917   006500                     l3712:
  7918   006500  90D8               	bcf	status,0,c
  7919   006502  3601               	rlcf	___fldiv@b^0,f,c
  7920   006504  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7921   006506  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7922   006508  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7923   00650A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7924   00650C  EF8A  F032         	goto	u3751
  7925   006510  EF8C  F032         	goto	u3750
  7926   006514                     u3751:
  7927   006514  EF8D  F032         	goto	l1085
  7928   006518                     u3750:
  7929   006518  8001               	bsf	___fldiv@b^0,0,c
  7930   00651A                     l1085:
  7931   00651A  90D8               	bcf	status,0,c
  7932   00651C  3614               	rlcf	___fldiv@grs^0,f,c
  7933   00651E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7934   006520  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7935   006522  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7936   006524  0612               	decf	___fldiv@new_exp^0,f,c
  7937   006526  A0D8               	btfss	status,0,c
  7938   006528  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7939   00652A                     l3718:
  7940   00652A  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7941   00652C  EF9A  F032         	goto	u3761
  7942   006530  EF9C  F032         	goto	u3760
  7943   006534                     u3761:
  7944   006534  EF80  F032         	goto	l3712
  7945   006538                     u3760:
  7946   006538  0E00               	movlw	0
  7947   00653A  6E19               	movwf	___fldiv@aexp^0,c
  7948   00653C  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7949   00653E  EFA3  F032         	goto	u3771
  7950   006542  EFA5  F032         	goto	u3770
  7951   006546                     u3771:
  7952   006546  EFC9  F032         	goto	l1087
  7953   00654A                     u3770:
  7954   00654A  0EFF               	movlw	255
  7955   00654C  1414               	andwf	___fldiv@grs^0,w,c
  7956   00654E  6E09               	movwf	??___fldiv^0,c
  7957   006550  0EFF               	movlw	255
  7958   006552  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7959   006554  6E0A               	movwf	(??___fldiv+1)^0,c
  7960   006556  0EFF               	movlw	255
  7961   006558  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7962   00655A  6E0B               	movwf	(??___fldiv+2)^0,c
  7963   00655C  0E7F               	movlw	127
  7964   00655E  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7965   006560  6E0C               	movwf	(??___fldiv+3)^0,c
  7966   006562  5009               	movf	??___fldiv^0,w,c
  7967   006564  100A               	iorwf	(??___fldiv+1)^0,w,c
  7968   006566  100B               	iorwf	(??___fldiv+2)^0,w,c
  7969   006568  100C               	iorwf	(??___fldiv+3)^0,w,c
  7970   00656A  B4D8               	btfsc	status,2,c
  7971   00656C  EFBA  F032         	goto	u3781
  7972   006570  EFBC  F032         	goto	u3780
  7973   006574                     u3781:
  7974   006574  EFC0  F032         	goto	l1088
  7975   006578                     u3780:
  7976   006578                     l3726:
  7977   006578  0E01               	movlw	1
  7978   00657A  6E19               	movwf	___fldiv@aexp^0,c
  7979   00657C  EFC9  F032         	goto	l1087
  7980   006580                     l1088:
  7981   006580  A001               	btfss	___fldiv@b^0,0,c
  7982   006582  EFC5  F032         	goto	u3791
  7983   006586  EFC7  F032         	goto	u3790
  7984   00658A                     u3791:
  7985   00658A  EFC9  F032         	goto	l1087
  7986   00658E                     u3790:
  7987   00658E  EFBC  F032         	goto	l3726
  7988   006592                     l1087:
  7989   006592  5019               	movf	___fldiv@aexp^0,w,c
  7990   006594  B4D8               	btfsc	status,2,c
  7991   006596  EFCF  F032         	goto	u3801
  7992   00659A  EFD1  F032         	goto	u3800
  7993   00659E                     u3801:
  7994   00659E  EFF5  F032         	goto	l3738
  7995   0065A2                     u3800:
  7996   0065A2  0E01               	movlw	1
  7997   0065A4  2601               	addwf	___fldiv@b^0,f,c
  7998   0065A6  0E00               	movlw	0
  7999   0065A8  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8000   0065AA  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8001   0065AC  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8002   0065AE  A004               	btfss	(___fldiv@b+3)^0,0,c
  8003   0065B0  EFDC  F032         	goto	u3811
  8004   0065B4  EFDE  F032         	goto	u3810
  8005   0065B8                     u3811:
  8006   0065B8  EFF5  F032         	goto	l3738
  8007   0065BC                     u3810:
  8008   0065BC  C001  F009         	movff	___fldiv@b,??___fldiv
  8009   0065C0  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8010   0065C4  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8011   0065C8  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8012   0065CC  340C               	rlcf	(??___fldiv+3)^0,w,c
  8013   0065CE  320C               	rrcf	(??___fldiv+3)^0,f,c
  8014   0065D0  320B               	rrcf	(??___fldiv+2)^0,f,c
  8015   0065D2  320A               	rrcf	(??___fldiv+1)^0,f,c
  8016   0065D4  3209               	rrcf	??___fldiv^0,f,c
  8017   0065D6  C009  F001         	movff	??___fldiv,___fldiv@b
  8018   0065DA  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8019   0065DE  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8020   0065E2  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8021   0065E6  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8022   0065E8  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8023   0065EA                     l3738:
  8024   0065EA  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8025   0065EC  EF00  F033         	goto	u3821
  8026   0065F0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8027   0065F2  E108               	bnz	u3820
  8028   0065F4  2812               	incf	___fldiv@new_exp^0,w,c
  8029   0065F6  A0D8               	btfss	status,0,c
  8030   0065F8  EF00  F033         	goto	u3821
  8031   0065FC  EF02  F033         	goto	u3820
  8032   006600                     u3821:
  8033   006600  EF0D  F033         	goto	l3742
  8034   006604                     u3820:
  8035   006604  0E00               	movlw	0
  8036   006606  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8037   006608  6812               	setf	___fldiv@new_exp^0,c
  8038   00660A  0E00               	movlw	0
  8039   00660C  6E01               	movwf	___fldiv@b^0,c
  8040   00660E  0E00               	movlw	0
  8041   006610  6E02               	movwf	(___fldiv@b+1)^0,c
  8042   006612  0E00               	movlw	0
  8043   006614  6E03               	movwf	(___fldiv@b+2)^0,c
  8044   006616  0E00               	movlw	0
  8045   006618  6E04               	movwf	(___fldiv@b+3)^0,c
  8046   00661A                     l3742:
  8047   00661A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8048   00661C  EF1A  F033         	goto	u3830
  8049   006620  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8050   006622  E106               	bnz	u3831
  8051   006624  0412               	decf	___fldiv@new_exp^0,w,c
  8052   006626  B0D8               	btfsc	status,0,c
  8053   006628  EF18  F033         	goto	u3831
  8054   00662C  EF1A  F033         	goto	u3830
  8055   006630                     u3831:
  8056   006630  EF28  F033         	goto	l3746
  8057   006634                     u3830:
  8058   006634  0E00               	movlw	0
  8059   006636  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8060   006638  0E00               	movlw	0
  8061   00663A  6E12               	movwf	___fldiv@new_exp^0,c
  8062   00663C  0E00               	movlw	0
  8063   00663E  6E01               	movwf	___fldiv@b^0,c
  8064   006640  0E00               	movlw	0
  8065   006642  6E02               	movwf	(___fldiv@b+1)^0,c
  8066   006644  0E00               	movlw	0
  8067   006646  6E03               	movwf	(___fldiv@b+2)^0,c
  8068   006648  0E00               	movlw	0
  8069   00664A  6E04               	movwf	(___fldiv@b+3)^0,c
  8070   00664C  0E00               	movlw	0
  8071   00664E  6E11               	movwf	___fldiv@sign^0,c
  8072   006650                     l3746:
  8073   006650  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8074   006654  A018               	btfss	___fldiv@bexp^0,0,c
  8075   006656  EF2F  F033         	goto	u3841
  8076   00665A  EF31  F033         	goto	u3840
  8077   00665E                     u3841:
  8078   00665E  EF34  F033         	goto	l3752
  8079   006662                     u3840:
  8080   006662  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8081   006664  EF35  F033         	goto	l3754
  8082   006668                     l3752:
  8083   006668  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8084   00666A                     l3754:
  8085   00666A  90D8               	bcf	status,0,c
  8086   00666C  3018               	rrcf	___fldiv@bexp^0,w,c
  8087   00666E  6E04               	movwf	(___fldiv@b+3)^0,c
  8088   006670  EFEB  F031         	goto	l3668
  8089   006674                     l1074:
  8090   006674  0012               	return		;funcret
  8091   006676                     __end_of___fldiv:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function ___xxtofl *****************
  8095 ;; Defined at:
  8096 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  sign            1    wreg     unsigned char 
  8099 ;;  val             4    0[COMRAM] long 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  sign            1    8[COMRAM] unsigned char 
  8102 ;;  arg             4   10[COMRAM] unsigned long 
  8103 ;;  exp             1    9[COMRAM] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  4    0[COMRAM] unsigned char 
  8106 ;; Registers used:
  8107 ;;		wreg, status,2, status,0
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8113 ;;      Params:         4       0       0       0       0       0       0       0       0
  8114 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8115 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8116 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8117 ;;Total ram usage:       14 bytes
  8118 ;; Hardware stack levels used: 1
  8119 ;; This function calls:
  8120 ;;		Nothing
  8121 ;; This function is called by:
  8122 ;;		_main
  8123 ;; This function uses a non-reentrant model
  8124 ;;
  8125                           
  8126                           	psect	text24
  8127   005834                     __ptext24:
  8128                           	callstack 0
  8129   005834                     ___xxtofl:
  8130                           	callstack 30
  8131                           
  8132                           ;incstack = 0
  8133                           ;___xxtofl@sign stored from wreg
  8134   005834  6E09               	movwf	___xxtofl@sign^0,c
  8135   005836  5009               	movf	___xxtofl@sign^0,w,c
  8136   005838  B4D8               	btfsc	status,2,c
  8137   00583A  EF21  F02C         	goto	u5821
  8138   00583E  EF23  F02C         	goto	u5820
  8139   005842                     u5821:
  8140   005842  EF45  F02C         	goto	l1147
  8141   005846                     u5820:
  8142   005846  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8143   005848  EF2A  F02C         	goto	u5830
  8144   00584C  EF28  F02C         	goto	u5831
  8145   005850                     u5831:
  8146   005850  EF45  F02C         	goto	l1147
  8147   005854                     u5830:
  8148   005854  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8149   005858  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8150   00585C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8151   005860  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8152   005864  1E05               	comf	??___xxtofl^0,f,c
  8153   005866  1E06               	comf	(??___xxtofl+1)^0,f,c
  8154   005868  1E07               	comf	(??___xxtofl+2)^0,f,c
  8155   00586A  1E08               	comf	(??___xxtofl+3)^0,f,c
  8156   00586C  2A05               	incf	??___xxtofl^0,f,c
  8157   00586E  0E00               	movlw	0
  8158   005870  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8159   005872  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8160   005874  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8161   005876  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8162   00587A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8163   00587E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8164   005882  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8165   005886  EF4D  F02C         	goto	l4994
  8166   00588A                     l1147:
  8167   00588A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8168   00588E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8169   005892  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8170   005896  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8171   00589A                     l4994:
  8172   00589A  5001               	movf	___xxtofl@val^0,w,c
  8173   00589C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8174   00589E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8175   0058A0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8176   0058A2  A4D8               	btfss	status,2,c
  8177   0058A4  EF56  F02C         	goto	u5841
  8178   0058A8  EF58  F02C         	goto	u5840
  8179   0058AC                     u5841:
  8180   0058AC  EF62  F02C         	goto	l5000
  8181   0058B0                     u5840:
  8182   0058B0  0E00               	movlw	0
  8183   0058B2  6E01               	movwf	?___xxtofl^0,c
  8184   0058B4  0E00               	movlw	0
  8185   0058B6  6E02               	movwf	(?___xxtofl+1)^0,c
  8186   0058B8  0E00               	movlw	0
  8187   0058BA  6E03               	movwf	(?___xxtofl+2)^0,c
  8188   0058BC  0E00               	movlw	0
  8189   0058BE  6E04               	movwf	(?___xxtofl+3)^0,c
  8190   0058C0  EFF3  F02C         	goto	l1150
  8191   0058C4                     l5000:
  8192   0058C4  0E96               	movlw	150
  8193   0058C6  6E0A               	movwf	___xxtofl@exp^0,c
  8194   0058C8  EF6C  F02C         	goto	l5004
  8195   0058CC                     l5002:
  8196   0058CC  2A0A               	incf	___xxtofl@exp^0,f,c
  8197   0058CE  90D8               	bcf	status,0,c
  8198   0058D0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8199   0058D2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8200   0058D4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8201   0058D6  320B               	rrcf	___xxtofl@arg^0,f,c
  8202   0058D8                     l5004:
  8203   0058D8  0E00               	movlw	0
  8204   0058DA  140B               	andwf	___xxtofl@arg^0,w,c
  8205   0058DC  6E05               	movwf	??___xxtofl^0,c
  8206   0058DE  0E00               	movlw	0
  8207   0058E0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8208   0058E2  6E06               	movwf	(??___xxtofl+1)^0,c
  8209   0058E4  0E00               	movlw	0
  8210   0058E6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8211   0058E8  6E07               	movwf	(??___xxtofl+2)^0,c
  8212   0058EA  0EFE               	movlw	254
  8213   0058EC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8214   0058EE  6E08               	movwf	(??___xxtofl+3)^0,c
  8215   0058F0  5005               	movf	??___xxtofl^0,w,c
  8216   0058F2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8217   0058F4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8218   0058F6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8219   0058F8  A4D8               	btfss	status,2,c
  8220   0058FA  EF81  F02C         	goto	u5851
  8221   0058FE  EF83  F02C         	goto	u5850
  8222   005902                     u5851:
  8223   005902  EF66  F02C         	goto	l5002
  8224   005906                     u5850:
  8225   005906  EF91  F02C         	goto	l1154
  8226   00590A                     l5006:
  8227   00590A  2A0A               	incf	___xxtofl@exp^0,f,c
  8228   00590C  0E01               	movlw	1
  8229   00590E  260B               	addwf	___xxtofl@arg^0,f,c
  8230   005910  0E00               	movlw	0
  8231   005912  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8232   005914  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8233   005916  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8234   005918  90D8               	bcf	status,0,c
  8235   00591A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8236   00591C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8237   00591E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8238   005920  320B               	rrcf	___xxtofl@arg^0,f,c
  8239   005922                     l1154:
  8240   005922  0E00               	movlw	0
  8241   005924  140B               	andwf	___xxtofl@arg^0,w,c
  8242   005926  6E05               	movwf	??___xxtofl^0,c
  8243   005928  0E00               	movlw	0
  8244   00592A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8245   00592C  6E06               	movwf	(??___xxtofl+1)^0,c
  8246   00592E  0E00               	movlw	0
  8247   005930  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8248   005932  6E07               	movwf	(??___xxtofl+2)^0,c
  8249   005934  0EFF               	movlw	255
  8250   005936  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8251   005938  6E08               	movwf	(??___xxtofl+3)^0,c
  8252   00593A  5005               	movf	??___xxtofl^0,w,c
  8253   00593C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8254   00593E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8255   005940  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8256   005942  A4D8               	btfss	status,2,c
  8257   005944  EFA6  F02C         	goto	u5861
  8258   005948  EFA8  F02C         	goto	u5860
  8259   00594C                     u5861:
  8260   00594C  EF85  F02C         	goto	l5006
  8261   005950                     u5860:
  8262   005950  EFB0  F02C         	goto	l5014
  8263   005954                     l5012:
  8264   005954  060A               	decf	___xxtofl@exp^0,f,c
  8265   005956  90D8               	bcf	status,0,c
  8266   005958  360B               	rlcf	___xxtofl@arg^0,f,c
  8267   00595A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8268   00595C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8269   00595E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8270   005960                     l5014:
  8271   005960  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8272   005962  EFB5  F02C         	goto	u5871
  8273   005966  EFB7  F02C         	goto	u5870
  8274   00596A                     u5871:
  8275   00596A  EFBF  F02C         	goto	l1161
  8276   00596E                     u5870:
  8277   00596E  0E02               	movlw	2
  8278   005970  600A               	cpfslt	___xxtofl@exp^0,c
  8279   005972  EFBD  F02C         	goto	u5881
  8280   005976  EFBF  F02C         	goto	u5880
  8281   00597A                     u5881:
  8282   00597A  EFAA  F02C         	goto	l5012
  8283   00597E                     u5880:
  8284   00597E                     l1161:
  8285   00597E  B00A               	btfsc	___xxtofl@exp^0,0,c
  8286   005980  EFC4  F02C         	goto	u5891
  8287   005984  EFC6  F02C         	goto	u5890
  8288   005988                     u5891:
  8289   005988  EFC7  F02C         	goto	l5020
  8290   00598C                     u5890:
  8291   00598C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8292   00598E                     l5020:
  8293   00598E  90D8               	bcf	status,0,c
  8294   005990  320A               	rrcf	___xxtofl@exp^0,f,c
  8295   005992  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8296   005996  6A06               	clrf	(??___xxtofl+1)^0,c
  8297   005998  6A07               	clrf	(??___xxtofl+2)^0,c
  8298   00599A  6A08               	clrf	(??___xxtofl+3)^0,c
  8299   00599C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8300   0059A0  6A07               	clrf	(??___xxtofl+2)^0,c
  8301   0059A2  6A06               	clrf	(??___xxtofl+1)^0,c
  8302   0059A4  6A05               	clrf	??___xxtofl^0,c
  8303   0059A6  5005               	movf	??___xxtofl^0,w,c
  8304   0059A8  120B               	iorwf	___xxtofl@arg^0,f,c
  8305   0059AA  5006               	movf	(??___xxtofl+1)^0,w,c
  8306   0059AC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8307   0059AE  5007               	movf	(??___xxtofl+2)^0,w,c
  8308   0059B0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8309   0059B2  5008               	movf	(??___xxtofl+3)^0,w,c
  8310   0059B4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8311   0059B6  5009               	movf	___xxtofl@sign^0,w,c
  8312   0059B8  B4D8               	btfsc	status,2,c
  8313   0059BA  EFE1  F02C         	goto	u5901
  8314   0059BE  EFE3  F02C         	goto	u5900
  8315   0059C2                     u5901:
  8316   0059C2  EFEB  F02C         	goto	l5030
  8317   0059C6                     u5900:
  8318   0059C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8319   0059C8  EFEA  F02C         	goto	u5910
  8320   0059CC  EFE8  F02C         	goto	u5911
  8321   0059D0                     u5911:
  8322   0059D0  EFEB  F02C         	goto	l5030
  8323   0059D4                     u5910:
  8324   0059D4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8325   0059D6                     l5030:
  8326   0059D6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8327   0059DA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8328   0059DE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8329   0059E2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8330   0059E6                     l1150:
  8331   0059E6  0012               	return		;funcret
  8332   0059E8                     __end_of___xxtofl:
  8333                           	callstack 0
  8334                           
  8335 ;; *************** function _TFT_WriteString *****************
  8336 ;; Defined at:
  8337 ;;		line 1090 in file "tft_st7735.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  x               2   33[COMRAM] unsigned short 
  8340 ;;  y               2   35[COMRAM] unsigned short 
  8341 ;;  str             2   37[COMRAM] PTR const unsigned char 
  8342 ;;		 -> STR_2(21), main@cadena(16), 
  8343 ;;  color           2   39[COMRAM] unsigned short 
  8344 ;;  bg              2   41[COMRAM] unsigned short 
  8345 ;;  size            1   43[COMRAM] unsigned char 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  x_prev          1   46[COMRAM] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8357 ;;      Params:        11       0       0       0       0       0       0       0       0
  8358 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8360 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8361 ;;Total ram usage:       14 bytes
  8362 ;; Hardware stack levels used: 1
  8363 ;; Hardware stack levels required when called: 5
  8364 ;; This function calls:
  8365 ;;		_TFT_Print
  8366 ;; This function is called by:
  8367 ;;		_main
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text25
  8372   00569E                     __ptext25:
  8373                           	callstack 0
  8374   00569E                     _TFT_WriteString:
  8375                           	callstack 25
  8376   00569E                     
  8377                           ;tft_st7735.c: 1090: void TFT_WriteString(uint16_t x, uint16_t y, const char* str, uint1
      +                          6_t color, uint16_t bg, uint8_t size);tft_st7735.c: 1091: {;tft_st7735.c: 1092:     uint
      +                          8_t x_prev = x;
  8378   00569E  C022  F02F         	movff	TFT_WriteString@x,TFT_WriteString@x_prev
  8379   0056A2                     
  8380                           ;tft_st7735.c: 1093:     textsize = (size > 0) ? size : 1;
  8381   0056A2  502C               	movf	TFT_WriteString@size^0,w,c
  8382   0056A4  A4D8               	btfss	status,2,c
  8383   0056A6  EF57  F02B         	goto	u5501
  8384   0056AA  EF59  F02B         	goto	u5500
  8385   0056AE                     u5501:
  8386   0056AE  EF5F  F02B         	goto	l456
  8387   0056B2                     u5500:
  8388   0056B2  0E00               	movlw	0
  8389   0056B4  6E2E               	movwf	(_TFT_WriteString$911+1)^0,c
  8390   0056B6  0E01               	movlw	1
  8391   0056B8  6E2D               	movwf	_TFT_WriteString$911^0,c
  8392   0056BA  EF62  F02B         	goto	l458
  8393   0056BE                     l456:
  8394   0056BE  C02C  F02D         	movff	TFT_WriteString@size,_TFT_WriteString$911
  8395   0056C2  6A2E               	clrf	(_TFT_WriteString$911+1)^0,c
  8396   0056C4                     l458:
  8397   0056C4  C02D  F05E         	movff	_TFT_WriteString$911,_textsize
  8398                           
  8399                           ;tft_st7735.c: 1094:     textcolor = color;
  8400   0056C8  C028  F0BE         	movff	TFT_WriteString@color,_textcolor
  8401   0056CC  C029  F0BF         	movff	TFT_WriteString@color+1,_textcolor+1
  8402                           
  8403                           ;tft_st7735.c: 1095:     textbgcolor = bg;
  8404   0056D0  C02A  F0BC         	movff	TFT_WriteString@bg,_textbgcolor
  8405   0056D4  C02B  F0BD         	movff	TFT_WriteString@bg+1,_textbgcolor+1
  8406                           
  8407                           ;tft_st7735.c: 1096:     while(*str != '\0')
  8408   0056D8  EF01  F02C         	goto	l4848
  8409   0056DC                     l462:
  8410                           
  8411                           ;tft_st7735.c: 1101:                 cursor_x = x_prev;
  8412   0056DC  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8413   0056E0  6A59               	clrf	(_cursor_x+1)^0,c
  8414                           
  8415                           ;tft_st7735.c: 1102:                 cursor_y = y;
  8416   0056E2  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8417   0056E6  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8418   0056EA                     
  8419                           ;tft_st7735.c: 1103:                 TFT_Print(*str++);
  8420   0056EA  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8421   0056EE  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8422   0056F2  6AF8               	clrf	tblptru,c
  8423   0056F4  0E07               	movlw	(high __ramtop+-1)
  8424   0056F6  64F7               	cpfsgt	tblptrh,c
  8425   0056F8  D003               	bra	u5517
  8426   0056FA  0008               	tblrd		*
  8427   0056FC  50F5               	movf	tablat,w,c
  8428   0056FE  D005               	bra	u5510
  8429   005700                     u5517:
  8430   005700  CFF6 FFE9          	movff	tblptrl,fsr0l
  8431   005704  CFF7 FFEA          	movff	tblptrh,fsr0h
  8432   005708  50EF               	movf	indf0,w,c
  8433   00570A                     u5510:
  8434   00570A  EC1C  F030         	call	_TFT_Print
  8435   00570E  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8436   005710  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8437   005712                     
  8438                           ;tft_st7735.c: 1104:                 x_prev = x_prev + 6;
  8439   005712  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8440   005714  0F06               	addlw	6
  8441   005716  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8442                           
  8443                           ;tft_st7735.c: 1105:                 break;
  8444   005718  EF01  F02C         	goto	l4848
  8445   00571C                     l464:
  8446                           
  8447                           ;tft_st7735.c: 1107:                 cursor_x = x_prev;
  8448   00571C  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8449   005720  6A59               	clrf	(_cursor_x+1)^0,c
  8450                           
  8451                           ;tft_st7735.c: 1108:                 cursor_y = y;
  8452   005722  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8453   005726  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8454   00572A                     
  8455                           ;tft_st7735.c: 1109:                 TFT_Print(*str++);
  8456   00572A  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8457   00572E  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8458   005732  6AF8               	clrf	tblptru,c
  8459   005734  0E07               	movlw	(high __ramtop+-1)
  8460   005736  64F7               	cpfsgt	tblptrh,c
  8461   005738  D003               	bra	u5527
  8462   00573A  0008               	tblrd		*
  8463   00573C  50F5               	movf	tablat,w,c
  8464   00573E  D005               	bra	u5520
  8465   005740                     u5527:
  8466   005740  CFF6 FFE9          	movff	tblptrl,fsr0l
  8467   005744  CFF7 FFEA          	movff	tblptrh,fsr0h
  8468   005748  50EF               	movf	indf0,w,c
  8469   00574A                     u5520:
  8470   00574A  EC1C  F030         	call	_TFT_Print
  8471   00574E  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8472   005750  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8473   005752                     
  8474                           ;tft_st7735.c: 1110:                 x_prev = x_prev + 12;
  8475   005752  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8476   005754  0F0C               	addlw	12
  8477   005756  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8478                           
  8479                           ;tft_st7735.c: 1111:                 break;
  8480   005758  EF01  F02C         	goto	l4848
  8481   00575C                     l465:
  8482                           
  8483                           ;tft_st7735.c: 1114:                 cursor_x = x_prev;
  8484   00575C  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8485   005760  6A59               	clrf	(_cursor_x+1)^0,c
  8486                           
  8487                           ;tft_st7735.c: 1115:                 cursor_y = y;
  8488   005762  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8489   005766  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8490   00576A                     
  8491                           ;tft_st7735.c: 1116:                 TFT_Print(*str++);
  8492   00576A  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8493   00576E  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8494   005772  6AF8               	clrf	tblptru,c
  8495   005774  0E07               	movlw	(high __ramtop+-1)
  8496   005776  64F7               	cpfsgt	tblptrh,c
  8497   005778  D003               	bra	u5537
  8498   00577A  0008               	tblrd		*
  8499   00577C  50F5               	movf	tablat,w,c
  8500   00577E  D005               	bra	u5530
  8501   005780                     u5537:
  8502   005780  CFF6 FFE9          	movff	tblptrl,fsr0l
  8503   005784  CFF7 FFEA          	movff	tblptrh,fsr0h
  8504   005788  50EF               	movf	indf0,w,c
  8505   00578A                     u5530:
  8506   00578A  EC1C  F030         	call	_TFT_Print
  8507   00578E  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8508   005790  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8509   005792                     
  8510                           ;tft_st7735.c: 1117:                 x_prev = x_prev + 18;
  8511   005792  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8512   005794  0F12               	addlw	18
  8513   005796  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8514                           
  8515                           ;tft_st7735.c: 1118:                 break;
  8516   005798  EF01  F02C         	goto	l4848
  8517   00579C                     l466:
  8518                           
  8519                           ;tft_st7735.c: 1121:                 cursor_x = x_prev;
  8520   00579C  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8521   0057A0  6A59               	clrf	(_cursor_x+1)^0,c
  8522                           
  8523                           ;tft_st7735.c: 1122:                 cursor_y = y;
  8524   0057A2  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8525   0057A6  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8526   0057AA                     
  8527                           ;tft_st7735.c: 1123:                 TFT_Print(*str++);
  8528   0057AA  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8529   0057AE  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8530   0057B2  6AF8               	clrf	tblptru,c
  8531   0057B4  0E07               	movlw	(high __ramtop+-1)
  8532   0057B6  64F7               	cpfsgt	tblptrh,c
  8533   0057B8  D003               	bra	u5547
  8534   0057BA  0008               	tblrd		*
  8535   0057BC  50F5               	movf	tablat,w,c
  8536   0057BE  D005               	bra	u5540
  8537   0057C0                     u5547:
  8538   0057C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  8539   0057C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  8540   0057C8  50EF               	movf	indf0,w,c
  8541   0057CA                     u5540:
  8542   0057CA  EC1C  F030         	call	_TFT_Print
  8543   0057CE  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8544   0057D0  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8545   0057D2                     
  8546                           ;tft_st7735.c: 1124:                 x_prev = x_prev + 24;
  8547   0057D2  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8548   0057D4  0F18               	addlw	24
  8549   0057D6  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8550                           
  8551                           ;tft_st7735.c: 1125:                 break;
  8552   0057D8  EF01  F02C         	goto	l4848
  8553   0057DC                     l4846:
  8554   0057DC  505E               	movf	_textsize^0,w,c
  8555                           
  8556                           ; Switch size 1, requested type "simple"
  8557                           ; Number of cases is 4, Range of values is 1 to 4
  8558                           ; switch strategies available:
  8559                           ; Name         Instructions Cycles
  8560                           ; simple_byte           13     7 (average)
  8561                           ;	Chosen strategy is simple_byte
  8562   0057DE  0A01               	xorlw	1	; case 1
  8563   0057E0  B4D8               	btfsc	status,2,c
  8564   0057E2  EF6E  F02B         	goto	l462
  8565   0057E6  0A03               	xorlw	3	; case 2
  8566   0057E8  B4D8               	btfsc	status,2,c
  8567   0057EA  EF8E  F02B         	goto	l464
  8568   0057EE  0A01               	xorlw	1	; case 3
  8569   0057F0  B4D8               	btfsc	status,2,c
  8570   0057F2  EFAE  F02B         	goto	l465
  8571   0057F6  0A07               	xorlw	7	; case 4
  8572   0057F8  B4D8               	btfsc	status,2,c
  8573   0057FA  EFCE  F02B         	goto	l466
  8574   0057FE  EF01  F02C         	goto	l4848
  8575   005802                     l4848:
  8576                           
  8577                           ;tft_st7735.c: 1096:     while(*str != '\0')
  8578   005802  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8579   005806  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8580   00580A  6AF8               	clrf	tblptru,c
  8581   00580C  0E07               	movlw	(high __ramtop+-1)
  8582   00580E  64F7               	cpfsgt	tblptrh,c
  8583   005810  D003               	bra	u5557
  8584   005812  0008               	tblrd		*
  8585   005814  50F5               	movf	tablat,w,c
  8586   005816  D005               	bra	u5550
  8587   005818                     u5557:
  8588   005818  CFF6 FFE9          	movff	tblptrl,fsr0l
  8589   00581C  CFF7 FFEA          	movff	tblptrh,fsr0h
  8590   005820  50EF               	movf	indf0,w,c
  8591   005822                     u5550:
  8592   005822  0900               	iorlw	0
  8593   005824  A4D8               	btfss	status,2,c
  8594   005826  EF17  F02C         	goto	u5561
  8595   00582A  EF19  F02C         	goto	u5560
  8596   00582E                     u5561:
  8597   00582E  EFEE  F02B         	goto	l4846
  8598   005832                     u5560:
  8599   005832  0012               	return		;funcret
  8600   005834                     __end_of_TFT_WriteString:
  8601                           	callstack 0
  8602                           
  8603 ;; *************** function _TFT_Print *****************
  8604 ;; Defined at:
  8605 ;;		line 991 in file "tft_st7735.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  c               1    wreg     unsigned char 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  c               1   30[COMRAM] unsigned char 
  8610 ;;  j               1   31[COMRAM] unsigned char 
  8611 ;;  line            1   29[COMRAM] unsigned char 
  8612 ;;  i               1   32[COMRAM] unsigned char 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      void 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8622 ;;      Params:         0       0       0       0       0       0       0       0       0
  8623 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8624 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8625 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8626 ;;Total ram usage:        9 bytes
  8627 ;; Hardware stack levels used: 1
  8628 ;; Hardware stack levels required when called: 4
  8629 ;; This function calls:
  8630 ;;		_TFT_DrawPixel
  8631 ;;		_TFT_DrawVLine
  8632 ;;		_TFT_FillRect
  8633 ;; This function is called by:
  8634 ;;		_TFT_WriteString
  8635 ;;		_TFT_DrawChar
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text26
  8640   006038                     __ptext26:
  8641                           	callstack 0
  8642   006038                     _TFT_Print:
  8643                           	callstack 25
  8644                           
  8645                           ;incstack = 0
  8646                           ;TFT_Print@c stored from wreg
  8647   006038  6E1F               	movwf	TFT_Print@c^0,c
  8648   00603A                     
  8649                           ;tft_st7735.c: 991: void TFT_Print(uint8_t c);tft_st7735.c: 992: {;tft_st7735.c: 993:   
      +                            if(c == ' ' && cursor_x == 0 && wrap)
  8650   00603A  0E20               	movlw	32
  8651   00603C  181F               	xorwf	TFT_Print@c^0,w,c
  8652   00603E  A4D8               	btfss	status,2,c
  8653   006040  EF24  F030         	goto	u5311
  8654   006044  EF26  F030         	goto	u5310
  8655   006048                     u5311:
  8656   006048  EF3A  F030         	goto	l4686
  8657   00604C                     u5310:
  8658   00604C  5058               	movf	_cursor_x^0,w,c
  8659   00604E  1059               	iorwf	(_cursor_x+1)^0,w,c
  8660   006050  A4D8               	btfss	status,2,c
  8661   006052  EF2D  F030         	goto	u5321
  8662   006056  EF2F  F030         	goto	u5320
  8663   00605A                     u5321:
  8664   00605A  EF3A  F030         	goto	l4686
  8665   00605E                     u5320:
  8666   00605E  0100               	movlb	0	; () banked
  8667   006060  51C0               	movf	_wrap& (0+255),w,b
  8668   006062  B4D8               	btfsc	status,2,c
  8669   006064  EF36  F030         	goto	u5331
  8670   006068  EF38  F030         	goto	u5330
  8671   00606C                     u5331:
  8672   00606C  EF3A  F030         	goto	l4686
  8673   006070                     u5330:
  8674   006070  EF6D  F031         	goto	l408
  8675   006074                     l4686:
  8676                           
  8677                           ;tft_st7735.c: 995:     for(uint8_t i = 0; i < 5; i++ ){
  8678   006074  0E00               	movlw	0
  8679   006076  6E21               	movwf	TFT_Print@i^0,c
  8680   006078                     l4692:
  8681                           
  8682                           ;tft_st7735.c: 996:         uint8_t line = font[c][i];
  8683   006078  501F               	movf	TFT_Print@c^0,w,c
  8684   00607A  0D05               	mullw	5
  8685   00607C  0EBB               	movlw	low _font
  8686   00607E  24F3               	addwf	243,w,c
  8687   006080  6E19               	movwf	??_TFT_Print^0,c
  8688   006082  0E79               	movlw	high _font
  8689   006084  20F4               	addwfc	prodh,w,c
  8690   006086  6E1A               	movwf	(??_TFT_Print+1)^0,c
  8691   006088  5021               	movf	TFT_Print@i^0,w,c
  8692   00608A  2619               	addwf	??_TFT_Print^0,f,c
  8693   00608C  0E00               	movlw	0
  8694   00608E  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8695   006090  C019  FFF6         	movff	??_TFT_Print,tblptrl
  8696   006094  C01A  FFF7         	movff	??_TFT_Print+1,tblptrh
  8697   006098                     	if	0	;tblptru may be non-zero
  8698   006098                     	endif
  8699   006098                     	if	0	;tblptru may be non-zero
  8700   006098                     	endif
  8701   006098  0008               	tblrd		*
  8702   00609A  CFF5 F01E          	movff	tablat,TFT_Print@line
  8703   00609E                     
  8704                           ;tft_st7735.c: 997:         for(uint8_t j = 0; j < 8; j++, line >>= 1){
  8705   00609E  0E00               	movlw	0
  8706   0060A0  6E20               	movwf	TFT_Print@j^0,c
  8707   0060A2                     l411:
  8708                           
  8709                           ;tft_st7735.c: 998:             if(line & 1) {
  8710   0060A2  A01E               	btfss	TFT_Print@line^0,0,c
  8711   0060A4  EF56  F030         	goto	u5341
  8712   0060A8  EF58  F030         	goto	u5340
  8713   0060AC                     u5341:
  8714   0060AC  EF82  F030         	goto	l4706
  8715   0060B0                     u5340:
  8716   0060B0                     
  8717                           ;tft_st7735.c: 999:                 if(textsize == 1)
  8718   0060B0  045E               	decf	_textsize^0,w,c
  8719   0060B2  A4D8               	btfss	status,2,c
  8720   0060B4  EF5E  F030         	goto	u5351
  8721   0060B8  EF60  F030         	goto	u5350
  8722   0060BC                     u5351:
  8723   0060BC  EF6D  F030         	goto	l4704
  8724   0060C0                     u5350:
  8725   0060C0                     
  8726                           ;tft_st7735.c: 1000:                     TFT_DrawPixel(cursor_x + i, cursor_y + j, textc
      +                          olor);
  8727   0060C0  5020               	movf	TFT_Print@j^0,w,c
  8728   0060C2  2456               	addwf	_cursor_y^0,w,c
  8729   0060C4  6E08               	movwf	TFT_DrawPixel@y^0,c
  8730   0060C6  C0BE  F009         	movff	_textcolor,TFT_DrawPixel@color
  8731   0060CA  C0BF  F00A         	movff	_textcolor+1,TFT_DrawPixel@color+1
  8732   0060CE  5021               	movf	TFT_Print@i^0,w,c
  8733   0060D0  2458               	addwf	_cursor_x^0,w,c
  8734   0060D2  EC1E  F025         	call	_TFT_DrawPixel
  8735   0060D6  EFB7  F030         	goto	l4714
  8736   0060DA                     l4704:
  8737                           
  8738                           ;tft_st7735.c: 1002:                     TFT_FillRect(cursor_x + i * textsize, cursor_y 
      +                          + j * textsize, textsize, textsize, textcolor);
  8739   0060DA  5020               	movf	TFT_Print@j^0,w,c
  8740   0060DC  025E               	mulwf	_textsize^0,c
  8741   0060DE  50F3               	movf	243,w,c
  8742   0060E0  2456               	addwf	_cursor_y^0,w,c
  8743   0060E2  6E08               	movwf	TFT_FillRect@y^0,c
  8744   0060E4  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8745   0060E8  C05E  F00A         	movff	_textsize,TFT_FillRect@h
  8746   0060EC  C0BE  F00B         	movff	_textcolor,TFT_FillRect@color
  8747   0060F0  C0BF  F00C         	movff	_textcolor+1,TFT_FillRect@color+1
  8748   0060F4  5021               	movf	TFT_Print@i^0,w,c
  8749   0060F6  025E               	mulwf	_textsize^0,c
  8750   0060F8  50F3               	movf	243,w,c
  8751   0060FA  2458               	addwf	_cursor_x^0,w,c
  8752   0060FC  EC0E  F02A         	call	_TFT_FillRect
  8753   006100  EFB7  F030         	goto	l4714
  8754   006104                     l4706:
  8755                           
  8756                           ;tft_st7735.c: 1005:                 if(textbgcolor != textcolor) {
  8757   006104  0100               	movlb	0	; () banked
  8758   006106  51BE               	movf	_textcolor& (0+255),w,b
  8759   006108  19BC               	xorwf	_textbgcolor& (0+255),w,b
  8760   00610A  E109               	bnz	u5360
  8761   00610C  51BF               	movf	(_textcolor+1)& (0+255),w,b
  8762   00610E  19BD               	xorwf	(_textbgcolor+1)& (0+255),w,b
  8763   006110  B4D8               	btfsc	status,2,c
  8764   006112  EF8D  F030         	goto	u5361
  8765   006116  EF8F  F030         	goto	u5360
  8766   00611A                     u5361:
  8767   00611A  EFB7  F030         	goto	l4714
  8768   00611E                     u5360:
  8769   00611E                     
  8770                           ; BSR set to: 0
  8771                           ;tft_st7735.c: 1006:                     if(textsize == 1)
  8772   00611E  045E               	decf	_textsize^0,w,c
  8773   006120  A4D8               	btfss	status,2,c
  8774   006122  EF95  F030         	goto	u5371
  8775   006126  EF97  F030         	goto	u5370
  8776   00612A                     u5371:
  8777   00612A  EFA4  F030         	goto	l4712
  8778   00612E                     u5370:
  8779   00612E                     
  8780                           ; BSR set to: 0
  8781                           ;tft_st7735.c: 1007:                         TFT_DrawPixel(cursor_x + i, cursor_y + j, t
      +                          extbgcolor);
  8782   00612E  5020               	movf	TFT_Print@j^0,w,c
  8783   006130  2456               	addwf	_cursor_y^0,w,c
  8784   006132  6E08               	movwf	TFT_DrawPixel@y^0,c
  8785   006134  C0BC  F009         	movff	_textbgcolor,TFT_DrawPixel@color
  8786   006138  C0BD  F00A         	movff	_textbgcolor+1,TFT_DrawPixel@color+1
  8787   00613C  5021               	movf	TFT_Print@i^0,w,c
  8788   00613E  2458               	addwf	_cursor_x^0,w,c
  8789   006140  EC1E  F025         	call	_TFT_DrawPixel
  8790   006144  EFB7  F030         	goto	l4714
  8791   006148                     l4712:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;tft_st7735.c: 1009:                         TFT_FillRect(cursor_x + i * textsize, curso
      +                          r_y + j * textsize, textsize, textsize, textbgcolor);
  8795   006148  5020               	movf	TFT_Print@j^0,w,c
  8796   00614A  025E               	mulwf	_textsize^0,c
  8797   00614C  50F3               	movf	243,w,c
  8798   00614E  2456               	addwf	_cursor_y^0,w,c
  8799   006150  6E08               	movwf	TFT_FillRect@y^0,c
  8800   006152  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8801   006156  C05E  F00A         	movff	_textsize,TFT_FillRect@h
  8802   00615A  C0BC  F00B         	movff	_textbgcolor,TFT_FillRect@color
  8803   00615E  C0BD  F00C         	movff	_textbgcolor+1,TFT_FillRect@color+1
  8804   006162  5021               	movf	TFT_Print@i^0,w,c
  8805   006164  025E               	mulwf	_textsize^0,c
  8806   006166  50F3               	movf	243,w,c
  8807   006168  2458               	addwf	_cursor_x^0,w,c
  8808   00616A  EC0E  F02A         	call	_TFT_FillRect
  8809   00616E                     l4714:
  8810                           
  8811                           ;tft_st7735.c: 1012:         }
  8812   00616E  2A20               	incf	TFT_Print@j^0,f,c
  8813   006170  90D8               	bcf	status,0,c
  8814   006172  321E               	rrcf	TFT_Print@line^0,f,c
  8815   006174  0E07               	movlw	7
  8816   006176  6420               	cpfsgt	TFT_Print@j^0,c
  8817   006178  EFC0  F030         	goto	u5381
  8818   00617C  EFC2  F030         	goto	u5380
  8819   006180                     u5381:
  8820   006180  EF51  F030         	goto	l411
  8821   006184                     u5380:
  8822   006184                     
  8823                           ;tft_st7735.c: 1013:     }
  8824   006184  2A21               	incf	TFT_Print@i^0,f,c
  8825   006186  0E04               	movlw	4
  8826   006188  6421               	cpfsgt	TFT_Print@i^0,c
  8827   00618A  EFC9  F030         	goto	u5391
  8828   00618E  EFCB  F030         	goto	u5390
  8829   006192                     u5391:
  8830   006192  EF3C  F030         	goto	l4692
  8831   006196                     u5390:
  8832   006196                     
  8833                           ;tft_st7735.c: 1014:     if(textbgcolor != textcolor){
  8834   006196  0100               	movlb	0	; () banked
  8835   006198  51BE               	movf	_textcolor& (0+255),w,b
  8836   00619A  19BC               	xorwf	_textbgcolor& (0+255),w,b
  8837   00619C  E109               	bnz	u5400
  8838   00619E  51BF               	movf	(_textcolor+1)& (0+255),w,b
  8839   0061A0  19BD               	xorwf	(_textbgcolor+1)& (0+255),w,b
  8840   0061A2  B4D8               	btfsc	status,2,c
  8841   0061A4  EFD6  F030         	goto	u5401
  8842   0061A8  EFD8  F030         	goto	u5400
  8843   0061AC                     u5401:
  8844   0061AC  EF00  F031         	goto	l4732
  8845   0061B0                     u5400:
  8846   0061B0                     
  8847                           ; BSR set to: 0
  8848                           ;tft_st7735.c: 1015:         if(textsize == 1) TFT_DrawVLine(cursor_x + 5, cursor_y, 8, 
      +                          textbgcolor);
  8849   0061B0  045E               	decf	_textsize^0,w,c
  8850   0061B2  A4D8               	btfss	status,2,c
  8851   0061B4  EFDE  F030         	goto	u5411
  8852   0061B8  EFE0  F030         	goto	u5410
  8853   0061BC                     u5411:
  8854   0061BC  EFEE  F030         	goto	l4730
  8855   0061C0                     u5410:
  8856   0061C0                     
  8857                           ; BSR set to: 0
  8858   0061C0  C056  F008         	movff	_cursor_y,TFT_DrawVLine@y
  8859   0061C4  0E08               	movlw	8
  8860   0061C6  6E09               	movwf	TFT_DrawVLine@h^0,c
  8861   0061C8  C0BC  F00A         	movff	_textbgcolor,TFT_DrawVLine@color
  8862   0061CC  C0BD  F00B         	movff	_textbgcolor+1,TFT_DrawVLine@color+1
  8863   0061D0  5058               	movf	_cursor_x^0,w,c
  8864   0061D2  0F05               	addlw	5
  8865   0061D4  ECBF  F027         	call	_TFT_DrawVLine
  8866   0061D8  EF00  F031         	goto	l4732
  8867   0061DC                     l4730:
  8868                           
  8869                           ; BSR set to: 0
  8870   0061DC  C056  F008         	movff	_cursor_y,TFT_FillRect@y
  8871   0061E0  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8872   0061E4  505E               	movf	_textsize^0,w,c
  8873   0061E6  0D08               	mullw	8
  8874   0061E8  CFF3 F00A          	movff	prodl,TFT_FillRect@h
  8875   0061EC  C0BC  F00B         	movff	_textbgcolor,TFT_FillRect@color
  8876   0061F0  C0BD  F00C         	movff	_textbgcolor+1,TFT_FillRect@color+1
  8877   0061F4  505E               	movf	_textsize^0,w,c
  8878   0061F6  0D05               	mullw	5
  8879   0061F8  50F3               	movf	243,w,c
  8880   0061FA  2458               	addwf	_cursor_x^0,w,c
  8881   0061FC  EC0E  F02A         	call	_TFT_FillRect
  8882   006200                     l4732:
  8883                           
  8884                           ;tft_st7735.c: 1018:     cursor_x += textsize * 6;
  8885   006200  505E               	movf	_textsize^0,w,c
  8886   006202  0D06               	mullw	6
  8887   006204  50F3               	movf	243,w,c
  8888   006206  2658               	addwf	_cursor_x^0,f,c
  8889   006208  50F4               	movf	244,w,c
  8890   00620A  2259               	addwfc	(_cursor_x+1)^0,f,c
  8891   00620C                     
  8892                           ;tft_st7735.c: 1019:     if(cursor_x > ((uint16_t)_width + textsize * 6))
  8893   00620C  505E               	movf	_textsize^0,w,c
  8894   00620E  0D06               	mullw	6
  8895   006210  CFF3 F019          	movff	prodl,??_TFT_Print
  8896   006214  CFF4 F01A          	movff	prodh,??_TFT_Print+1
  8897   006218  505D               	movf	__width^0,w,c
  8898   00621A  2619               	addwf	??_TFT_Print^0,f,c
  8899   00621C  0E00               	movlw	0
  8900   00621E  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8901   006220  5058               	movf	_cursor_x^0,w,c
  8902   006222  5C19               	subwf	??_TFT_Print^0,w,c
  8903   006224  5059               	movf	(_cursor_x+1)^0,w,c
  8904   006226  581A               	subwfb	(??_TFT_Print+1)^0,w,c
  8905   006228  B0D8               	btfsc	status,0,c
  8906   00622A  EF19  F031         	goto	u5421
  8907   00622E  EF1B  F031         	goto	u5420
  8908   006232                     u5421:
  8909   006232  EF1E  F031         	goto	l4738
  8910   006236                     u5420:
  8911   006236                     
  8912                           ;tft_st7735.c: 1020:         cursor_x = _width;
  8913   006236  C05D  F058         	movff	__width,_cursor_x
  8914   00623A  6A59               	clrf	(_cursor_x+1)^0,c
  8915   00623C                     l4738:
  8916                           
  8917                           ;tft_st7735.c: 1021:     if(wrap && (cursor_x + (textsize * 5)) > _width)
  8918   00623C  0100               	movlb	0	; () banked
  8919   00623E  51C0               	movf	_wrap& (0+255),w,b
  8920   006240  B4D8               	btfsc	status,2,c
  8921   006242  EF25  F031         	goto	u5431
  8922   006246  EF27  F031         	goto	u5430
  8923   00624A                     u5431:
  8924   00624A  EF6D  F031         	goto	l408
  8925   00624E                     u5430:
  8926   00624E                     
  8927                           ; BSR set to: 0
  8928   00624E  505E               	movf	_textsize^0,w,c
  8929   006250  0D05               	mullw	5
  8930   006252  CFF3 F019          	movff	prodl,??_TFT_Print
  8931   006256  CFF4 F01A          	movff	prodh,??_TFT_Print+1
  8932   00625A  5058               	movf	_cursor_x^0,w,c
  8933   00625C  2619               	addwf	??_TFT_Print^0,f,c
  8934   00625E  5059               	movf	(_cursor_x+1)^0,w,c
  8935   006260  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8936   006262  505D               	movf	__width^0,w,c
  8937   006264  6E1B               	movwf	(??_TFT_Print+2)^0,c
  8938   006266  6A1C               	clrf	(??_TFT_Print+3)^0,c
  8939   006268  5019               	movf	??_TFT_Print^0,w,c
  8940   00626A  5C1B               	subwf	(??_TFT_Print+2)^0,w,c
  8941   00626C  501C               	movf	(??_TFT_Print+3)^0,w,c
  8942   00626E  0A80               	xorlw	128
  8943   006270  6E1D               	movwf	(??_TFT_Print+4)^0,c
  8944   006272  501A               	movf	(??_TFT_Print+1)^0,w,c
  8945   006274  0A80               	xorlw	128
  8946   006276  581D               	subwfb	(??_TFT_Print+4)^0,w,c
  8947   006278  B0D8               	btfsc	status,0,c
  8948   00627A  EF41  F031         	goto	u5441
  8949   00627E  EF43  F031         	goto	u5440
  8950   006282                     u5441:
  8951   006282  EF6D  F031         	goto	l408
  8952   006286                     u5440:
  8953   006286                     
  8954                           ; BSR set to: 0
  8955                           ;tft_st7735.c: 1022:     {;tft_st7735.c: 1023:         cursor_x = 0;
  8956   006286  0E00               	movlw	0
  8957   006288  6E59               	movwf	(_cursor_x+1)^0,c
  8958   00628A  0E00               	movlw	0
  8959   00628C  6E58               	movwf	_cursor_x^0,c
  8960   00628E                     
  8961                           ; BSR set to: 0
  8962                           ;tft_st7735.c: 1024:         cursor_y += textsize * 8;
  8963   00628E  505E               	movf	_textsize^0,w,c
  8964   006290  0D08               	mullw	8
  8965   006292  50F3               	movf	243,w,c
  8966   006294  2656               	addwf	_cursor_y^0,f,c
  8967   006296  50F4               	movf	244,w,c
  8968   006298  2257               	addwfc	(_cursor_y+1)^0,f,c
  8969   00629A                     
  8970                           ; BSR set to: 0
  8971                           ;tft_st7735.c: 1025:         if(cursor_y > ((uint16_t)_height + textsize * 8))
  8972   00629A  505E               	movf	_textsize^0,w,c
  8973   00629C  6E19               	movwf	??_TFT_Print^0,c
  8974   00629E  6A1A               	clrf	(??_TFT_Print+1)^0,c
  8975   0062A0  90D8               	bcf	status,0,c
  8976   0062A2  3619               	rlcf	??_TFT_Print^0,f,c
  8977   0062A4  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8978   0062A6  90D8               	bcf	status,0,c
  8979   0062A8  3619               	rlcf	??_TFT_Print^0,f,c
  8980   0062AA  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8981   0062AC  90D8               	bcf	status,0,c
  8982   0062AE  3619               	rlcf	??_TFT_Print^0,f,c
  8983   0062B0  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8984   0062B2  505C               	movf	__height^0,w,c
  8985   0062B4  2419               	addwf	??_TFT_Print^0,w,c
  8986   0062B6  6E1B               	movwf	(??_TFT_Print+2)^0,c
  8987   0062B8  0E00               	movlw	0
  8988   0062BA  201A               	addwfc	(??_TFT_Print+1)^0,w,c
  8989   0062BC  6E1C               	movwf	(??_TFT_Print+3)^0,c
  8990   0062BE  5056               	movf	_cursor_y^0,w,c
  8991   0062C0  5C1B               	subwf	(??_TFT_Print+2)^0,w,c
  8992   0062C2  5057               	movf	(_cursor_y+1)^0,w,c
  8993   0062C4  581C               	subwfb	(??_TFT_Print+3)^0,w,c
  8994   0062C6  B0D8               	btfsc	status,0,c
  8995   0062C8  EF68  F031         	goto	u5451
  8996   0062CC  EF6A  F031         	goto	u5450
  8997   0062D0                     u5451:
  8998   0062D0  EF6D  F031         	goto	l408
  8999   0062D4                     u5450:
  9000   0062D4                     
  9001                           ; BSR set to: 0
  9002                           ;tft_st7735.c: 1026:             cursor_y = _height;
  9003   0062D4  C05C  F056         	movff	__height,_cursor_y
  9004   0062D8  6A57               	clrf	(_cursor_y+1)^0,c
  9005   0062DA                     l408:
  9006                           
  9007                           ; BSR set to: 0
  9008   0062DA  0012               	return		;funcret
  9009   0062DC                     __end_of_TFT_Print:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _TFT_DrawVLine *****************
  9013 ;; Defined at:
  9014 ;;		line 666 in file "tft_st7735.c"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;  x               1    wreg     unsigned char 
  9017 ;;  y               1    7[COMRAM] unsigned char 
  9018 ;;  h               1    8[COMRAM] unsigned char 
  9019 ;;  color           2    9[COMRAM] unsigned short 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  x               1   20[COMRAM] unsigned char 
  9022 ;;  lo              1   19[COMRAM] unsigned char 
  9023 ;;  hi              1   18[COMRAM] unsigned char 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, status,2, status,0, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9033 ;;      Params:         4       0       0       0       0       0       0       0       0
  9034 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9035 ;;      Temps:          7       0       0       0       0       0       0       0       0
  9036 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9037 ;;Total ram usage:       14 bytes
  9038 ;; Hardware stack levels used: 1
  9039 ;; Hardware stack levels required when called: 3
  9040 ;; This function calls:
  9041 ;;		_SPI_Write
  9042 ;;		_SetAddrWindow
  9043 ;; This function is called by:
  9044 ;;		_TFT_Print
  9045 ;;		_TFT_DrawLine
  9046 ;;		_TFT_FillCircle
  9047 ;;		_TFT_FillCircleHelper
  9048 ;;		_TFT_DrawRect
  9049 ;;		_TFT_DrawRoundRect
  9050 ;;		_TFT_CustomChar
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text27
  9055   004F7E                     __ptext27:
  9056                           	callstack 0
  9057   004F7E                     _TFT_DrawVLine:
  9058                           	callstack 25
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;incstack = 0
  9062                           ;TFT_DrawVLine@x stored from wreg
  9063   004F7E  6E15               	movwf	TFT_DrawVLine@x^0,c
  9064   004F80                     
  9065                           ;tft_st7735.c: 666: void TFT_DrawVLine(uint8_t x, uint8_t y, uint8_t h, uint16_t color);
      +                          tft_st7735.c: 667: {;tft_st7735.c: 668:     if((x < _width) && (y < _height) && h)
  9066   004F80  505D               	movf	__width^0,w,c
  9067   004F82  5C15               	subwf	TFT_DrawVLine@x^0,w,c
  9068   004F84  B0D8               	btfsc	status,0,c
  9069   004F86  EFC7  F027         	goto	u4891
  9070   004F8A  EFC9  F027         	goto	u4890
  9071   004F8E                     u4891:
  9072   004F8E  EF1C  F028         	goto	l272
  9073   004F92                     u4890:
  9074   004F92  505C               	movf	__height^0,w,c
  9075   004F94  5C08               	subwf	TFT_DrawVLine@y^0,w,c
  9076   004F96  B0D8               	btfsc	status,0,c
  9077   004F98  EFD0  F027         	goto	u4901
  9078   004F9C  EFD2  F027         	goto	u4900
  9079   004FA0                     u4901:
  9080   004FA0  EF1C  F028         	goto	l272
  9081   004FA4                     u4900:
  9082   004FA4  5009               	movf	TFT_DrawVLine@h^0,w,c
  9083   004FA6  B4D8               	btfsc	status,2,c
  9084   004FA8  EFD8  F027         	goto	u4911
  9085   004FAC  EFDA  F027         	goto	u4910
  9086   004FB0                     u4911:
  9087   004FB0  EF1C  F028         	goto	l272
  9088   004FB4                     u4910:
  9089   004FB4                     
  9090                           ;tft_st7735.c: 669:     {;tft_st7735.c: 670:         uint8_t hi = color >> 8, lo = color
      +                          ;
  9091   004FB4  500B               	movf	(TFT_DrawVLine@color+1)^0,w,c
  9092   004FB6  6E13               	movwf	TFT_DrawVLine@hi^0,c
  9093   004FB8  C00A  F014         	movff	TFT_DrawVLine@color,TFT_DrawVLine@lo
  9094   004FBC                     
  9095                           ;tft_st7735.c: 671:         if((y + h - 1) >= _height)
  9096   004FBC  505C               	movf	__height^0,w,c
  9097   004FBE  6E0C               	movwf	??_TFT_DrawVLine^0,c
  9098   004FC0  6A0D               	clrf	(??_TFT_DrawVLine+1)^0,c
  9099   004FC2  5009               	movf	TFT_DrawVLine@h^0,w,c
  9100   004FC4  C008  F00E         	movff	TFT_DrawVLine@y,??_TFT_DrawVLine+2
  9101   004FC8  6A0F               	clrf	(??_TFT_DrawVLine+3)^0,c
  9102   004FCA  260E               	addwf	(??_TFT_DrawVLine+2)^0,f,c
  9103   004FCC  0E00               	movlw	0
  9104   004FCE  220F               	addwfc	(??_TFT_DrawVLine+3)^0,f,c
  9105   004FD0  0EFF               	movlw	255
  9106   004FD2  240E               	addwf	(??_TFT_DrawVLine+2)^0,w,c
  9107   004FD4  6E10               	movwf	(??_TFT_DrawVLine+4)^0,c
  9108   004FD6  0EFF               	movlw	255
  9109   004FD8  200F               	addwfc	(??_TFT_DrawVLine+3)^0,w,c
  9110   004FDA  6E11               	movwf	(??_TFT_DrawVLine+5)^0,c
  9111   004FDC  500C               	movf	??_TFT_DrawVLine^0,w,c
  9112   004FDE  5C10               	subwf	(??_TFT_DrawVLine+4)^0,w,c
  9113   004FE0  5011               	movf	(??_TFT_DrawVLine+5)^0,w,c
  9114   004FE2  0A80               	xorlw	128
  9115   004FE4  6E12               	movwf	(??_TFT_DrawVLine+6)^0,c
  9116   004FE6  500D               	movf	(??_TFT_DrawVLine+1)^0,w,c
  9117   004FE8  0A80               	xorlw	128
  9118   004FEA  5812               	subwfb	(??_TFT_DrawVLine+6)^0,w,c
  9119   004FEC  A0D8               	btfss	status,0,c
  9120   004FEE  EFFB  F027         	goto	u4921
  9121   004FF2  EFFD  F027         	goto	u4920
  9122   004FF6                     u4921:
  9123   004FF6  EF00  F028         	goto	l4408
  9124   004FFA                     u4920:
  9125   004FFA                     
  9126                           ;tft_st7735.c: 672:             h = _height - y;
  9127   004FFA  5008               	movf	TFT_DrawVLine@y^0,w,c
  9128   004FFC  5C5C               	subwf	__height^0,w,c
  9129   004FFE  6E09               	movwf	TFT_DrawVLine@h^0,c
  9130   005000                     l4408:
  9131                           
  9132                           ;tft_st7735.c: 673:         LATDbits.LD0 = 0;
  9133   005000  908C               	bcf	140,0,c	;volatile
  9134   005002                     
  9135                           ;tft_st7735.c: 674:         SetAddrWindow(x, y, 1, h);
  9136   005002  C008  F003         	movff	TFT_DrawVLine@y,SetAddrWindow@y
  9137   005006  0E01               	movlw	1
  9138   005008  6E04               	movwf	SetAddrWindow@w^0,c
  9139   00500A  C009  F005         	movff	TFT_DrawVLine@h,SetAddrWindow@h
  9140   00500E  5015               	movf	TFT_DrawVLine@x^0,w,c
  9141   005010  EC96  F025         	call	_SetAddrWindow
  9142                           
  9143                           ;tft_st7735.c: 675:         while(h--){
  9144   005014  EF12  F028         	goto	l4414
  9145   005018                     l4412:
  9146                           
  9147                           ;tft_st7735.c: 676:             SPI_Write(hi);
  9148   005018  5013               	movf	TFT_DrawVLine@hi^0,w,c
  9149   00501A  EC23  F024         	call	_SPI_Write
  9150                           
  9151                           ;tft_st7735.c: 677:             SPI_Write(lo);
  9152   00501E  5014               	movf	TFT_DrawVLine@lo^0,w,c
  9153   005020  EC23  F024         	call	_SPI_Write
  9154   005024                     l4414:
  9155                           
  9156                           ;tft_st7735.c: 675:         while(h--){
  9157   005024  0609               	decf	TFT_DrawVLine@h^0,f,c
  9158   005026  2809               	incf	TFT_DrawVLine@h^0,w,c
  9159   005028  A4D8               	btfss	status,2,c
  9160   00502A  EF19  F028         	goto	u4931
  9161   00502E  EF1B  F028         	goto	u4930
  9162   005032                     u4931:
  9163   005032  EF0C  F028         	goto	l4412
  9164   005036                     u4930:
  9165   005036                     
  9166                           ;tft_st7735.c: 679:         LATDbits.LD0 = 1;
  9167   005036  808C               	bsf	140,0,c	;volatile
  9168   005038                     l272:
  9169   005038  0012               	return		;funcret
  9170   00503A                     __end_of_TFT_DrawVLine:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function _TFT_DrawPixel *****************
  9174 ;; Defined at:
  9175 ;;		line 521 in file "tft_st7735.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  x               1    wreg     unsigned char 
  9178 ;;  y               1    7[COMRAM] unsigned char 
  9179 ;;  color           2    8[COMRAM] unsigned short 
  9180 ;; Auto vars:     Size  Location     Type
  9181 ;;  x               1   10[COMRAM] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      void 
  9184 ;; Registers used:
  9185 ;;		wreg, status,2, status,0, cstack
  9186 ;; Tracked objects:
  9187 ;;		On entry : 0/0
  9188 ;;		On exit  : 0/0
  9189 ;;		Unchanged: 0/0
  9190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9191 ;;      Params:         3       0       0       0       0       0       0       0       0
  9192 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9194 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9195 ;;Total ram usage:        4 bytes
  9196 ;; Hardware stack levels used: 1
  9197 ;; Hardware stack levels required when called: 3
  9198 ;; This function calls:
  9199 ;;		_SPI_Write
  9200 ;;		_SetAddrWindow
  9201 ;; This function is called by:
  9202 ;;		_TFT_Print
  9203 ;;		_WriteLine
  9204 ;;		_TFT_DrawCircle
  9205 ;;		_TFT_DrawCircleHelper
  9206 ;;		_TFT_CustomChar
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           	psect	text28
  9211   004A3C                     __ptext28:
  9212                           	callstack 0
  9213   004A3C                     _TFT_DrawPixel:
  9214                           	callstack 25
  9215                           
  9216                           ;incstack = 0
  9217                           ;TFT_DrawPixel@x stored from wreg
  9218   004A3C  6E0B               	movwf	TFT_DrawPixel@x^0,c
  9219   004A3E                     
  9220                           ;tft_st7735.c: 521: void TFT_DrawPixel(uint8_t x, uint8_t y, uint16_t color);tft_st7735.
      +                          c: 522: {;tft_st7735.c: 523:     if((x < _width) && (y < _height))
  9221   004A3E  505D               	movf	__width^0,w,c
  9222   004A40  5C0B               	subwf	TFT_DrawPixel@x^0,w,c
  9223   004A42  B0D8               	btfsc	status,0,c
  9224   004A44  EF26  F025         	goto	u4871
  9225   004A48  EF28  F025         	goto	u4870
  9226   004A4C                     u4871:
  9227   004A4C  EF42  F025         	goto	l209
  9228   004A50                     u4870:
  9229   004A50  505C               	movf	__height^0,w,c
  9230   004A52  5C08               	subwf	TFT_DrawPixel@y^0,w,c
  9231   004A54  B0D8               	btfsc	status,0,c
  9232   004A56  EF2F  F025         	goto	u4881
  9233   004A5A  EF31  F025         	goto	u4880
  9234   004A5E                     u4881:
  9235   004A5E  EF42  F025         	goto	l209
  9236   004A62                     u4880:
  9237   004A62                     
  9238                           ;tft_st7735.c: 524:     {;tft_st7735.c: 525:         LATDbits.LD0 = 0;
  9239   004A62  908C               	bcf	140,0,c	;volatile
  9240   004A64                     
  9241                           ;tft_st7735.c: 526:         SetAddrWindow(x, y, 1, 1);
  9242   004A64  C008  F003         	movff	TFT_DrawPixel@y,SetAddrWindow@y
  9243   004A68  0E01               	movlw	1
  9244   004A6A  6E04               	movwf	SetAddrWindow@w^0,c
  9245   004A6C  0E01               	movlw	1
  9246   004A6E  6E05               	movwf	SetAddrWindow@h^0,c
  9247   004A70  500B               	movf	TFT_DrawPixel@x^0,w,c
  9248   004A72  EC96  F025         	call	_SetAddrWindow
  9249   004A76                     
  9250                           ;tft_st7735.c: 527:         SPI_Write(color >> 8);
  9251   004A76  500A               	movf	(TFT_DrawPixel@color+1)^0,w,c
  9252   004A78  EC23  F024         	call	_SPI_Write
  9253   004A7C                     
  9254                           ;tft_st7735.c: 528:         SPI_Write(color & 0xFF);
  9255   004A7C  5009               	movf	TFT_DrawPixel@color^0,w,c
  9256   004A7E  EC23  F024         	call	_SPI_Write
  9257   004A82                     
  9258                           ;tft_st7735.c: 529:         LATDbits.LD0 = 1;
  9259   004A82  808C               	bsf	140,0,c	;volatile
  9260   004A84                     l209:
  9261   004A84  0012               	return		;funcret
  9262   004A86                     __end_of_TFT_DrawPixel:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _TFT_ST7735_Init *****************
  9266 ;; Defined at:
  9267 ;;		line 486 in file "tft_st7735.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  options         1    wreg     unsigned char 
  9270 ;; Auto vars:     Size  Location     Type
  9271 ;;  options         1   13[COMRAM] unsigned char 
  9272 ;; Return value:  Size  Location     Type
  9273 ;;                  1    wreg      void 
  9274 ;; Registers used:
  9275 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9276 ;; Tracked objects:
  9277 ;;		On entry : 0/0
  9278 ;;		On exit  : 0/0
  9279 ;;		Unchanged: 0/0
  9280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9281 ;;      Params:         0       0       0       0       0       0       0       0       0
  9282 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9283 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9284 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9285 ;;Total ram usage:        2 bytes
  9286 ;; Hardware stack levels used: 1
  9287 ;; Hardware stack levels required when called: 3
  9288 ;; This function calls:
  9289 ;;		_DisplayInit
  9290 ;;		_SPI_Init_Master
  9291 ;;		_SPI_Write
  9292 ;;		_TFT_SetRotation
  9293 ;;		_WriteCommand
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text29
  9300   004E24                     __ptext29:
  9301                           	callstack 0
  9302   004E24                     _TFT_ST7735_Init:
  9303                           	callstack 27
  9304                           
  9305                           ;incstack = 0
  9306                           ;TFT_ST7735_Init@options stored from wreg
  9307   004E24  6E0E               	movwf	TFT_ST7735_Init@options^0,c
  9308   004E26                     
  9309                           ;tft_st7735.c: 486: void TFT_ST7735_Init(uint8_t options);tft_st7735.c: 487: {;tft_st773
      +                          5.c: 488:     TRISDbits.RD0 = 0;
  9310   004E26  9095               	bcf	149,0,c	;volatile
  9311                           
  9312                           ;tft_st7735.c: 489:     TRISDbits.RD2 = 0;
  9313   004E28  9495               	bcf	149,2,c	;volatile
  9314                           
  9315                           ;tft_st7735.c: 490:     TRISDbits.RD1 = 0;
  9316   004E2A  9295               	bcf	149,1,c	;volatile
  9317                           
  9318                           ;tft_st7735.c: 491:     LATDbits.LD1 = 0;
  9319   004E2C  928C               	bcf	140,1,c	;volatile
  9320   004E2E                     
  9321                           ;tft_st7735.c: 492:     _delay((unsigned long)((10)*(48000000/4000.0)));
  9322   004E2E  0E9C               	movlw	156
  9323   004E30  6E0D               	movwf	??_TFT_ST7735_Init^0,c
  9324   004E32  0ED7               	movlw	215
  9325   004E34                     u6737:
  9326   004E34  2EE8               	decfsz	wreg,f,c
  9327   004E36  D7FE               	bra	u6737
  9328   004E38  2E0D               	decfsz	??_TFT_ST7735_Init^0,f,c
  9329   004E3A  D7FC               	bra	u6737
  9330   004E3C  0000               	nop	
  9331   004E3E                     
  9332                           ;tft_st7735.c: 493:     LATDbits.LD1 = 1;
  9333   004E3E  828C               	bsf	140,1,c	;volatile
  9334   004E40                     
  9335                           ;tft_st7735.c: 494:     LATDbits.LD0 = 1;
  9336   004E40  808C               	bsf	140,0,c	;volatile
  9337   004E42                     
  9338                           ;tft_st7735.c: 495:     LATDbits.LD2 = 0;
  9339   004E42  948C               	bcf	140,2,c	;volatile
  9340   004E44                     
  9341                           ;tft_st7735.c: 496:     SPI_Init_Master(0x00, 0x02, 1);
  9342   004E44  0E02               	movlw	2
  9343   004E46  6E01               	movwf	SPI_Init_Master@modo^0,c
  9344   004E48  0E01               	movlw	1
  9345   004E4A  6E02               	movwf	SPI_Init_Master@smp^0,c
  9346   004E4C  0E00               	movlw	0
  9347   004E4E  EC27  F026         	call	_SPI_Init_Master
  9348   004E52                     
  9349                           ;tft_st7735.c: 497:     DisplayInit(Rcmd1);
  9350   004E52  0EBC               	movlw	low _Rcmd1
  9351   004E54  6E06               	movwf	DisplayInit@addr^0,c
  9352   004E56  0E7F               	movlw	high _Rcmd1
  9353   004E58  6E07               	movwf	(DisplayInit@addr+1)^0,c
  9354   004E5A  EC1D  F028         	call	_DisplayInit	;wreg free
  9355   004E5E                     
  9356                           ;tft_st7735.c: 498:     _height = 128;
  9357   004E5E  0E80               	movlw	128
  9358   004E60  6E5C               	movwf	__height^0,c
  9359   004E62                     
  9360                           ;tft_st7735.c: 499:     _width = 128;
  9361   004E62  0E80               	movlw	128
  9362   004E64  6E5D               	movwf	__width^0,c
  9363   004E66                     
  9364                           ;tft_st7735.c: 500:     _colstart = 0;
  9365   004E66  0E00               	movlw	0
  9366   004E68  6E5B               	movwf	__colstart^0,c
  9367   004E6A                     
  9368                           ;tft_st7735.c: 501:     _rowstart = 0;
  9369   004E6A  0E00               	movlw	0
  9370   004E6C  0100               	movlb	0	; () banked
  9371   004E6E  6FB9               	movwf	__rowstart& (0+255),b
  9372   004E70                     
  9373                           ; BSR set to: 0
  9374                           ;tft_st7735.c: 505:     if((options == 0x02) || (options == 0x04)){
  9375   004E70  0E02               	movlw	2
  9376   004E72  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9377   004E74  B4D8               	btfsc	status,2,c
  9378   004E76  EF3F  F027         	goto	u5471
  9379   004E7A  EF41  F027         	goto	u5470
  9380   004E7E                     u5471:
  9381   004E7E  EF4A  F027         	goto	l202
  9382   004E82                     u5470:
  9383   004E82                     
  9384                           ; BSR set to: 0
  9385   004E82  0E04               	movlw	4
  9386   004E84  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9387   004E86  A4D8               	btfss	status,2,c
  9388   004E88  EF48  F027         	goto	u5481
  9389   004E8C  EF4A  F027         	goto	u5480
  9390   004E90                     u5481:
  9391   004E90  EF52  F027         	goto	l4792
  9392   004E94                     u5480:
  9393   004E94                     l202:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;tft_st7735.c: 506:         LATDbits.LD0 = 0;
  9397   004E94  908C               	bcf	140,0,c	;volatile
  9398   004E96                     
  9399                           ; BSR set to: 0
  9400                           ;tft_st7735.c: 507:         WriteCommand(0x36);
  9401   004E96  0E36               	movlw	54
  9402   004E98  EC0E  F024         	call	_WriteCommand
  9403   004E9C                     
  9404                           ;tft_st7735.c: 508:         SPI_Write(0xC0);
  9405   004E9C  0EC0               	movlw	192
  9406   004E9E  EC23  F024         	call	_SPI_Write
  9407   004EA2                     
  9408                           ;tft_st7735.c: 509:         LATDbits.LD0 = 1;
  9409   004EA2  808C               	bsf	140,0,c	;volatile
  9410   004EA4                     l4792:
  9411                           
  9412                           ;tft_st7735.c: 511:     if(options == 0x05){
  9413   004EA4  0E05               	movlw	5
  9414   004EA6  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9415   004EA8  A4D8               	btfss	status,2,c
  9416   004EAA  EF59  F027         	goto	u5491
  9417   004EAE  EF5B  F027         	goto	u5490
  9418   004EB2                     u5491:
  9419   004EB2  EF62  F027         	goto	l203
  9420   004EB6                     u5490:
  9421   004EB6                     
  9422                           ;tft_st7735.c: 512:         tabcolor = 0x01;
  9423   004EB6  0E01               	movlw	1
  9424   004EB8  6E5A               	movwf	_tabcolor^0,c
  9425   004EBA                     
  9426                           ;tft_st7735.c: 513:         TFT_SetRotation(2);
  9427   004EBA  0E02               	movlw	2
  9428   004EBC  ECF4  F02C         	call	_TFT_SetRotation
  9429                           
  9430                           ;tft_st7735.c: 514:     }
  9431   004EC0  EF67  F027         	goto	l205
  9432   004EC4                     l203:
  9433                           
  9434                           ;tft_st7735.c: 516:         tabcolor = options;
  9435   004EC4  C00E  F05A         	movff	TFT_ST7735_Init@options,_tabcolor
  9436   004EC8                     
  9437                           ;tft_st7735.c: 517:         TFT_SetRotation(0);
  9438   004EC8  0E00               	movlw	0
  9439   004ECA  ECF4  F02C         	call	_TFT_SetRotation
  9440   004ECE                     l205:
  9441   004ECE  0012               	return		;funcret
  9442   004ED0                     __end_of_TFT_ST7735_Init:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function _TFT_SetRotation *****************
  9446 ;; Defined at:
  9447 ;;		line 550 in file "tft_st7735.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  m               1    wreg     unsigned char 
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;  m               1    2[COMRAM] unsigned char 
  9452 ;;  madctl          1    3[COMRAM] unsigned char 
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      void 
  9455 ;; Registers used:
  9456 ;;		wreg, status,2, status,0, cstack
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9462 ;;      Params:         0       0       0       0       0       0       0       0       0
  9463 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9464 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9465 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9466 ;;Total ram usage:        2 bytes
  9467 ;; Hardware stack levels used: 1
  9468 ;; Hardware stack levels required when called: 2
  9469 ;; This function calls:
  9470 ;;		_SPI_Write
  9471 ;;		_WriteCommand
  9472 ;; This function is called by:
  9473 ;;		_main
  9474 ;;		_TFT_ST7735_Init
  9475 ;; This function uses a non-reentrant model
  9476 ;;
  9477                           
  9478                           	psect	text30
  9479   0059E8                     __ptext30:
  9480                           	callstack 0
  9481   0059E8                     _TFT_SetRotation:
  9482                           	callstack 28
  9483                           
  9484                           ;incstack = 0
  9485                           ;TFT_SetRotation@m stored from wreg
  9486   0059E8  6E03               	movwf	TFT_SetRotation@m^0,c
  9487   0059EA                     
  9488                           ;tft_st7735.c: 550: void TFT_SetRotation(uint8_t m);tft_st7735.c: 551: {;tft_st7735.c: 5
      +                          52:     uint8_t madctl = 0;
  9489   0059EA  0E00               	movlw	0
  9490   0059EC  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9491   0059EE                     
  9492                           ;tft_st7735.c: 553:     rotation = m & 3;
  9493   0059EE  5003               	movf	TFT_SetRotation@m^0,w,c
  9494   0059F0  0B03               	andlw	3
  9495   0059F2  0100               	movlb	0	; () banked
  9496   0059F4  6FB8               	movwf	_rotation& (0+255),b
  9497                           
  9498                           ;tft_st7735.c: 555:     switch(rotation)
  9499   0059F6  EFD5  F02D         	goto	l4582
  9500   0059FA                     l4492:
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;tft_st7735.c: 558:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9504   0059FA  0E02               	movlw	2
  9505   0059FC  185A               	xorwf	_tabcolor^0,w,c
  9506   0059FE  B4D8               	btfsc	status,2,c
  9507   005A00  EF04  F02D         	goto	u4981
  9508   005A04  EF06  F02D         	goto	u4980
  9509   005A08                     u4981:
  9510   005A08  EF0F  F02D         	goto	l4496
  9511   005A0C                     u4980:
  9512   005A0C                     
  9513                           ; BSR set to: 0
  9514   005A0C  0E04               	movlw	4
  9515   005A0E  185A               	xorwf	_tabcolor^0,w,c
  9516   005A10  A4D8               	btfss	status,2,c
  9517   005A12  EF0D  F02D         	goto	u4991
  9518   005A16  EF0F  F02D         	goto	u4990
  9519   005A1A                     u4991:
  9520   005A1A  EF13  F02D         	goto	l4498
  9521   005A1E                     u4990:
  9522   005A1E                     l4496:
  9523                           
  9524                           ; BSR set to: 0
  9525                           ;tft_st7735.c: 559:                 madctl = 0x40 | 0x80 | 0x00;
  9526   005A1E  0EC0               	movlw	192
  9527   005A20  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9528                           
  9529                           ;tft_st7735.c: 560:             }else{
  9530   005A22  EF15  F02D         	goto	l4500
  9531   005A26                     l4498:
  9532                           
  9533                           ; BSR set to: 0
  9534                           ;tft_st7735.c: 561:                 madctl = 0x40 | 0x80 | 0x08;
  9535   005A26  0EC8               	movlw	200
  9536   005A28  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9537   005A2A                     l4500:
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;tft_st7735.c: 564:             if(tabcolor == 0x01){
  9541   005A2A  045A               	decf	_tabcolor^0,w,c
  9542   005A2C  A4D8               	btfss	status,2,c
  9543   005A2E  EF1B  F02D         	goto	u5001
  9544   005A32  EF1D  F02D         	goto	u5000
  9545   005A36                     u5001:
  9546   005A36  EF23  F02D         	goto	l4504
  9547   005A3A                     u5000:
  9548   005A3A                     l4502:
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;tft_st7735.c: 565:                 _height = 128;
  9552   005A3A  0E80               	movlw	128
  9553   005A3C  6E5C               	movwf	__height^0,c
  9554                           
  9555                           ;tft_st7735.c: 566:                 _width = 128;
  9556   005A3E  0E80               	movlw	128
  9557   005A40  6E5D               	movwf	__width^0,c
  9558                           
  9559                           ;tft_st7735.c: 567:             }else if (tabcolor == 0x04){
  9560   005A42  EF36  F02D         	goto	l4510
  9561   005A46                     l4504:
  9562                           
  9563                           ; BSR set to: 0
  9564   005A46  0E04               	movlw	4
  9565   005A48  185A               	xorwf	_tabcolor^0,w,c
  9566   005A4A  A4D8               	btfss	status,2,c
  9567   005A4C  EF2A  F02D         	goto	u5011
  9568   005A50  EF2C  F02D         	goto	u5010
  9569   005A54                     u5011:
  9570   005A54  EF32  F02D         	goto	l4508
  9571   005A58                     u5010:
  9572   005A58                     l4506:
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;tft_st7735.c: 568:                 _height = 160;
  9576   005A58  0EA0               	movlw	160
  9577   005A5A  6E5C               	movwf	__height^0,c
  9578                           
  9579                           ;tft_st7735.c: 569:                 _width = 80;
  9580   005A5C  0E50               	movlw	80
  9581   005A5E  6E5D               	movwf	__width^0,c
  9582                           
  9583                           ;tft_st7735.c: 570:             }else{
  9584   005A60  EF36  F02D         	goto	l4510
  9585   005A64                     l4508:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;tft_st7735.c: 571:                 _height = 160;
  9589   005A64  0EA0               	movlw	160
  9590   005A66  6E5C               	movwf	__height^0,c
  9591                           
  9592                           ;tft_st7735.c: 572:                 _width = 128;
  9593   005A68  0E80               	movlw	128
  9594   005A6A  6E5D               	movwf	__width^0,c
  9595   005A6C                     l4510:
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;tft_st7735.c: 574:             _xstart = _colstart;
  9599   005A6C  C05B  F0BB         	movff	__colstart,__xstart
  9600   005A70                     
  9601                           ; BSR set to: 0
  9602                           ;tft_st7735.c: 575:             _ystart = _rowstart;
  9603   005A70  C0B9  F0BA         	movff	__rowstart,__ystart
  9604                           
  9605                           ;tft_st7735.c: 576:             break;
  9606   005A74  EFE8  F02D         	goto	l225
  9607   005A78                     l4514:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;tft_st7735.c: 579:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9611   005A78  0E02               	movlw	2
  9612   005A7A  185A               	xorwf	_tabcolor^0,w,c
  9613   005A7C  B4D8               	btfsc	status,2,c
  9614   005A7E  EF43  F02D         	goto	u5021
  9615   005A82  EF45  F02D         	goto	u5020
  9616   005A86                     u5021:
  9617   005A86  EF4E  F02D         	goto	l4518
  9618   005A8A                     u5020:
  9619   005A8A                     
  9620                           ; BSR set to: 0
  9621   005A8A  0E04               	movlw	4
  9622   005A8C  185A               	xorwf	_tabcolor^0,w,c
  9623   005A8E  A4D8               	btfss	status,2,c
  9624   005A90  EF4C  F02D         	goto	u5031
  9625   005A94  EF4E  F02D         	goto	u5030
  9626   005A98                     u5031:
  9627   005A98  EF52  F02D         	goto	l4520
  9628   005A9C                     u5030:
  9629   005A9C                     l4518:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;tft_st7735.c: 580:                 madctl = 0x80 | 0x20 | 0x00;
  9633   005A9C  0EA0               	movlw	160
  9634   005A9E  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9635                           
  9636                           ;tft_st7735.c: 581:             }else{
  9637   005AA0  EF54  F02D         	goto	l4522
  9638   005AA4                     l4520:
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;tft_st7735.c: 582:                 madctl = 0x80 | 0x20 | 0x08;
  9642   005AA4  0EA8               	movlw	168
  9643   005AA6  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9644   005AA8                     l4522:
  9645                           
  9646                           ; BSR set to: 0
  9647                           ;tft_st7735.c: 585:             if(tabcolor == 0x01){
  9648   005AA8  045A               	decf	_tabcolor^0,w,c
  9649   005AAA  A4D8               	btfss	status,2,c
  9650   005AAC  EF5A  F02D         	goto	u5041
  9651   005AB0  EF5C  F02D         	goto	u5040
  9652   005AB4                     u5041:
  9653   005AB4  EF62  F02D         	goto	l4526
  9654   005AB8                     u5040:
  9655   005AB8                     l4524:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;tft_st7735.c: 586:                 _width = 128;
  9659   005AB8  0E80               	movlw	128
  9660   005ABA  6E5D               	movwf	__width^0,c
  9661                           
  9662                           ;tft_st7735.c: 587:                 _height = 128;
  9663   005ABC  0E80               	movlw	128
  9664   005ABE  6E5C               	movwf	__height^0,c
  9665                           
  9666                           ;tft_st7735.c: 588:             }else if (tabcolor == 0x04){
  9667   005AC0  EF75  F02D         	goto	l4532
  9668   005AC4                     l4526:
  9669                           
  9670                           ; BSR set to: 0
  9671   005AC4  0E04               	movlw	4
  9672   005AC6  185A               	xorwf	_tabcolor^0,w,c
  9673   005AC8  A4D8               	btfss	status,2,c
  9674   005ACA  EF69  F02D         	goto	u5051
  9675   005ACE  EF6B  F02D         	goto	u5050
  9676   005AD2                     u5051:
  9677   005AD2  EF71  F02D         	goto	l4530
  9678   005AD6                     u5050:
  9679   005AD6                     l4528:
  9680                           
  9681                           ; BSR set to: 0
  9682                           ;tft_st7735.c: 589:                 _width = 160;
  9683   005AD6  0EA0               	movlw	160
  9684   005AD8  6E5D               	movwf	__width^0,c
  9685                           
  9686                           ;tft_st7735.c: 590:                 _height = 80;
  9687   005ADA  0E50               	movlw	80
  9688   005ADC  6E5C               	movwf	__height^0,c
  9689                           
  9690                           ;tft_st7735.c: 591:             }else {
  9691   005ADE  EF75  F02D         	goto	l4532
  9692   005AE2                     l4530:
  9693                           
  9694                           ; BSR set to: 0
  9695                           ;tft_st7735.c: 592:                 _width = 160;
  9696   005AE2  0EA0               	movlw	160
  9697   005AE4  6E5D               	movwf	__width^0,c
  9698                           
  9699                           ;tft_st7735.c: 593:                 _height = 128;
  9700   005AE6  0E80               	movlw	128
  9701   005AE8  6E5C               	movwf	__height^0,c
  9702   005AEA                     l4532:
  9703                           
  9704                           ; BSR set to: 0
  9705                           ;tft_st7735.c: 595:             _ystart = _colstart;
  9706   005AEA  C05B  F0BA         	movff	__colstart,__ystart
  9707   005AEE                     
  9708                           ; BSR set to: 0
  9709                           ;tft_st7735.c: 596:             _xstart = _rowstart;
  9710   005AEE  C0B9  F0BB         	movff	__rowstart,__xstart
  9711                           
  9712                           ;tft_st7735.c: 597:             break;
  9713   005AF2  EFE8  F02D         	goto	l225
  9714   005AF6                     l4536:
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;tft_st7735.c: 600:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9718   005AF6  0E02               	movlw	2
  9719   005AF8  185A               	xorwf	_tabcolor^0,w,c
  9720   005AFA  B4D8               	btfsc	status,2,c
  9721   005AFC  EF82  F02D         	goto	u5061
  9722   005B00  EF84  F02D         	goto	u5060
  9723   005B04                     u5061:
  9724   005B04  EF8D  F02D         	goto	l4540
  9725   005B08                     u5060:
  9726   005B08                     
  9727                           ; BSR set to: 0
  9728   005B08  0E04               	movlw	4
  9729   005B0A  185A               	xorwf	_tabcolor^0,w,c
  9730   005B0C  A4D8               	btfss	status,2,c
  9731   005B0E  EF8B  F02D         	goto	u5071
  9732   005B12  EF8D  F02D         	goto	u5070
  9733   005B16                     u5071:
  9734   005B16  EF91  F02D         	goto	l4542
  9735   005B1A                     u5070:
  9736   005B1A                     l4540:
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;tft_st7735.c: 601:                 madctl = 0x00;
  9740   005B1A  0E00               	movlw	0
  9741   005B1C  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9742                           
  9743                           ;tft_st7735.c: 602:             }else{
  9744   005B1E  EF93  F02D         	goto	l4544
  9745   005B22                     l4542:
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;tft_st7735.c: 603:                 madctl = 0x08;
  9749   005B22  0E08               	movlw	8
  9750   005B24  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9751   005B26                     l4544:
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;tft_st7735.c: 606:             if(tabcolor == 0x01){
  9755   005B26  045A               	decf	_tabcolor^0,w,c
  9756   005B28  A4D8               	btfss	status,2,c
  9757   005B2A  EF99  F02D         	goto	u5081
  9758   005B2E  EF9B  F02D         	goto	u5080
  9759   005B32                     u5081:
  9760   005B32  EF9D  F02D         	goto	l4548
  9761   005B36                     u5080:
  9762   005B36  EF1D  F02D         	goto	l4502
  9763   005B3A                     l4548:
  9764                           
  9765                           ; BSR set to: 0
  9766   005B3A  0E04               	movlw	4
  9767   005B3C  185A               	xorwf	_tabcolor^0,w,c
  9768   005B3E  A4D8               	btfss	status,2,c
  9769   005B40  EFA4  F02D         	goto	u5091
  9770   005B44  EFA6  F02D         	goto	u5090
  9771   005B48                     u5091:
  9772   005B48  EF32  F02D         	goto	l4508
  9773   005B4C                     u5090:
  9774   005B4C  EF2C  F02D         	goto	l4506
  9775   005B50                     l4558:
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;tft_st7735.c: 621:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9779   005B50  0E02               	movlw	2
  9780   005B52  185A               	xorwf	_tabcolor^0,w,c
  9781   005B54  B4D8               	btfsc	status,2,c
  9782   005B56  EFAF  F02D         	goto	u5101
  9783   005B5A  EFB1  F02D         	goto	u5100
  9784   005B5E                     u5101:
  9785   005B5E  EFBA  F02D         	goto	l4562
  9786   005B62                     u5100:
  9787   005B62                     
  9788                           ; BSR set to: 0
  9789   005B62  0E04               	movlw	4
  9790   005B64  185A               	xorwf	_tabcolor^0,w,c
  9791   005B66  A4D8               	btfss	status,2,c
  9792   005B68  EFB8  F02D         	goto	u5111
  9793   005B6C  EFBA  F02D         	goto	u5110
  9794   005B70                     u5111:
  9795   005B70  EFBE  F02D         	goto	l4564
  9796   005B74                     u5110:
  9797   005B74                     l4562:
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;tft_st7735.c: 622:                 madctl = 0x40 | 0x20 | 0x00;
  9801   005B74  0E60               	movlw	96
  9802   005B76  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9803                           
  9804                           ;tft_st7735.c: 623:             }else{
  9805   005B78  EFC0  F02D         	goto	l4566
  9806   005B7C                     l4564:
  9807                           
  9808                           ; BSR set to: 0
  9809                           ;tft_st7735.c: 624:                 madctl = 0x40 | 0x20 | 0x08;
  9810   005B7C  0E68               	movlw	104
  9811   005B7E  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9812   005B80                     l4566:
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;tft_st7735.c: 627:             if(tabcolor == 0x01){
  9816   005B80  045A               	decf	_tabcolor^0,w,c
  9817   005B82  A4D8               	btfss	status,2,c
  9818   005B84  EFC6  F02D         	goto	u5121
  9819   005B88  EFC8  F02D         	goto	u5120
  9820   005B8C                     u5121:
  9821   005B8C  EFCA  F02D         	goto	l4570
  9822   005B90                     u5120:
  9823   005B90  EF5C  F02D         	goto	l4524
  9824   005B94                     l4570:
  9825                           
  9826                           ; BSR set to: 0
  9827   005B94  0E04               	movlw	4
  9828   005B96  185A               	xorwf	_tabcolor^0,w,c
  9829   005B98  A4D8               	btfss	status,2,c
  9830   005B9A  EFD1  F02D         	goto	u5131
  9831   005B9E  EFD3  F02D         	goto	u5130
  9832   005BA2                     u5131:
  9833   005BA2  EF71  F02D         	goto	l4530
  9834   005BA6                     u5130:
  9835   005BA6  EF6B  F02D         	goto	l4528
  9836   005BAA                     l4582:
  9837                           
  9838                           ; BSR set to: 0
  9839   005BAA  51B8               	movf	_rotation& (0+255),w,b
  9840                           
  9841                           ; Switch size 1, requested type "simple"
  9842                           ; Number of cases is 4, Range of values is 0 to 3
  9843                           ; switch strategies available:
  9844                           ; Name         Instructions Cycles
  9845                           ; simple_byte           13     7 (average)
  9846                           ;	Chosen strategy is simple_byte
  9847   005BAC  0A00               	xorlw	0	; case 0
  9848   005BAE  B4D8               	btfsc	status,2,c
  9849   005BB0  EFFD  F02C         	goto	l4492
  9850   005BB4  0A01               	xorlw	1	; case 1
  9851   005BB6  B4D8               	btfsc	status,2,c
  9852   005BB8  EF3C  F02D         	goto	l4514
  9853   005BBC  0A03               	xorlw	3	; case 2
  9854   005BBE  B4D8               	btfsc	status,2,c
  9855   005BC0  EF7B  F02D         	goto	l4536
  9856   005BC4  0A01               	xorlw	1	; case 3
  9857   005BC6  B4D8               	btfsc	status,2,c
  9858   005BC8  EFA8  F02D         	goto	l4558
  9859   005BCC  EFE8  F02D         	goto	l225
  9860   005BD0                     l225:
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;tft_st7735.c: 641:     LATDbits.LD0 = 0;
  9864   005BD0  908C               	bcf	140,0,c	;volatile
  9865   005BD2                     
  9866                           ; BSR set to: 0
  9867                           ;tft_st7735.c: 642:     WriteCommand(0x36);
  9868   005BD2  0E36               	movlw	54
  9869   005BD4  EC0E  F024         	call	_WriteCommand
  9870                           
  9871                           ;tft_st7735.c: 643:     SPI_Write(madctl);
  9872   005BD8  5004               	movf	TFT_SetRotation@madctl^0,w,c
  9873   005BDA  EC23  F024         	call	_SPI_Write
  9874   005BDE                     
  9875                           ;tft_st7735.c: 644:     LATDbits.LD0 = 1;
  9876   005BDE  808C               	bsf	140,0,c	;volatile
  9877   005BE0  0012               	return		;funcret
  9878   005BE2                     __end_of_TFT_SetRotation:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _SPI_Init_Master *****************
  9882 ;; Defined at:
  9883 ;;		line 11 in file "spi.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  reloj           1    wreg     unsigned char 
  9886 ;;  modo            1    0[COMRAM] unsigned char 
  9887 ;;  smp             1    1[COMRAM] unsigned char 
  9888 ;; Auto vars:     Size  Location     Type
  9889 ;;  reloj           1    2[COMRAM] unsigned char 
  9890 ;; Return value:  Size  Location     Type
  9891 ;;                  1    wreg      void 
  9892 ;; Registers used:
  9893 ;;		wreg, status,2, status,0
  9894 ;; Tracked objects:
  9895 ;;		On entry : 0/0
  9896 ;;		On exit  : 0/0
  9897 ;;		Unchanged: 0/0
  9898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9899 ;;      Params:         2       0       0       0       0       0       0       0       0
  9900 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9902 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9903 ;;Total ram usage:        3 bytes
  9904 ;; Hardware stack levels used: 1
  9905 ;; This function calls:
  9906 ;;		Nothing
  9907 ;; This function is called by:
  9908 ;;		_TFT_ST7735_Init
  9909 ;;		_TFT_InitB
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text31
  9914   004C4E                     __ptext31:
  9915                           	callstack 0
  9916   004C4E                     _SPI_Init_Master:
  9917                           	callstack 29
  9918                           
  9919                           ;incstack = 0
  9920                           ;SPI_Init_Master@reloj stored from wreg
  9921   004C4E  6E03               	movwf	SPI_Init_Master@reloj^0,c
  9922   004C50                     
  9923                           ;spi.c: 11: void SPI_Init_Master(char reloj, char modo, char smp);spi.c: 12: {;spi.c: 14
      +                          :     TRISBbits.RB0 = 1;
  9924   004C50  8093               	bsf	147,0,c	;volatile
  9925                           
  9926                           ;spi.c: 15:     TRISBbits.RB1 = 0;
  9927   004C52  9293               	bcf	147,1,c	;volatile
  9928                           
  9929                           ;spi.c: 16:     TRISCbits.RC7 = 0;
  9930   004C54  9E94               	bcf	148,7,c	;volatile
  9931   004C56                     
  9932                           ;spi.c: 17:     SSPCON1bits.SSPM = reloj;
  9933   004C56  50C6               	movf	198,w,c	;volatile
  9934   004C58  1803               	xorwf	SPI_Init_Master@reloj^0,w,c
  9935   004C5A  0BF0               	andlw	-16
  9936   004C5C  1803               	xorwf	SPI_Init_Master@reloj^0,w,c
  9937   004C5E  6EC6               	movwf	198,c	;volatile
  9938                           
  9939                           ;spi.c: 19:     if(modo == 0x01){
  9940   004C60  0401               	decf	SPI_Init_Master@modo^0,w,c
  9941   004C62  A4D8               	btfss	status,2,c
  9942   004C64  EF36  F026         	goto	u5141
  9943   004C68  EF38  F026         	goto	u5140
  9944   004C6C                     u5141:
  9945   004C6C  EF3C  F026         	goto	l4594
  9946   004C70                     u5140:
  9947   004C70                     
  9948                           ;spi.c: 20:         SSPCON1bits.CKP = 1;
  9949   004C70  88C6               	bsf	198,4,c	;volatile
  9950                           
  9951                           ;spi.c: 21:         SSPSTATbits.CKE = 1;
  9952   004C72  8CC7               	bsf	199,6,c	;volatile
  9953                           
  9954                           ;spi.c: 22:     }
  9955   004C74  EF61  F026         	goto	l83
  9956   004C78                     l4594:
  9957   004C78  0E02               	movlw	2
  9958   004C7A  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9959   004C7C  A4D8               	btfss	status,2,c
  9960   004C7E  EF43  F026         	goto	u5151
  9961   004C82  EF45  F026         	goto	u5150
  9962   004C86                     u5151:
  9963   004C86  EF49  F026         	goto	l4598
  9964   004C8A                     u5150:
  9965   004C8A                     
  9966                           ;spi.c: 24:         SSPCON1bits.CKP = 0;
  9967   004C8A  98C6               	bcf	198,4,c	;volatile
  9968                           
  9969                           ;spi.c: 25:         SSPSTATbits.CKE = 1;
  9970   004C8C  8CC7               	bsf	199,6,c	;volatile
  9971                           
  9972                           ;spi.c: 26:     }
  9973   004C8E  EF61  F026         	goto	l83
  9974   004C92                     l4598:
  9975   004C92  0E03               	movlw	3
  9976   004C94  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9977   004C96  A4D8               	btfss	status,2,c
  9978   004C98  EF50  F026         	goto	u5161
  9979   004C9C  EF52  F026         	goto	u5160
  9980   004CA0                     u5161:
  9981   004CA0  EF56  F026         	goto	l4602
  9982   004CA4                     u5160:
  9983   004CA4                     
  9984                           ;spi.c: 28:         SSPCON1bits.CKP = 1;
  9985   004CA4  88C6               	bsf	198,4,c	;volatile
  9986                           
  9987                           ;spi.c: 29:         SSPSTATbits.CKE = 0;
  9988   004CA6  9CC7               	bcf	199,6,c	;volatile
  9989                           
  9990                           ;spi.c: 30:     }
  9991   004CA8  EF61  F026         	goto	l83
  9992   004CAC                     l4602:
  9993   004CAC  0E04               	movlw	4
  9994   004CAE  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9995   004CB0  A4D8               	btfss	status,2,c
  9996   004CB2  EF5D  F026         	goto	u5171
  9997   004CB6  EF5F  F026         	goto	u5170
  9998   004CBA                     u5171:
  9999   004CBA  EF61  F026         	goto	l83
 10000   004CBE                     u5170:
 10001   004CBE                     
 10002                           ;spi.c: 32:         SSPCON1bits.CKP = 0;
 10003   004CBE  98C6               	bcf	198,4,c	;volatile
 10004                           
 10005                           ;spi.c: 33:         SSPSTATbits.CKE = 0;
 10006   004CC0  9CC7               	bcf	199,6,c	;volatile
 10007   004CC2                     l83:
 10008                           
 10009                           ;spi.c: 35:     SSPSTATbits.SMP = smp;
 10010   004CC2  B002               	btfsc	SPI_Init_Master@smp^0,0,c
 10011   004CC4  D002               	bra	u5185
 10012   004CC6  9EC7               	bcf	199,7,c	;volatile
 10013   004CC8  D001               	bra	u5186
 10014   004CCA                     u5185:
 10015   004CCA  8EC7               	bsf	199,7,c	;volatile
 10016   004CCC                     u5186:
 10017                           
 10018                           ;spi.c: 36:     SSPCON1bits.SSPEN = 1;
 10019   004CCC  8AC6               	bsf	198,5,c	;volatile
 10020   004CCE  0012               	return		;funcret
 10021   004CD0                     __end_of_SPI_Init_Master:
 10022                           	callstack 0
 10023                           
 10024 ;; *************** function _DisplayInit *****************
 10025 ;; Defined at:
 10026 ;;		line 444 in file "tft_st7735.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  addr            2    5[COMRAM] PTR const unsigned char 
 10029 ;;		 -> Rcmd1(32), Bcmd(103), 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  ms              2   10[COMRAM] unsigned short 
 10032 ;;  numArgs         1    9[COMRAM] unsigned char 
 10033 ;;  numCommands     1    8[COMRAM] unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10043 ;;      Params:         2       0       0       0       0       0       0       0       0
 10044 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10045 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10046 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10047 ;;Total ram usage:        7 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 2
 10050 ;; This function calls:
 10051 ;;		_Delay_ms
 10052 ;;		_SPI_Write
 10053 ;;		_WriteCommand
 10054 ;; This function is called by:
 10055 ;;		_TFT_ST7735_Init
 10056 ;;		_TFT_InitB
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           
 10060                           	psect	text32
 10061   00503A                     __ptext32:
 10062                           	callstack 0
 10063   00503A                     _DisplayInit:
 10064                           	callstack 27
 10065   00503A                     
 10066                           ;tft_st7735.c: 444: void DisplayInit(const uint8_t *addr);tft_st7735.c: 445: {;tft_st773
      +                          5.c: 446:     uint8_t numCommands, numArgs;;tft_st7735.c: 447:     uint16_t ms;;tft_st77
      +                          35.c: 449:     LATDbits.LD0 = 0;
 10067   00503A  908C               	bcf	140,0,c	;volatile
 10068   00503C                     
 10069                           ;tft_st7735.c: 450:     numCommands = *addr++;
 10070   00503C  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10071   005040  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10072   005044                     	if	0	;tblptru may be non-zero
 10073   005044                     	endif
 10074   005044                     	if	0	;tblptru may be non-zero
 10075   005044                     	endif
 10076   005044  0008               	tblrd		*
 10077   005046  CFF5 F009          	movff	tablat,DisplayInit@numCommands
 10078   00504A  4A06               	infsnz	DisplayInit@addr^0,f,c
 10079   00504C  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10080                           
 10081                           ;tft_st7735.c: 451:     while(numCommands--)
 10082   00504E  EF7F  F028         	goto	l4642
 10083   005052                     l4612:
 10084                           
 10085                           ;tft_st7735.c: 452:     {;tft_st7735.c: 453:         WriteCommand(*addr++);
 10086   005052  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10087   005056  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10088   00505A                     	if	0	;tblptru may be non-zero
 10089   00505A                     	endif
 10090   00505A                     	if	0	;tblptru may be non-zero
 10091   00505A                     	endif
 10092   00505A  0008               	tblrd		*
 10093   00505C  50F5               	movf	tablat,w,c
 10094   00505E  EC0E  F024         	call	_WriteCommand
 10095   005062  4A06               	infsnz	DisplayInit@addr^0,f,c
 10096   005064  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10097   005066                     
 10098                           ;tft_st7735.c: 454:         numArgs = *addr++;
 10099   005066  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10100   00506A  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10101   00506E                     	if	0	;tblptru may be non-zero
 10102   00506E                     	endif
 10103   00506E                     	if	0	;tblptru may be non-zero
 10104   00506E                     	endif
 10105   00506E  0008               	tblrd		*
 10106   005070  CFF5 F00A          	movff	tablat,DisplayInit@numArgs
 10107   005074  4A06               	infsnz	DisplayInit@addr^0,f,c
 10108   005076  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10109   005078                     
 10110                           ;tft_st7735.c: 455:         ms = numArgs & 0x80;
 10111   005078  C00A  F008         	movff	DisplayInit@numArgs,??_DisplayInit
 10112   00507C  0E80               	movlw	128
 10113   00507E  1608               	andwf	??_DisplayInit^0,f,c
 10114   005080  5008               	movf	??_DisplayInit^0,w,c
 10115   005082  6E0B               	movwf	DisplayInit@ms^0,c
 10116   005084  6A0C               	clrf	(DisplayInit@ms+1)^0,c
 10117   005086                     
 10118                           ;tft_st7735.c: 456:         numArgs &= ~0x80;
 10119   005086  9E0A               	bcf	DisplayInit@numArgs^0,7,c
 10120                           
 10121                           ;tft_st7735.c: 457:         while(numArgs--)
 10122   005088  EF50  F028         	goto	l4628
 10123   00508C                     l4624:
 10124                           
 10125                           ;tft_st7735.c: 458:         {;tft_st7735.c: 459:             SPI_Write(*addr++);
 10126   00508C  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10127   005090  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10128   005094                     	if	0	;tblptru may be non-zero
 10129   005094                     	endif
 10130   005094                     	if	0	;tblptru may be non-zero
 10131   005094                     	endif
 10132   005094  0008               	tblrd		*
 10133   005096  50F5               	movf	tablat,w,c
 10134   005098  EC23  F024         	call	_SPI_Write
 10135   00509C  4A06               	infsnz	DisplayInit@addr^0,f,c
 10136   00509E  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10137   0050A0                     l4628:
 10138                           
 10139                           ;tft_st7735.c: 457:         while(numArgs--)
 10140   0050A0  060A               	decf	DisplayInit@numArgs^0,f,c
 10141   0050A2  280A               	incf	DisplayInit@numArgs^0,w,c
 10142   0050A4  A4D8               	btfss	status,2,c
 10143   0050A6  EF57  F028         	goto	u5191
 10144   0050AA  EF59  F028         	goto	u5190
 10145   0050AE                     u5191:
 10146   0050AE  EF46  F028         	goto	l4624
 10147   0050B2                     u5190:
 10148   0050B2                     
 10149                           ;tft_st7735.c: 461:         if(ms)
 10150   0050B2  500B               	movf	DisplayInit@ms^0,w,c
 10151   0050B4  100C               	iorwf	(DisplayInit@ms+1)^0,w,c
 10152   0050B6  B4D8               	btfsc	status,2,c
 10153   0050B8  EF60  F028         	goto	u5201
 10154   0050BC  EF62  F028         	goto	u5200
 10155   0050C0                     u5201:
 10156   0050C0  EF7F  F028         	goto	l4642
 10157   0050C4                     u5200:
 10158   0050C4                     
 10159                           ;tft_st7735.c: 462:         {;tft_st7735.c: 463:             ms = *addr++;
 10160   0050C4  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10161   0050C8  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10162   0050CC                     	if	0	;tblptru may be non-zero
 10163   0050CC                     	endif
 10164   0050CC                     	if	0	;tblptru may be non-zero
 10165   0050CC                     	endif
 10166   0050CC  0008               	tblrd		*
 10167   0050CE  50F5               	movf	tablat,w,c
 10168   0050D0  6E0B               	movwf	DisplayInit@ms^0,c
 10169   0050D2  6A0C               	clrf	(DisplayInit@ms+1)^0,c
 10170   0050D4  4A06               	infsnz	DisplayInit@addr^0,f,c
 10171   0050D6  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10172   0050D8                     
 10173                           ;tft_st7735.c: 464:             if(ms == 255) ms = 500;
 10174   0050D8  280B               	incf	DisplayInit@ms^0,w,c
 10175   0050DA  100C               	iorwf	(DisplayInit@ms+1)^0,w,c
 10176   0050DC  A4D8               	btfss	status,2,c
 10177   0050DE  EF73  F028         	goto	u5211
 10178   0050E2  EF75  F028         	goto	u5210
 10179   0050E6                     u5211:
 10180   0050E6  EF79  F028         	goto	l4640
 10181   0050EA                     u5210:
 10182   0050EA  0E01               	movlw	1
 10183   0050EC  6E0C               	movwf	(DisplayInit@ms+1)^0,c
 10184   0050EE  0EF4               	movlw	244
 10185   0050F0  6E0B               	movwf	DisplayInit@ms^0,c
 10186   0050F2                     l4640:
 10187                           
 10188                           ;tft_st7735.c: 465:             Delay_ms(ms);
 10189   0050F2  C00B  F001         	movff	DisplayInit@ms,Delay_ms@d
 10190   0050F6  C00C  F002         	movff	DisplayInit@ms+1,Delay_ms@d+1
 10191   0050FA  EC49  F024         	call	_Delay_ms	;wreg free
 10192   0050FE                     l4642:
 10193                           
 10194                           ;tft_st7735.c: 451:     while(numCommands--)
 10195   0050FE  0609               	decf	DisplayInit@numCommands^0,f,c
 10196   005100  2809               	incf	DisplayInit@numCommands^0,w,c
 10197   005102  A4D8               	btfss	status,2,c
 10198   005104  EF86  F028         	goto	u5221
 10199   005108  EF88  F028         	goto	u5220
 10200   00510C                     u5221:
 10201   00510C  EF29  F028         	goto	l4612
 10202   005110                     u5220:
 10203   005110                     
 10204                           ;tft_st7735.c: 468:     LATDbits.LD0 = 1;
 10205   005110  808C               	bsf	140,0,c	;volatile
 10206   005112  0012               	return		;funcret
 10207   005114                     __end_of_DisplayInit:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _Delay_ms *****************
 10211 ;; Defined at:
 10212 ;;		line 726 in file "tft_st7735.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;  d               2    0[COMRAM] unsigned int 
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;  i               2    3[COMRAM] unsigned int 
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, status,2, status,0
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10226 ;;      Params:         2       0       0       0       0       0       0       0       0
 10227 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10228 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10229 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10230 ;;Total ram usage:        5 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_DisplayInit
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text33
 10240   004892                     __ptext33:
 10241                           	callstack 0
 10242   004892                     _Delay_ms:
 10243                           	callstack 28
 10244   004892                     
 10245                           ;tft_st7735.c: 726: void Delay_ms(unsigned int d);tft_st7735.c: 727: {;tft_st7735.c: 728
      +                          :     for(unsigned int i=0; i<d; i++)
 10246   004892  0E00               	movlw	0
 10247   004894  6E05               	movwf	(Delay_ms@i+1)^0,c
 10248   004896  0E00               	movlw	0
 10249   004898  6E04               	movwf	Delay_ms@i^0,c
 10250   00489A  EF59  F024         	goto	l300
 10251   00489E                     l4376:
 10252                           
 10253                           ;tft_st7735.c: 729:     {;tft_st7735.c: 730:         _delay((unsigned long)((1)*(4800000
      +                          0/4000.0)));
 10254   00489E  0E10               	movlw	16
 10255   0048A0  6E03               	movwf	??_Delay_ms^0,c
 10256   0048A2  0E94               	movlw	148
 10257   0048A4                     u6747:
 10258   0048A4  2EE8               	decfsz	wreg,f,c
 10259   0048A6  D7FE               	bra	u6747
 10260   0048A8  2E03               	decfsz	??_Delay_ms^0,f,c
 10261   0048AA  D7FC               	bra	u6747
 10262   0048AC  D000               	nop2	
 10263   0048AE                     
 10264                           ;tft_st7735.c: 731:     }
 10265   0048AE  4A04               	infsnz	Delay_ms@i^0,f,c
 10266   0048B0  2A05               	incf	(Delay_ms@i+1)^0,f,c
 10267   0048B2                     l300:
 10268   0048B2  5001               	movf	Delay_ms@d^0,w,c
 10269   0048B4  5C04               	subwf	Delay_ms@i^0,w,c
 10270   0048B6  5002               	movf	(Delay_ms@d+1)^0,w,c
 10271   0048B8  5805               	subwfb	(Delay_ms@i+1)^0,w,c
 10272   0048BA  A0D8               	btfss	status,0,c
 10273   0048BC  EF62  F024         	goto	u4861
 10274   0048C0  EF64  F024         	goto	u4860
 10275   0048C4                     u4861:
 10276   0048C4  EF4F  F024         	goto	l4376
 10277   0048C8                     u4860:
 10278   0048C8  0012               	return		;funcret
 10279   0048CA                     __end_of_Delay_ms:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _TFT_FillScreen *****************
 10283 ;; Defined at:
 10284 ;;		line 705 in file "tft_st7735.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  color           2   24[COMRAM] unsigned short 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10298 ;;      Params:         2       0       0       0       0       0       0       0       0
 10299 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10301 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10302 ;;Total ram usage:        2 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; Hardware stack levels required when called: 4
 10305 ;; This function calls:
 10306 ;;		_TFT_FillRect
 10307 ;; This function is called by:
 10308 ;;		_main
 10309 ;; This function uses a non-reentrant model
 10310 ;;
 10311                           
 10312                           	psect	text34
 10313   00482A                     __ptext34:
 10314                           	callstack 0
 10315   00482A                     _TFT_FillScreen:
 10316                           	callstack 26
 10317   00482A                     
 10318                           ;tft_st7735.c: 705: void TFT_FillScreen(uint16_t color);tft_st7735.c: 706: {;tft_st7735.
      +                          c: 707:     TFT_FillRect(0, 0, _width, _height, color);
 10319   00482A  0E00               	movlw	0
 10320   00482C  6E08               	movwf	TFT_FillRect@y^0,c
 10321   00482E  C05D  F009         	movff	__width,TFT_FillRect@w
 10322   004832  C05C  F00A         	movff	__height,TFT_FillRect@h
 10323   004836  C019  F00B         	movff	TFT_FillScreen@color,TFT_FillRect@color
 10324   00483A  C01A  F00C         	movff	TFT_FillScreen@color+1,TFT_FillRect@color+1
 10325   00483E  0E00               	movlw	0
 10326   004840  EC0E  F02A         	call	_TFT_FillRect
 10327   004844  0012               	return		;funcret
 10328   004846                     __end_of_TFT_FillScreen:
 10329                           	callstack 0
 10330                           
 10331 ;; *************** function _TFT_FillRect *****************
 10332 ;; Defined at:
 10333 ;;		line 683 in file "tft_st7735.c"
 10334 ;; Parameters:    Size  Location     Type
 10335 ;;  x               1    wreg     unsigned char 
 10336 ;;  y               1    7[COMRAM] unsigned char 
 10337 ;;  w               1    8[COMRAM] unsigned char 
 10338 ;;  h               1    9[COMRAM] unsigned char 
 10339 ;;  color           2   10[COMRAM] unsigned short 
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;  x               1   23[COMRAM] unsigned char 
 10342 ;;  px              2   19[COMRAM] unsigned short 
 10343 ;;  lo              1   22[COMRAM] unsigned char 
 10344 ;;  hi              1   21[COMRAM] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  1    wreg      void 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10354 ;;      Params:         5       0       0       0       0       0       0       0       0
 10355 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10356 ;;      Temps:          7       0       0       0       0       0       0       0       0
 10357 ;;      Totals:        17       0       0       0       0       0       0       0       0
 10358 ;;Total ram usage:       17 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 3
 10361 ;; This function calls:
 10362 ;;		_SPI_Write
 10363 ;;		_SetAddrWindow
 10364 ;; This function is called by:
 10365 ;;		_main
 10366 ;;		_TFT_FillScreen
 10367 ;;		_TFT_Print
 10368 ;;		_TFT_FillRoundRect
 10369 ;;		_TFT_CustomChar
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           	psect	text35
 10374   00541C                     __ptext35:
 10375                           	callstack 0
 10376   00541C                     _TFT_FillRect:
 10377                           	callstack 25
 10378                           
 10379                           ;incstack = 0
 10380                           ;TFT_FillRect@x stored from wreg
 10381   00541C  6E18               	movwf	TFT_FillRect@x^0,c
 10382   00541E                     
 10383                           ;tft_st7735.c: 683: void TFT_FillRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint16
      +                          _t color);tft_st7735.c: 684: {;tft_st7735.c: 685:     if(w && h)
 10384   00541E  5009               	movf	TFT_FillRect@w^0,w,c
 10385   005420  B4D8               	btfsc	status,2,c
 10386   005422  EF15  F02A         	goto	u4791
 10387   005426  EF17  F02A         	goto	u4790
 10388   00542A                     u4791:
 10389   00542A  EFA1  F02A         	goto	l279
 10390   00542E                     u4790:
 10391   00542E  500A               	movf	TFT_FillRect@h^0,w,c
 10392   005430  B4D8               	btfsc	status,2,c
 10393   005432  EF1D  F02A         	goto	u4801
 10394   005436  EF1F  F02A         	goto	u4800
 10395   00543A                     u4801:
 10396   00543A  EFA1  F02A         	goto	l279
 10397   00543E                     u4800:
 10398   00543E                     
 10399                           ;tft_st7735.c: 686:     {;tft_st7735.c: 687:         uint8_t hi = color >> 8, lo = color
      +                          ;
 10400   00543E  500C               	movf	(TFT_FillRect@color+1)^0,w,c
 10401   005440  6E16               	movwf	TFT_FillRect@hi^0,c
 10402   005442  C00B  F017         	movff	TFT_FillRect@color,TFT_FillRect@lo
 10403   005446                     
 10404                           ;tft_st7735.c: 688:         if((x >= _width) || (y >= _height))
 10405   005446  505D               	movf	__width^0,w,c
 10406   005448  5C18               	subwf	TFT_FillRect@x^0,w,c
 10407   00544A  B0D8               	btfsc	status,0,c
 10408   00544C  EF2A  F02A         	goto	u4811
 10409   005450  EF2C  F02A         	goto	u4810
 10410   005454                     u4811:
 10411   005454  EFA1  F02A         	goto	l279
 10412   005458                     u4810:
 10413   005458  505C               	movf	__height^0,w,c
 10414   00545A  5C08               	subwf	TFT_FillRect@y^0,w,c
 10415   00545C  A0D8               	btfss	status,0,c
 10416   00545E  EF33  F02A         	goto	u4821
 10417   005462  EF35  F02A         	goto	u4820
 10418   005466                     u4821:
 10419   005466  EF37  F02A         	goto	l4358
 10420   00546A                     u4820:
 10421   00546A  EFA1  F02A         	goto	l279
 10422   00546E                     l4358:
 10423                           
 10424                           ;tft_st7735.c: 690:         if((x + w - 1) >= _width)
 10425   00546E  505D               	movf	__width^0,w,c
 10426   005470  6E0D               	movwf	??_TFT_FillRect^0,c
 10427   005472  6A0E               	clrf	(??_TFT_FillRect+1)^0,c
 10428   005474  5009               	movf	TFT_FillRect@w^0,w,c
 10429   005476  C018  F00F         	movff	TFT_FillRect@x,??_TFT_FillRect+2
 10430   00547A  6A10               	clrf	(??_TFT_FillRect+3)^0,c
 10431   00547C  260F               	addwf	(??_TFT_FillRect+2)^0,f,c
 10432   00547E  0E00               	movlw	0
 10433   005480  2210               	addwfc	(??_TFT_FillRect+3)^0,f,c
 10434   005482  0EFF               	movlw	255
 10435   005484  240F               	addwf	(??_TFT_FillRect+2)^0,w,c
 10436   005486  6E11               	movwf	(??_TFT_FillRect+4)^0,c
 10437   005488  0EFF               	movlw	255
 10438   00548A  2010               	addwfc	(??_TFT_FillRect+3)^0,w,c
 10439   00548C  6E12               	movwf	(??_TFT_FillRect+5)^0,c
 10440   00548E  500D               	movf	??_TFT_FillRect^0,w,c
 10441   005490  5C11               	subwf	(??_TFT_FillRect+4)^0,w,c
 10442   005492  5012               	movf	(??_TFT_FillRect+5)^0,w,c
 10443   005494  0A80               	xorlw	128
 10444   005496  6E13               	movwf	(??_TFT_FillRect+6)^0,c
 10445   005498  500E               	movf	(??_TFT_FillRect+1)^0,w,c
 10446   00549A  0A80               	xorlw	128
 10447   00549C  5813               	subwfb	(??_TFT_FillRect+6)^0,w,c
 10448   00549E  A0D8               	btfss	status,0,c
 10449   0054A0  EF54  F02A         	goto	u4831
 10450   0054A4  EF56  F02A         	goto	u4830
 10451   0054A8                     u4831:
 10452   0054A8  EF59  F02A         	goto	l280
 10453   0054AC                     u4830:
 10454   0054AC                     
 10455                           ;tft_st7735.c: 691:             w = _width - x;
 10456   0054AC  5018               	movf	TFT_FillRect@x^0,w,c
 10457   0054AE  5C5D               	subwf	__width^0,w,c
 10458   0054B0  6E09               	movwf	TFT_FillRect@w^0,c
 10459   0054B2                     l280:
 10460                           
 10461                           ;tft_st7735.c: 692:         if((y + h - 1) >= _height)
 10462   0054B2  505C               	movf	__height^0,w,c
 10463   0054B4  6E0D               	movwf	??_TFT_FillRect^0,c
 10464   0054B6  6A0E               	clrf	(??_TFT_FillRect+1)^0,c
 10465   0054B8  500A               	movf	TFT_FillRect@h^0,w,c
 10466   0054BA  C008  F00F         	movff	TFT_FillRect@y,??_TFT_FillRect+2
 10467   0054BE  6A10               	clrf	(??_TFT_FillRect+3)^0,c
 10468   0054C0  260F               	addwf	(??_TFT_FillRect+2)^0,f,c
 10469   0054C2  0E00               	movlw	0
 10470   0054C4  2210               	addwfc	(??_TFT_FillRect+3)^0,f,c
 10471   0054C6  0EFF               	movlw	255
 10472   0054C8  240F               	addwf	(??_TFT_FillRect+2)^0,w,c
 10473   0054CA  6E11               	movwf	(??_TFT_FillRect+4)^0,c
 10474   0054CC  0EFF               	movlw	255
 10475   0054CE  2010               	addwfc	(??_TFT_FillRect+3)^0,w,c
 10476   0054D0  6E12               	movwf	(??_TFT_FillRect+5)^0,c
 10477   0054D2  500D               	movf	??_TFT_FillRect^0,w,c
 10478   0054D4  5C11               	subwf	(??_TFT_FillRect+4)^0,w,c
 10479   0054D6  5012               	movf	(??_TFT_FillRect+5)^0,w,c
 10480   0054D8  0A80               	xorlw	128
 10481   0054DA  6E13               	movwf	(??_TFT_FillRect+6)^0,c
 10482   0054DC  500E               	movf	(??_TFT_FillRect+1)^0,w,c
 10483   0054DE  0A80               	xorlw	128
 10484   0054E0  5813               	subwfb	(??_TFT_FillRect+6)^0,w,c
 10485   0054E2  A0D8               	btfss	status,0,c
 10486   0054E4  EF76  F02A         	goto	u4841
 10487   0054E8  EF78  F02A         	goto	u4840
 10488   0054EC                     u4841:
 10489   0054EC  EF7B  F02A         	goto	l4364
 10490   0054F0                     u4840:
 10491   0054F0                     
 10492                           ;tft_st7735.c: 693:             h = _height - y;
 10493   0054F0  5008               	movf	TFT_FillRect@y^0,w,c
 10494   0054F2  5C5C               	subwf	__height^0,w,c
 10495   0054F4  6E0A               	movwf	TFT_FillRect@h^0,c
 10496   0054F6                     l4364:
 10497                           
 10498                           ;tft_st7735.c: 694:         LATDbits.LD0 = 0;
 10499   0054F6  908C               	bcf	140,0,c	;volatile
 10500   0054F8                     
 10501                           ;tft_st7735.c: 695:         SetAddrWindow(x, y, w, h);
 10502   0054F8  C008  F003         	movff	TFT_FillRect@y,SetAddrWindow@y
 10503   0054FC  C009  F004         	movff	TFT_FillRect@w,SetAddrWindow@w
 10504   005500  C00A  F005         	movff	TFT_FillRect@h,SetAddrWindow@h
 10505   005504  5018               	movf	TFT_FillRect@x^0,w,c
 10506   005506  EC96  F025         	call	_SetAddrWindow
 10507   00550A                     
 10508                           ;tft_st7735.c: 696:         uint16_t px = (uint16_t)w * h;
 10509   00550A  5009               	movf	TFT_FillRect@w^0,w,c
 10510   00550C  020A               	mulwf	TFT_FillRect@h^0,c
 10511   00550E  CFF3 F014          	movff	prodl,TFT_FillRect@px
 10512   005512  CFF4 F015          	movff	prodh,TFT_FillRect@px+1
 10513                           
 10514                           ;tft_st7735.c: 697:         while(px--){
 10515   005516  EF93  F02A         	goto	l4372
 10516   00551A                     l4370:
 10517                           
 10518                           ;tft_st7735.c: 698:             SPI_Write(hi);
 10519   00551A  5016               	movf	TFT_FillRect@hi^0,w,c
 10520   00551C  EC23  F024         	call	_SPI_Write
 10521                           
 10522                           ;tft_st7735.c: 699:             SPI_Write(lo);
 10523   005520  5017               	movf	TFT_FillRect@lo^0,w,c
 10524   005522  EC23  F024         	call	_SPI_Write
 10525   005526                     l4372:
 10526                           
 10527                           ;tft_st7735.c: 697:         while(px--){
 10528   005526  0614               	decf	TFT_FillRect@px^0,f,c
 10529   005528  A0D8               	btfss	status,0,c
 10530   00552A  0615               	decf	(TFT_FillRect@px+1)^0,f,c
 10531   00552C  2814               	incf	TFT_FillRect@px^0,w,c
 10532   00552E  E106               	bnz	u4851
 10533   005530  2815               	incf	(TFT_FillRect@px+1)^0,w,c
 10534   005532  A4D8               	btfss	status,2,c
 10535   005534  EF9E  F02A         	goto	u4851
 10536   005538  EFA0  F02A         	goto	u4850
 10537   00553C                     u4851:
 10538   00553C  EF8D  F02A         	goto	l4370
 10539   005540                     u4850:
 10540   005540                     
 10541                           ;tft_st7735.c: 701:         LATDbits.LD0 = 1;
 10542   005540  808C               	bsf	140,0,c	;volatile
 10543   005542                     l279:
 10544   005542  0012               	return		;funcret
 10545   005544                     __end_of_TFT_FillRect:
 10546                           	callstack 0
 10547                           
 10548 ;; *************** function _SetAddrWindow *****************
 10549 ;; Defined at:
 10550 ;;		line 533 in file "tft_st7735.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;  x               1    wreg     unsigned char 
 10553 ;;  y               1    2[COMRAM] unsigned char 
 10554 ;;  w               1    3[COMRAM] unsigned char 
 10555 ;;  h               1    4[COMRAM] unsigned char 
 10556 ;; Auto vars:     Size  Location     Type
 10557 ;;  x               1    6[COMRAM] unsigned char 
 10558 ;; Return value:  Size  Location     Type
 10559 ;;                  1    wreg      void 
 10560 ;; Registers used:
 10561 ;;		wreg, status,2, status,0, cstack
 10562 ;; Tracked objects:
 10563 ;;		On entry : 0/0
 10564 ;;		On exit  : 0/0
 10565 ;;		Unchanged: 0/0
 10566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10567 ;;      Params:         3       0       0       0       0       0       0       0       0
 10568 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10569 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10570 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10571 ;;Total ram usage:        5 bytes
 10572 ;; Hardware stack levels used: 1
 10573 ;; Hardware stack levels required when called: 2
 10574 ;; This function calls:
 10575 ;;		_SPI_Write
 10576 ;;		_WriteCommand
 10577 ;; This function is called by:
 10578 ;;		_TFT_DrawPixel
 10579 ;;		_TFT_DrawVLine
 10580 ;;		_TFT_FillRect
 10581 ;;		_TFT_DrawHLine
 10582 ;; This function uses a non-reentrant model
 10583 ;;
 10584                           
 10585                           	psect	text36
 10586   004B2C                     __ptext36:
 10587                           	callstack 0
 10588   004B2C                     _SetAddrWindow:
 10589                           	callstack 25
 10590                           
 10591                           ;incstack = 0
 10592                           ;SetAddrWindow@x stored from wreg
 10593   004B2C  6E07               	movwf	SetAddrWindow@x^0,c
 10594   004B2E                     
 10595                           ;tft_st7735.c: 533: void SetAddrWindow(uint8_t x, uint8_t y, uint8_t w, uint8_t h);tft_s
      +                          t7735.c: 534: {;tft_st7735.c: 535:     x += _xstart;
 10596   004B2E  0100               	movlb	0	; () banked
 10597   004B30  51BB               	movf	__xstart& (0+255),w,b
 10598   004B32  2607               	addwf	SetAddrWindow@x^0,f,c
 10599                           
 10600                           ;tft_st7735.c: 536:     y += _ystart;
 10601   004B34  51BA               	movf	__ystart& (0+255),w,b
 10602   004B36  2603               	addwf	SetAddrWindow@y^0,f,c
 10603   004B38                     
 10604                           ; BSR set to: 0
 10605                           ;tft_st7735.c: 537:     WriteCommand(0x2A);
 10606   004B38  0E2A               	movlw	42
 10607   004B3A  EC0E  F024         	call	_WriteCommand
 10608   004B3E                     
 10609                           ;tft_st7735.c: 538:     SPI_Write(0);
 10610   004B3E  0E00               	movlw	0
 10611   004B40  EC23  F024         	call	_SPI_Write
 10612   004B44                     
 10613                           ;tft_st7735.c: 539:     SPI_Write(x);
 10614   004B44  5007               	movf	SetAddrWindow@x^0,w,c
 10615   004B46  EC23  F024         	call	_SPI_Write
 10616   004B4A                     
 10617                           ;tft_st7735.c: 540:     SPI_Write(0);
 10618   004B4A  0E00               	movlw	0
 10619   004B4C  EC23  F024         	call	_SPI_Write
 10620   004B50                     
 10621                           ;tft_st7735.c: 541:     SPI_Write(x+w-1);
 10622   004B50  5007               	movf	SetAddrWindow@x^0,w,c
 10623   004B52  2404               	addwf	SetAddrWindow@w^0,w,c
 10624   004B54  6E06               	movwf	??_SetAddrWindow^0,c
 10625   004B56  0406               	decf	??_SetAddrWindow^0,w,c
 10626   004B58  EC23  F024         	call	_SPI_Write
 10627   004B5C                     
 10628                           ;tft_st7735.c: 542:     WriteCommand(0x2B);
 10629   004B5C  0E2B               	movlw	43
 10630   004B5E  EC0E  F024         	call	_WriteCommand
 10631   004B62                     
 10632                           ;tft_st7735.c: 543:     SPI_Write(0);
 10633   004B62  0E00               	movlw	0
 10634   004B64  EC23  F024         	call	_SPI_Write
 10635   004B68                     
 10636                           ;tft_st7735.c: 544:     SPI_Write(y);
 10637   004B68  5003               	movf	SetAddrWindow@y^0,w,c
 10638   004B6A  EC23  F024         	call	_SPI_Write
 10639   004B6E                     
 10640                           ;tft_st7735.c: 545:     SPI_Write(0);
 10641   004B6E  0E00               	movlw	0
 10642   004B70  EC23  F024         	call	_SPI_Write
 10643   004B74                     
 10644                           ;tft_st7735.c: 546:     SPI_Write(y+h-1);
 10645   004B74  5003               	movf	SetAddrWindow@y^0,w,c
 10646   004B76  2405               	addwf	SetAddrWindow@h^0,w,c
 10647   004B78  6E06               	movwf	??_SetAddrWindow^0,c
 10648   004B7A  0406               	decf	??_SetAddrWindow^0,w,c
 10649   004B7C  EC23  F024         	call	_SPI_Write
 10650   004B80                     
 10651                           ;tft_st7735.c: 547:     WriteCommand(0x2C);
 10652   004B80  0E2C               	movlw	44
 10653   004B82  EC0E  F024         	call	_WriteCommand
 10654   004B86  0012               	return		;funcret
 10655   004B88                     __end_of_SetAddrWindow:
 10656                           	callstack 0
 10657                           
 10658 ;; *************** function _WriteCommand *****************
 10659 ;; Defined at:
 10660 ;;		line 437 in file "tft_st7735.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  cmd             1    wreg     unsigned char 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  cmd             1    1[COMRAM] unsigned char 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  1    wreg      void 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, cstack
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10674 ;;      Params:         0       0       0       0       0       0       0       0       0
 10675 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10677 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10678 ;;Total ram usage:        1 bytes
 10679 ;; Hardware stack levels used: 1
 10680 ;; Hardware stack levels required when called: 1
 10681 ;; This function calls:
 10682 ;;		_SPI_Write
 10683 ;; This function is called by:
 10684 ;;		_DisplayInit
 10685 ;;		_TFT_ST7735_Init
 10686 ;;		_SetAddrWindow
 10687 ;;		_TFT_SetRotation
 10688 ;;		_TFT_InvertDisplay
 10689 ;; This function uses a non-reentrant model
 10690 ;;
 10691                           
 10692                           	psect	text37
 10693   00481C                     __ptext37:
 10694                           	callstack 0
 10695   00481C                     _WriteCommand:
 10696                           	callstack 25
 10697                           
 10698                           ;incstack = 0
 10699                           ;WriteCommand@cmd stored from wreg
 10700   00481C  6E02               	movwf	WriteCommand@cmd^0,c
 10701   00481E                     
 10702                           ;tft_st7735.c: 437: void WriteCommand(uint8_t cmd);tft_st7735.c: 438: {;tft_st7735.c: 43
      +                          9:     LATDbits.LD2 = 0;
 10703   00481E  948C               	bcf	140,2,c	;volatile
 10704   004820                     
 10705                           ;tft_st7735.c: 440:     SPI_Write(cmd);
 10706   004820  5002               	movf	WriteCommand@cmd^0,w,c
 10707   004822  EC23  F024         	call	_SPI_Write
 10708   004826                     
 10709                           ;tft_st7735.c: 441:     LATDbits.LD2 = 1;
 10710   004826  848C               	bsf	140,2,c	;volatile
 10711   004828  0012               	return		;funcret
 10712   00482A                     __end_of_WriteCommand:
 10713                           	callstack 0
 10714                           
 10715 ;; *************** function _SPI_Write *****************
 10716 ;; Defined at:
 10717 ;;		line 66 in file "spi.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;  dato            1    wreg     unsigned char 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  dato            1    0[COMRAM] unsigned char 
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10731 ;;      Params:         0       0       0       0       0       0       0       0       0
 10732 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10734 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10735 ;;Total ram usage:        1 bytes
 10736 ;; Hardware stack levels used: 1
 10737 ;; This function calls:
 10738 ;;		Nothing
 10739 ;; This function is called by:
 10740 ;;		_WriteCommand
 10741 ;;		_DisplayInit
 10742 ;;		_TFT_ST7735_Init
 10743 ;;		_TFT_DrawPixel
 10744 ;;		_SetAddrWindow
 10745 ;;		_TFT_SetRotation
 10746 ;;		_TFT_DrawVLine
 10747 ;;		_TFT_FillRect
 10748 ;;		_TFT_DrawHLine
 10749 ;;		_TFT_PushColor
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text38
 10754   004846                     __ptext38:
 10755                           	callstack 0
 10756   004846                     _SPI_Write:
 10757                           	callstack 25
 10758                           
 10759                           ;incstack = 0
 10760                           ;SPI_Write@dato stored from wreg
 10761   004846  6E01               	movwf	SPI_Write@dato^0,c
 10762   004848                     
 10763                           ;spi.c: 66: void SPI_Write(unsigned char dato);spi.c: 67: {;spi.c: 68:     SSPBUF = dato
      +                          ;
 10764   004848  C001  FFC9         	movff	SPI_Write@dato,4041	;volatile
 10765   00484C                     l102:
 10766   00484C  A0C7               	btfss	199,0,c	;volatile
 10767   00484E  EF2B  F024         	goto	u3201
 10768   004852  EF2D  F024         	goto	u3200
 10769   004856                     u3201:
 10770   004856  EF26  F024         	goto	l102
 10771   00485A                     u3200:
 10772   00485A                     l105:
 10773   00485A  A69E               	btfss	158,3,c	;volatile
 10774   00485C  EF32  F024         	goto	u3211
 10775   004860  EF34  F024         	goto	u3210
 10776   004864                     u3211:
 10777   004864  EF2D  F024         	goto	l105
 10778   004868                     u3210:
 10779   004868                     
 10780                           ;spi.c: 71:     PIR1bits.SSPIF = 0;
 10781   004868  969E               	bcf	158,3,c	;volatile
 10782   00486A  0012               	return		;funcret
 10783   00486C                     __end_of_SPI_Write:
 10784                           	callstack 0
 10785                           
 10786                           	psect	rparam
 10787   000000                     
 10788                           	psect	config
 10789                           
 10790                           ;Config register CONFIG1L @ 0x300000
 10791                           ;	PLL Prescaler Selection bits
 10792                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 10793                           ;	System Clock Postscaler Selection bits
 10794                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10795                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10796                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 10797   300000                     	org	3145728
 10798   300000  21                 	db	33
 10799                           
 10800                           ;Config register CONFIG1H @ 0x300001
 10801                           ;	Oscillator Selection bits
 10802                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 10803                           ;	Fail-Safe Clock Monitor Enable bit
 10804                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10805                           ;	Internal/External Oscillator Switchover bit
 10806                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10807   300001                     	org	3145729
 10808   300001  0E                 	db	14
 10809                           
 10810                           ;Config register CONFIG2L @ 0x300002
 10811                           ;	Power-up Timer Enable bit
 10812                           ;	PWRT = OFF, PWRT disabled
 10813                           ;	Brown-out Reset Enable bits
 10814                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10815                           ;	Brown-out Reset Voltage bits
 10816                           ;	BORV = 3, Minimum setting 2.05V
 10817                           ;	USB Voltage Regulator Enable bit
 10818                           ;	VREGEN = OFF, USB voltage regulator disabled
 10819   300002                     	org	3145730
 10820   300002  19                 	db	25
 10821                           
 10822                           ;Config register CONFIG2H @ 0x300003
 10823                           ;	Watchdog Timer Enable bit
 10824                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10825                           ;	Watchdog Timer Postscale Select bits
 10826                           ;	WDTPS = 32768, 1:32768
 10827   300003                     	org	3145731
 10828   300003  1E                 	db	30
 10829                           
 10830                           ; Padding undefined space
 10831   300004                     	org	3145732
 10832   300004  FF                 	db	255
 10833                           
 10834                           ;Config register CONFIG3H @ 0x300005
 10835                           ;	CCP2 MUX bit
 10836                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10837                           ;	PORTB A/D Enable bit
 10838                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10839                           ;	Low-Power Timer 1 Oscillator Enable bit
 10840                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10841                           ;	MCLR Pin Enable bit
 10842                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10843   300005                     	org	3145733
 10844   300005  81                 	db	129
 10845                           
 10846                           ;Config register CONFIG4L @ 0x300006
 10847                           ;	Stack Full/Underflow Reset Enable bit
 10848                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10849                           ;	Single-Supply ICSP Enable bit
 10850                           ;	LVP = OFF, Single-Supply ICSP disabled
 10851                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10852                           ;	ICPRT = OFF, ICPORT disabled
 10853                           ;	Extended Instruction Set Enable bit
 10854                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10855                           ;	Background Debugger Enable bit
 10856                           ;	DEBUG = 0x1, unprogrammed default
 10857   300006                     	org	3145734
 10858   300006  81                 	db	129
 10859                           
 10860                           ; Padding undefined space
 10861   300007                     	org	3145735
 10862   300007  FF                 	db	255
 10863                           
 10864                           ;Config register CONFIG5L @ 0x300008
 10865                           ;	Code Protection bit
 10866                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10867                           ;	Code Protection bit
 10868                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10869                           ;	Code Protection bit
 10870                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10871                           ;	Code Protection bit
 10872                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10873   300008                     	org	3145736
 10874   300008  0F                 	db	15
 10875                           
 10876                           ;Config register CONFIG5H @ 0x300009
 10877                           ;	Boot Block Code Protection bit
 10878                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10879                           ;	Data EEPROM Code Protection bit
 10880                           ;	CPD = OFF, Data EEPROM is not code-protected
 10881   300009                     	org	3145737
 10882   300009  C0                 	db	192
 10883                           
 10884                           ;Config register CONFIG6L @ 0x30000A
 10885                           ;	Write Protection bit
 10886                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10887                           ;	Write Protection bit
 10888                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10889                           ;	Write Protection bit
 10890                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10891                           ;	Write Protection bit
 10892                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10893   30000A                     	org	3145738
 10894   30000A  0F                 	db	15
 10895                           
 10896                           ;Config register CONFIG6H @ 0x30000B
 10897                           ;	Configuration Register Write Protection bit
 10898                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10899                           ;	Boot Block Write Protection bit
 10900                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10901                           ;	Data EEPROM Write Protection bit
 10902                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10903   30000B                     	org	3145739
 10904   30000B  E0                 	db	224
 10905                           
 10906                           ;Config register CONFIG7L @ 0x30000C
 10907                           ;	Table Read Protection bit
 10908                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10909                           ;	Table Read Protection bit
 10910                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10911                           ;	Table Read Protection bit
 10912                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10913                           ;	Table Read Protection bit
 10914                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10915   30000C                     	org	3145740
 10916   30000C  0F                 	db	15
 10917                           
 10918                           ;Config register CONFIG7H @ 0x30000D
 10919                           ;	Boot Block Table Read Protection bit
 10920                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10921   30000D                     	org	3145741
 10922   30000D  40                 	db	64
 10923                           tosu	equ	0xFFF
 10924                           tosh	equ	0xFFE
 10925                           tosl	equ	0xFFD
 10926                           stkptr	equ	0xFFC
 10927                           pclatu	equ	0xFFB
 10928                           pclath	equ	0xFFA
 10929                           pcl	equ	0xFF9
 10930                           tblptru	equ	0xFF8
 10931                           tblptrh	equ	0xFF7
 10932                           tblptrl	equ	0xFF6
 10933                           tablat	equ	0xFF5
 10934                           prodh	equ	0xFF4
 10935                           prodl	equ	0xFF3
 10936                           indf0	equ	0xFEF
 10937                           postinc0	equ	0xFEE
 10938                           postdec0	equ	0xFED
 10939                           preinc0	equ	0xFEC
 10940                           plusw0	equ	0xFEB
 10941                           fsr0h	equ	0xFEA
 10942                           fsr0l	equ	0xFE9
 10943                           wreg	equ	0xFE8
 10944                           indf1	equ	0xFE7
 10945                           postinc1	equ	0xFE6
 10946                           postdec1	equ	0xFE5
 10947                           preinc1	equ	0xFE4
 10948                           plusw1	equ	0xFE3
 10949                           fsr1h	equ	0xFE2
 10950                           fsr1l	equ	0xFE1
 10951                           bsr	equ	0xFE0
 10952                           indf2	equ	0xFDF
 10953                           postinc2	equ	0xFDE
 10954                           postdec2	equ	0xFDD
 10955                           preinc2	equ	0xFDC
 10956                           plusw2	equ	0xFDB
 10957                           fsr2h	equ	0xFDA
 10958                           fsr2l	equ	0xFD9
 10959                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    1569
    Data        6
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      94
    BANK0           160     75      97
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DisplayInit@addr	PTR const unsigned char  size(2) Largest target is 103
		 -> Bcmd(CODE[103]), Rcmd1(CODE[32]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1362$buffer	PTR unsigned char  size(2) Largest target is 0

    S1362$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@cadena(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    TFT_WriteString@str	PTR const unsigned char  size(2) Largest target is 21
		 -> main@cadena(BANK0[16]), STR_2(CODE[21]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _TFT_WriteString->_TFT_Print
    _TFT_Print->_TFT_FillRect
    _TFT_DrawVLine->_SetAddrWindow
    _TFT_DrawPixel->_SetAddrWindow
    _TFT_ST7735_Init->_DisplayInit
    _TFT_SetRotation->_WriteCommand
    _DisplayInit->_Delay_ms
    _TFT_FillScreen->_TFT_FillRect
    _TFT_FillRect->_SetAddrWindow
    _SetAddrWindow->_WriteCommand
    _WriteCommand->_SPI_Write

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   50443
                                             51 BANK0     24    24      0
                       _TFT_FillRect
                     _TFT_FillScreen
                    _TFT_ST7735_Init
                    _TFT_SetRotation
                    _TFT_WriteString
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   23938
                                             72 COMRAM    13    13      0
                                             44 BANK0      7     0      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4   23440
                                             66 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3   22943
                                             53 COMRAM    13    10      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     947
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   20211
                                             45 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2689
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TFT_WriteString                                     14     3     11   15523
                                             33 COMRAM    14     3     11
                          _TFT_Print
 ---------------------------------------------------------------------------------
 (2) _TFT_Print                                            9     9      0   14094
                                             24 COMRAM     9     9      0
                      _TFT_DrawPixel
                      _TFT_DrawVLine
                       _TFT_FillRect
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawVLine                                       14    10      4    4181
                                              7 COMRAM    14    10      4
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawPixel                                        4     1      3    5218
                                              7 COMRAM     4     1      3
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (1) _TFT_ST7735_Init                                      2     2      0    1302
                                             12 COMRAM     2     2      0
                        _DisplayInit
                    _SPI_Init_Master
                          _SPI_Write
                    _TFT_SetRotation
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _TFT_SetRotation                                      2     2      0     119
                                              2 COMRAM     2     2      0
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (2) _SPI_Init_Master                                      3     1      2     436
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _DisplayInit                                          7     5      2     593
                                              5 COMRAM     7     5      2
                           _Delay_ms
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _TFT_FillScreen                                       2     0      2    4435
                                             24 COMRAM     2     0      2
                       _TFT_FillRect
 ---------------------------------------------------------------------------------
 (3) _TFT_FillRect                                        17    12      5    4337
                                              7 COMRAM    17    12      5
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (4) _SetAddrWindow                                        5     2      3    1112
                                              2 COMRAM     5     2      3
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (5) _WriteCommand                                         1     1      0      44
                                              1 COMRAM     1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (6) _SPI_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TFT_FillRect
     _SPI_Write
     _SetAddrWindow
       _SPI_Write
       _WriteCommand
         _SPI_Write
   _TFT_FillScreen
     _TFT_FillRect
   _TFT_ST7735_Init
     _DisplayInit
       _Delay_ms
       _SPI_Write
       _WriteCommand
     _SPI_Init_Master
     _SPI_Write
     _TFT_SetRotation
       _SPI_Write
       _WriteCommand
     _WriteCommand
   _TFT_SetRotation
   _TFT_WriteString
     _TFT_Print
       _TFT_DrawPixel
         _SPI_Write
         _SetAddrWindow
       _TFT_DrawVLine
         _SPI_Write
         _SetAddrWindow
       _TFT_FillRect
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      61       5       60.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5E       1       98.9%
BITBIGSFRhhh        36      0       0      20        0.0%
BITBIGSFRlll        2C      0       0      26        0.0%
BITBIGSFRlhh        21      0       0      23        0.0%
BITBIGSFRlhl         8      0       0      24        0.0%
BITBIGSFRllh         5      0       0      25        0.0%
BITBIGSFRhhl         1      0       0      21        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      27        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 02 22:58:30 2024

          ?_TFT_SetRotation 0001                ___fldiv@aexp 0019                ___fldiv@bexp 0018  
              ___fldiv@sign 0011                 _SSPSTATbits 0FC7                          l61 5582  
                        l83 4CC2                          l89 4CCE         ___wmul@multiplicand 0003  
                       l102 484C                         l105 485A                         l202 4E94  
                       l107 4868                         l203 4EC4                         l108 486A  
                       l212 4B86                         l300 48B2                         l205 4ECE  
                       l303 48C8                         l225 5BD0                         l209 4A84  
                       l411 60A2                         l253 5BE0                         l183 4828  
                       l271 5036                         l280 54B2                         l272 5038  
                       l408 62DA                         l193 5110                         l194 5112  
                       l284 5540                         l462 56DC                         l279 5542  
                       l287 4844                         l464 571C                         l456 56BE  
                       l465 575C                         l466 579C                         l458 56C4  
                       l468 5832                         l492 4890                         l751 4D78  
                       l762 5314                         l757 52CE                         l766 4900  
                       l789 541A                         _pad 4BE8                         prod 0FF3  
                       wreg 0FE8                ___flmul@aexp 0012                ___flmul@bexp 0013  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 000A                        l1020 6C8E                        l1021 6C7C  
                      l1110 6A9E                        l1022 6C42                        l1113 6930  
                      l1106 673A                        l1123 6A60                        l1115 69A8  
                      l1116 6996                        l1204 4BFE                        l1037 6DA8  
                      l1029 6F5E                        l1301 6036                        l1150 59E6  
                      l1046 6E78                        l1062 4A3A                        l1222 72EE  
                      l1047 6E66                        l1208 4C4C                        l1224 7134  
                      l1161 597E                        l1154 5922                        l1074 6674  
                      l1147 588A                        l1219 79B8                        l1076 64D4  
                      l1252 7736                        l1308 49F4                        l1085 651A  
                      l1325 5DF2                        l1318 5210                        l1270 4F74  
                      l1087 6592                        l1079 6498                        l1088 6580  
                      l4000 5114                        l1328 5D36                        l1345 4AD4  
                      l1177 4972                        l4002 5134                        l1274 4F7C  
                      l1339 4B2A                        l4004 5172                        l4012 51B2  
                      l1357 4E22                        l1365 49B2                        l4014 51C4  
                      l4006 519A                        l4030 4AF8                        l1374 4938  
                      l3400 4848                        l5000 58C4                        l4008 51A6  
                      l4040 5C6C                        l1368 4814                        l5010 5918  
                      l5002 58CC                        l3410 6ACC                        l3402 6AA0  
                      l4018 5208                        l4042 5C7A                        l4050 5D5A  
                      l4034 5BE2                        l4026 4AD6                        l5020 598E  
                      l5012 5954                        l5004 58D8                        l3500 6C7A  
                      l3420 6B06                        l3412 6ADC                        l3404 6AAC  
                      l4052 5D96                        l4036 5C02                        l4028 4AE4  
                      l5030 59D6                        l5022 5992                        l5014 5960  
                      l5006 590A                        l3510 6CD0                        l3502 6C9C  
                      l3430 6B34                        l3422 6B0C                        l3414 6AEC  
                      l3406 6ABA                        l4054 5DAA                        l4046 5CEA  
                      l4038 5C58                        l4080 4B44                        l4400 4FB4  
                      l5024 59B6                        l5016 596E                        l5008 590C  
                      l3600 6F4E                        l3520 6D0A                        l3512 6CDE  
                      l3504 6CAC                        l3440 6B68                        l3432 6B36  
                      l3424 6B1E                        l3416 6AEE                        l3408 6ABC  
                      l4056 5DD2                        l4048 5D26                        l4090 4B68  
                      l4082 4B4A                        l4074 4B2E                        l4410 5002  
                      l4402 4FB8                        l5026 59C6                        l5018 598C  
                      l3530 6D76                        l3522 6D0C                        l3514 6CEC  
                      l3450 6BA4                        l3434 6B46                        l3442 6B70  
                      l3426 6B20                        l3418 6AF6                        l4058 5DE2  
             TFT_FillRect@h 000A                        l3612 481E                        l4092 4B6E  
                      l4084 4B50                        l4076 4B38                        l4500 5A2A  
                      l4412 5018                        l4404 4FBC                        l5028 59D4  
                      l3700 64A2                        l3540 6DCE                        l3532 6D78  
                      l3524 6D16                        l3516 6CF8                        l3508 6CC0  
                      l3460 6BB8                        l3452 6BA8                        l3444 6B80  
                      l3436 6B56                        l3428 6B26                        l3620 4888  
                      l4340 4F22                        l4332 4ED0                        l3614 4820  
                      l4094 4B74                        l4086 4B5C                        l4078 4B3E  
                      l4350 543E                        l4510 5A6C                        l4502 5A3A  
                      l4414 5024                        l4406 4FFA                        l3710 64FA  
                      l3702 64C0                        l3630 62F8                        l3550 6DFC  
                      l3534 6D88                        l3518 6CFC                        l3526 6D1C  
                      l3470 6BCC                        l3462 6BBC                        l3454 6BAC  
                      l3446 6B92                        l3438 6B66                        l3390 4D9A  
                      l4342 4F42                        l4334 4ED8                        l3616 4826  
                      l4096 4B80                        l4088 4B62                        l4360 54AC  
                      l4352 5442                        l4600 4CA4                        l4520 5AA4  
                      l4512 5A70                        l4504 5A46                        l4408 5000  
                      l3720 6538                        l3712 6500                        l3704 64C2  
                      l3632 6308                        l3640 6332                        l3624 62DC  
                      l3552 6E0A                        l3544 6DE2                        l3560 6E28  
                      l3528 6D42                        l3536 6D98                        l3472 6BD0  
                      l3464 6BC0                        l3456 6BB0                        l3448 6BA0  
                      l3480 6BE0                        l3392 4DA4                        l5400 6F66  
                      l4336 4EFA                        l4344 4F4E                        l4370 551A  
                      l4362 54F0                        l4354 5446                        l4346 541E  
                      l4610 504A                        l4602 4CAC                        l4530 5AE2  
                      l4522 5AA8                        l4514 5A78                        l4506 5A58  
                      l3730 65A2                        l3722 653C                        l3714 650A  
                      l3706 64D2                        l3650 635E                        l3642 6342  
                      l3634 6318                        l3626 62E8                        l3810 67A6  
                      l3802 676E                        l3554 6E12                        l3546 6DEC  
                      l3538 6DBE                        l3562 6E36                        l3490 6C50  
                      l3482 6BE4                        l3474 6BD4                        l3466 6BC4  
                      l3458 6BB4                        l3394 4DC0                        l3386 4D7A  
                      l5410 6FB6                        l5402 6F76                        l3618 486C  
                      l4338 4F06                        l4372 5526                        l4364 54F6  
                      l4356 5458                        l4348 542E                        l4620 5078  
                      l4612 5052                        l4604 4CBE                        l4540 5B1A  
                      l4532 5AEA                        l4524 5AB8                        l4516 5A8A  
                      l4508 5A64                        l4380 4A3E                        l4700 60B0  
                      l3740 6604                        l3732 65AE                        l3724 654A  
                      l3716 6518                        l3708 64E4                        l3652 636E  
                      l3660 6398                        l3644 6348                        l3636 6328  
                      l3628 62F6                        l3900 4CFE                        l3820 67F0  
                      l3812 67BE                        l3804 677A                        l3572 6E88  
                      l3580 6EDE                        l3564 6E3A                        l3556 6E16  
                      l3548 6DFA                        l3492 6C5C                        l3484 6C0E  
                      l3476 6BD8                        l3468 6BC8                        l3396 4DF2  
                      l3388 4D8A                        l5500 7346                        l5420 6FF2  
                      l5412 6FBE                        l5404 6F84                        l4366 54F8  
                      l4358 546E                        l4374 4892                        l4630 50B2  
                      l4622 5086                        l4614 5062                        l4606 503A  
                      l4542 5B22                        l4534 5AEE                        l4526 5AC4  
                      l4518 5A9C                        l4390 4A7C                        l4382 4A50  
                      l4710 612E                        l4702 60C0                        l3750 6662  
                      l3742 661A                        l3734 65BC                        l3726 6578  
                      l3718 652A                        l3670 63DA                        l3662 63A8  
                      l3654 637E                        l3646 634E                        l3638 632A  
                      l3910 4D76                        l3902 4D0E                        l3830 6846  
                      l3822 6800                        l3814 67CA                        l3806 6784  
                      l3590 6F30                        l3582 6EEE                        l3574 6E94  
                      l3566 6E48                        l3558 6E26                        l3494 6C60  
                      l3486 6C2A                        l3478 6BDC                        l5510 7390  
                      l5502 735E                        l5430 7038                        l5414 6FCE  
                      l5422 6FF6                        l5406 6F88                        ?_pad 000F  
                      l4368 550A                        l4800 482A                        l4376 489E  
                      l4640 50F2                        l4632 50C4                        l4624 508C  
                      l4616 5066                        l4608 503C                        l4560 5B62  
                      l4544 5B26                        l4536 5AF6                        l4528 5AD6  
                      l4392 4A82                        l4384 4A62                        l4720 6184  
                      l4712 6148                        l4704 60DA                        l3752 6668  
                      l3744 6634                        l3736 65E6                        l3664 63BE  
                      l3656 638E                        l3648 635C                        l3904 4D3C  
                      l3920 527E                        l3840 68EA                        l3832 6862  
                      l3824 680C                        l3816 67D6                        l3808 679A  
                      l3592 6F36                        l3584 6EFE                        l3576 6EA2  
                      l3568 6E5E                        l3496 6C6E                        l3488 6C3A  
                      l5600 7898                        l5512 73A4                        l5520 749A  
                      l5504 7370                        l5432 7040                        l5424 701C  
                      l5440 707E                        l5416 6FDE                        l5408 6FAC  
             TFT_FillRect@w 0009                        l4378 48AE                        l4634 50D4  
                      l4626 509C                        l4618 5074                        l4642 50FE  
                      l4570 5B94                        l4562 5B74                        l4538 5B08  
                      l4490 59EE                        l4386 4A64                        l4394 4F80  
                      l4730 61DC                        l4722 6186                        l4714 616E  
                      l4706 6104                        l3754 666A                        l3746 6650  
                      l3738 65EA                        l3690 645C                        l3682 6412  
                      l3666 63CE                        l3674 63EE                        l3658 6390  
                      l3906 4D4C                        l3930 530C                        l3922 528E  
                      l3914 5212                        l3850 6940                        l3842 68F8  
                      l3834 686E                        l3826 681C                        l3818 67E4  
                      l3770 66A2                        l3762 6676                        l3594 6F38  
                      l3586 6F1E                        l3578 6EDC                        l3498 6C70  
                      l5362 4974                        l5370 4BE8                        l5610 7904  
                      l5602 78A0                        l5530 7566                        l5522 74B8  
                      l5514 7408                        l5506 7378                        l5450 70C8  
                      l5442 70A4                        l5434 7058                        l5426 702E  
                      l5418 6FEA               TFT_FillRect@x 0018               TFT_FillRect@y 0008  
                      l4636 50D8                        l4628 50A0                        l4564 5B7C  
                      l4548 5B3A                        l4492 59FA                        l4388 4A76  
                      l4396 4F92                        l4740 624E                        l4732 6200  
                      l4724 6196                        l4716 6170                        l4708 611E  
                      l4820 56EA                        l3748 6654                        l3692 6464  
                      l3684 642C                        l3676 63FE                        l3668 63D6  
                      l3908 4D70                        l3932 5312                        l3924 529C  
                      l3916 5240                        l3852 694E                        l3844 6916  
                      l3836 688A                        l3828 6836                        l3780 66DE  
                      l3772 66B2                        l3764 6682                        l3940 48F0  
                      l3596 6F3E                        l3588 6F22                        l5364 4980  
                      l5380 4C3C                        l5372 4BF6                        l5620 7950  
                      l5604 78AE                        l5540 7616                        l5532 7576  
                      l5524 74EC                        l5516 7460                        l5508 7380  
                      l5460 70FE                        l5444 70B6                        l5436 7062  
                      l5428 7032                        l4638 50EA                        l4590 4C56  
                      l4566 5B80                        l4558 5B50                        l4494 5A0C  
                      l4582 5BAA                        l4398 4FA4                        l4742 6286  
                      l4734 620C                        l4726 61B0                        l4718 6174  
                      l4830 5752                        l4822 570E                        l4814 569E  
                      l3694 6474                        l3686 643C                        l3678 63FE  
                      l3926 52AE                        l3918 5250                        l3862 69B8  
                      l3870 6A00                        l3854 6952                        l3846 6920  
                      l3838 68B4                        l3790 6714                        l3782 66E4  
                      l3774 66C2                        l3766 6690                        l3598 6F4C  
                      l3950 5340                        l5390 4AA6                        l5366 498E  
                      l5374 4C0A                        l5382 4902                        l5614 7916  
                      l5622 796E                        l5606 78DE                        l5550 767A  
                      l5542 764A                        l5534 7586                        l5526 751E  
                      l5518 7494                        l5470 71BC                        l5446 70BA  
                      l5710 49EC                        l4592 4C70                        l4584 5BD2  
                      l4496 5A1E                        l4488 59EA                        l4760 4E26  
                      l4744 628E                        l4736 6236                        l4728 61C0  
                      l4680 604C                        l4840 57CE                        l4832 576A  
                      l4824 5712                        l4816 56A2                        l3696 6488  
                      l3688 644C                        l3928 52BC                        l3880 6A74  
                      l3872 6A1A                        l3864 69C4                        l3856 6960  
                      l3848 692E                        l3792 6724                        l3784 66F2  
                      l3776 66C8                        l3768 6692                        l3936 48CA  
                      l3960 538E                        l3952 536A                        l3944 5316  
                      l5392 4AAA                        l5368 4992                        l5376 4C1A  
                      l5384 490A                        l5624 797E                        l5616 792C  
                      l5608 78EC                        l5560 772C                        l5552 7680  
                      l5544 765E                        l5536 75BA                        l5528 7534  
                      l5480 727C                        l5472 71EE                        l5464 7144  
                      l5448 70C0                        l5640 5E34                        l5632 5DF4  
                      l5704 49B4                        l5720 4952                        l4594 4C78  
                      l4586 5BDE                        l4498 5A26                        l4770 4E44  
                      l4762 4E2E                        l4746 629A                        l4738 623C  
                      l4682 605E                        l4842 57D2                        l4834 578E  
                      l4826 572A                        l4818 56B2                        l3698 6496  
                      l3882 6A82                        l3874 6A2E                        l3866 69D2  
                      l3858 698E                        l3794 672A                        l3786 66F4  
                      l3778 66D8                        l3938 48E0                        l3970 53BA  
                      l3954 536C                        l3946 532C                        l5394 4AB6  
                      l5386 4A86                        l5378 4C1E                        l5626 7994  
                      l5618 7932                        l5570 7770                        l5562 7748  
                      l5554 7688                        l5538 7610                        l5546 7662  
                      l5490 7312                        l5474 722C                        l5466 714A  
                      l5458 70E4                        l5650 5E58                        l5642 5E3C  
                      l5634 5E16                        l5706 49C0                        l5722 4966  
                      l5714 493A                        l5730 5552                        l4596 4C8A  
                      l4588 4C50                        l4780 4E6A                        l4772 4E52  
                      l4764 4E3E                        l4748 62D4                        l4692 6078  
                      l4836 5792                        l4828 574E                        l3884 6A84  
                      l3876 6A48                        l3868 69FC                        l3796 674A  
                      l3788 6704                        l3892 49F6                        l3980 53EA  
                      l3956 537C                        l5388 4A9A                        l5396 4ABA  
                      l5628 799C                        l5572 7778                        l5564 7756  
                      l5580 7798                        l5556 7694                        l5548 7672  
                      l5492 731A                        l5476 7240                        l5484 72BC  
                      l5468 717E                        l5660 5EC8                        l5644 5E40  
                      l5652 5E76                        l5636 5E22                        l5708 49D0  
                      l5716 4942                        l5740 5586                        l5732 5558  
                      l4598 4C92                        l4790 4EA2                        l4782 4E70  
                      l4774 4E5E                        l4766 4E40                        l4694 609E  
                      l4686 6074                        l4678 603A                        l4846 57DC  
                      l4838 57AA                        l3878 6A64                        l3886 6A8A  
                      l3798 675A                        l3894 4A06                        l3982 53FA  
                      l3966 53A6                        l3958 5380                        l5590 781E  
                      l5582 77AA                        l5574 7788                        l5566 7766  
                      l5558 770C                        l5494 7322                        l5486 72F6  
                      l5478 7274                        l5398 6F60                        l5662 5ED6  
                      l5654 5E86                        l5646 5E50                        l5638 5E30  
                      l5718 494A                        l5750 55FE                        l5742 559A  
                      l5734 555E                        l5726 5544                        l4792 4EA4  
                      l4784 4E82                        l4776 4E62                        l4768 4E42  
                      l4848 5802                        l3888 6A8E                        l3984 540A  
                      l3976 53CE                        l3968 53B0                        l5592 7852  
                      l5584 77BC                        l5576 778C                        l5568 776A  
                      l5496 7326                        l5488 7306                        l5664 5EE8  
                      l5672 5F00                        l5656 5EA8                        l5752 561E  
                      l5744 55C2                        l5736 556A                        l5728 5550  
                      l4794 4EB6                        l4786 4E96                        l4778 4E66  
                      l3898 4CD0                        l3978 53DA                        l5594 785A  
                      l5586 77C0                        l5578 7792                        l5498 7338  
                      l5682 5F8E                        l5666 5EF0                        l5674 5F1E  
                      l5658 5EB4                        l5754 564E                        l5746 55D2  
                      l5738 556C                        l4796 4EBA                        l4788 4E9C  
                      l5588 77C6                        l5596 785E                        l5692 5FEC  
                      l5684 5FA4                        l5676 5F3E                        l5668 5EF8  
                      l5756 567C                        l5748 55E0                        l4798 4EC8  
                      l4990 5846                        l5598 787C                        l5686 5FC2  
                      l5678 5F66                        l5694 6004                        l4992 5854  
                      l4994 589A                        l5698 6014                        l4996 58B0  
                      l4988 5836                        STR_1 7FF1                        STR_2 7FDC  
                      STR_3 7FF7                        STR_6 7FFB                        u3200 485A  
                      u4000 69D2                        u3201 4856                        u4001 69CE  
                      u3210 4868                        u4010 6A1A                        u3211 4864  
                      u4011 6A16                        u4100 52BC                        u4020 6A48  
                      u3300 6BA0                        u3220 6ABA                        u4101 52B8  
                      u4021 6A44                        u3301 6B9C                        u3221 6AB6  
                      u4110 530C                        u4030 6A82                        u3310 6C0E  
                      u3230 6ACC                        u4111 5308                        u4031 6A7E  
                      u3311 6C0A                        u3231 6AC8                        u5000 5A3A  
                      u4040 4CFE                        u4120 48E0                        u3400 6CEC  
                      u3320 6C26                        u3240 6ADC                        u3160 4D8A  
                      u5001 5A36                        u4041 4CFA                        u4121 48DC  
                      u3401 6CE8                        u3321 6C20                        u3241 6AD8  
                      u3161 4D86                        u5010 5A58                        u4050 4D3C  
                      u3410 6D0A                        u3330 6C28                        u3250 6B1E  
                      u4130 532C                        u3170 4D9A                        u5011 5A54  
                      u4051 4D38                        u3411 6D06                        u3251 6B1A  
                      u4131 5328                        u3171 4D96                        u5100 5B62  
                      u5020 5A8A                        u4060 4D70                        u3500 6E48  
                      u3420 6D42                        u3340 6C50                        u3260 6B34  
                      u4140 5360                        u4220 5154                        u4300 4AE4  
                      u3180 4DC0                        u5101 5B5E                        u5021 5A86  
                      u4061 4D6C                        u3501 6E44                        u3421 6D3E  
                      u3341 6C4C                        u3261 6B30                        u4301 4AE0  
                      u3181 4DBC                        u5110 5B74                        u5030 5A9C  
                      u4070 5240                        u3510 6E5E                        u3430 6D88  
                      u3350 6C6E                        u3270 6B46                        u4150 538E  
                      u4230 5172                        u4310 5C2A                        u3190 4DF2  
                      u5111 5B70                        u5031 5A98                        u4071 523C  
                      u3511 6E5A                        u3431 6D84                        u3351 6C6A  
                      u3271 6B42                        u4151 538A                        u4231 516E  
                      u3191 4DEE                        u5200 50C4                        u5120 5B90  
                      u5040 5AB8                        u4080 527E                        u3600 6F4C  
                      u3520 6E74                        u3440 6DBE                        u3360 6C8E  
                      u3280 6B56                        u4160 53A2                        u4240 519A  
                      u4400 5DD2                        u4320 5C58                        u5201 50C0  
                      u5121 5B8C                        u5041 5AB4                        u4081 527A  
                      u3601 6F48                        u3521 6E70                        u3441 6DBA  
                      u3361 6C8A                        u3281 6B52                        u4161 539E  
                      u4145 5356                        u4241 5196                        u4225 514A  
                      u4401 5DCE                        u4321 5C54                        u5210 50EA  
                      u5130 5BA6                        u5050 5AD6                        u4090 529C  
                      u3530 6E88                        u3450 6DCE                        u3370 6C9C  
                      u3290 6B92                        u4170 53CA                        u4250 51C4  
                      u4330 5C7A                        u5211 50E6                        u5131 5BA2  
                      u5051 5AD2                        u4091 5298                        u3531 6E84  
                      u3451 6DCA                        u3371 6C98                        u3291 6B8E  
                      u4171 53C6                        u4251 51C0                        u4331 5C76  
                      u4315 5C20                        u5220 5110                        u5140 4C70  
                      u5060 5B08                        u3700 6474                        u3620 62F6  
                      u3540 6EA2                        u3460 6DFA                        u3380 6CAC  
                      u4180 53EA                        u5221 510C                        u5141 4C6C  
                      u5061 5B04                        u3701 6470                        u3621 62F2  
                      u3541 6E9E                        u3461 6DF6                        u3381 6CA8  
                      u4181 53E6                        u5150 4C8A                        u5070 5B1A  
                      u5310 604C                        u3710 6496                        u3630 6308  
                      u3550 6EDC                        u3470 6E0A                        u3390 6CDE  
                      u4190 53FA                        u4270 51FE                        u4350 5CE6  
                      u5151 4C86                        u5071 5B16                        u5311 6048  
                      u3711 6492                        u3631 6304                        u3551 6ED8  
                      u3471 6E06                        u3391 6CDA                        u4191 53F6  
                      u4271 51F8                        u4351 5CE2                        u5160 4CA4  
                      u5080 5B36                        u5400 61B0                        u5320 605E  
                      u3800 65A2                        u3720 64C0                        u3640 6318  
                      u3560 6EEE                        u3480 6E26                        u4280 5200  
                      u4360 5D0A                        u5161 4CA0                        u5081 5B32  
                      u5401 61AC                        u5321 605A                        u3801 659E  
                      u3721 64BC                        u3641 6314                        u3561 6EEA  
                      u3481 6E22                        u4265 51D6                        u4345 5C8E  
                      u5170 4CBE                        u5090 5B4C                        u5410 61C0  
                      u5330 6070                        u3810 65BC                        u3730 64E4  
                      u3650 635C                        u3570 6EFE                        u3490 6E36  
                      u4370 5D26                        u4346 5C98                        u5171 4CBA  
                      u5091 5B48                        u5411 61BC                        u5331 606C  
                      u3811 65B8                        u3731 64E0                        u3651 6358  
                      u3571 6EFA                        u3491 6E32                        u4371 5D22  
                      u4347 5CA8                        u5420 6236                        u5340 60B0  
                      u5500 56B2                        u3820 6604                        u3740 64FA  
                      u3660 636E                        u3900 6714                        u3580 6F1E  
                      u4380 5D7A                        u6300 4AD4                        u5421 6232  
                      u5341 60AC                        u5501 56AE                        u3821 6600  
                      u3741 64F6                        u3661 636A                        u3901 6710  
                      u3581 6F1A                        u4365 5D00                        u6301 4AD0  
                      u5190 50B2                        u5430 624E                        u5350 60C0  
                      u5510 570A                        u3830 6634                        u3750 6518  
                      u3670 637E                        u3910 674A                        u3590 6F30  
                      u4390 5D96                        u6310 6F84                        u5191 50AE  
                      u5431 624A                        u5351 60BC                        u3831 6630  
                      u3751 6514                        u3671 637A                        u3911 6746  
                      u3591 6F2C                        u4391 5D92                        u6311 6F80  
                      u4800 543E                        u5440 6286                        u5360 611E  
                      u5520 574A                        u3840 6662                        u3760 6538  
                      u3680 63BE                        u3920 675A                        u6400 71EE  
                      u6320 6FCE                        u4801 543A                        u5185 4CCA  
                      u5441 6282                        u5361 611A                        u3841 665E  
                      u3761 6534                        u3681 63BA                        u3921 6756  
                      u4385 5D70                        u6401 71EA                        u6321 6FCA  
                      u4810 5458                        u5186 4CCC                        u5450 62D4  
                      u5370 612E                        u5530 578A                        u3770 654A  
                      u3690 63FE                        u3930 68D4                        u3850 6690  
                      u6410 722C                        u6330 6FDE                        u4811 5454  
                      u5451 62D0                        u5371 612A                        u3771 6546  
                      u3691 63FA                        u3851 668C                        u6411 7228  
                      u6331 6FDA                        u4820 546A                        u4900 4FA4  
                      u5380 6184                        u5540 57CA                        u3780 6578  
                      u3940 692E                        u3860 66A2                        u6260 49B2  
                      u6500 7566                        u6420 72B8                        u6340 701C  
                      u4821 5466                        u4901 4FA0                        u5381 6180  
                      u5517 5700                        u3781 6574                        u3941 692A  
                      u3861 669E                        u6261 49AE                        u6501 7562  
                      u6421 72B4                        u6341 7018                        u4830 54AC  
                      u5470 4E82                        u4910 4FB4                        u5390 6196  
                      u5550 5822                        u3790 658E                        u3950 694E  
                      u3870 66B2                        u6270 4BF6                        u6510 7576  
                      u6430 72EE                        u6350 702E                        u4831 54A8  
                      u5471 4E7E                        u4911 4FB0                        u5391 6192  
                      u5527 5740                        u3791 658A                        u3951 694A  
                      u3935 68CA                        u3871 66AE                        u6271 4BF2  
                      u6511 7572                        u6431 72EA                        u6351 702A  
                      u4840 54F0                        u5480 4E94                        u4920 4FFA  
                      u5560 5832                        u3960 6960                        u3880 66F2  
                      u6280 4C3C                        u6600 78FE                        u6520 7610  
                      u6440 7306                        u6360 70A4                        u4841 54EC  
                      u5481 4E90                        u4921 4FF6                        u5561 582E  
                      u5537 5780                        u3961 695C                        u3881 66EE  
                      u6281 4C38                        u6601 78F8                        u6521 760C  
                      u6441 7302                        u6361 70A0                        u4850 5540  
                      u5490 4EB6                        u4930 5036                        u3970 698E  
                      u3890 6704                        u6290 4938                        u6610 7900  
                      u6530 765E                        u6450 7338                        u6370 70B6  
                      u4770 4EFA                        u4851 553C                        u5491 4EB2  
                      u4931 5032                        u5547 57C0                        u3971 698A  
                      u3891 6700                        u6291 4934                        u6531 765A  
                      u6451 7334                        u6371 70B2                        u4771 4EF6  
                      u4860 48C8                        u5900 59C6                        u5820 5846  
                      u3980 69A4                        u6620 7912                        u6540 770C  
                      u6460 7346                        u6380 7130                        u4780 4F74  
                      u6700 49EC                        u4861 48C4                        u5557 5818  
                      u5901 59C2                        u5821 5842                        u3981 69A0  
                      u6621 790E                        u6541 7708                        u6461 7342  
                      u6381 712C                        u4781 4F70                        u6701 49E8  
                      u4790 542E                        u4870 4A50                        u5910 59D4  
                      u5830 5854                        u3990 69B8                        u6630 7950  
                      u6550 7748                        u6470 7370                        u6390 71BC  
                      u6710 55E0                        u4791 542A                        u4871 4A4C  
                      u5911 59D0                        u5831 5850                        u3991 69B4  
                      u6631 794C                        u6551 7744                        u6471 736C  
                      u6391 71B8                        u6711 55DC                        u4880 4A62  
                      u5840 58B0                        u6640 796E                        u6560 7756  
                      u6480 74B8                        u4881 4A5E                        u5841 58AC  
                      u6641 796A                        u6561 7752                        u6481 74B4  
                      u4890 4F92                        u5850 5906                        u6650 797E  
                      u6570 77AA                        u6490 751E                        u4891 4F8E  
                      u5851 5902                        u6651 797A                        u6571 77A6  
                      u6491 751A                        u4980 5A0C                        u5860 5950  
                      u6580 787C                        u6660 5E16                        u4981 5A08  
                      u5861 594C                        u6581 7878                        u6661 5E12  
                      u4990 5A1E                        u5870 596E                        u6590 7898  
                      u6670 5E86                        u4991 5A1A                        u5871 596A  
                      u6591 7894                        u6671 5E82                        u6727 55CA  
                      u5880 597E                        u6680 5EA8                        u6737 4E34  
                      u5881 597A                        u6681 5EA4                        u5890 598C  
                      u6690 5F3A                        u6747 48A4                        u5891 5988  
                      u6691 5F36                        _Bcmd 7F55     __end_of_TFT_WriteString 5834  
                      _dbuf 0100                        _labs 4AD6                        _main 5544  
                      _font 79BB                        _prec 00B5                        pad@i 0015  
                      pad@p 0012                        fsr0h 0FEA                        fsr1h 0FE2  
                      indf0 0FEF                        fsr2h 0FDA                        fsr0l 0FE9  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      _wrap 00C0               ___fpclassifyf 5114                        prodh 0FF4  
                      prodl 0FF3                        start 0000             ___fldiv@new_exp 0012  
              ___param_bank 0000                       ??_pad 0014             ??_TFT_DrawVLine 000C  
           ??_TFT_DrawPixel 000B         __end_of_DisplayInit 5114               ___fltol@sign1 0009  
                     ?_labs 0001              TFT_FillRect@hi 0016             __end_of___fladd 6F60  
            TFT_FillRect@lo 0017                       ?_main 0001              TFT_FillRect@px 0014  
           __end_of___fldiv 6676                _WriteCommand 481C             __end_of___flneg 4902  
           __end_of___flmul 6AA0             __end_of___flsub 4A3C             __end_of___fltol 541C  
              vfpfcnvrt@fmt 0037         TFT_WriteString@size 002C          DisplayInit@numArgs 000A  
            TFT_DrawVLine@h 0009                       _Rcmd1 7FBC                       _Rcmd2 7EBB  
                     _Rcmd3 7EF6              TFT_DrawVLine@x 0015              TFT_DrawVLine@y 0008  
   __end_of_SPI_Init_Master 4CD0                       _flags 00B7         read_prec_or_width@c 0009  
       read_prec_or_width@n 000A                       _fputc 4D7A                       _fputs 4974  
                     labs@a 0001                       pad@fp 000F                       _width 00B3  
                     _putch 4814              TFT_DrawPixel@x 000B              TFT_DrawPixel@y 0008  
             _Rcmd2green144 7F2E                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 4974              ?___fpclassifyf 0001            __end_of_Delay_ms 48CA  
              __end_of_Bcmd 7FBC             __initialization 4B88    __end_of_Rcmd2green160x80 7F2E  
              __end_of_labs 4B2C                __end_of_main 569E                __end_of_font 7EBB  
                _Rcmd2green 7F48            __end_of_Rcmd2red 7F48                      ??_labs 0005  
                    ??_main 0093            ??_TFT_FillScreen 001B               __activetblptr 0002  
__end_of_read_prec_or_width 4F7E            TFT_SetRotation@m 0003               TFT_Print@line 001E  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 0009                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      ?_putch 0001        TFT_WriteString@color 0028  
          ?_TFT_WriteString 0022               vfpfcnvrt@done 003F                      _SSPBUF 0FC9  
          __end_of___xxtofl 59E8             _TFT_ST7735_Init 4E24             TFT_DrawVLine@hi 0013  
           TFT_DrawVLine@lo 0014                 _DisplayInit 503A                vfprintf@cfmt 0047  
                    ___flge 5212                      ___fleq 4CD0                   ??___fladd 0009  
                    ___wmul 486C                   ??___fldiv 0009                   ??___flneg 0005  
                 ??___flmul 0009                   ??___flsub 0022                   ??___fltol 0005  
                    _efgtoa 6F60                      __width 005D                      _floorf 5BE2  
                    _memcpy 4A86        read_prec_or_width@ap 0008                      clear_0 4BC0  
                    clear_1 4BCC                      clear_2 4BD8                      isa$std 0001  
         __end_of_TFT_Print 62DC                      pad@buf 0010                      _strcpy 4902  
         __end_of_SPI_Write 486C                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                __pdataCOMRAM 005E                      fputs@s 0009  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 79BA                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            ?_SPI_Init_Master 0001  
          __end_of_vfprintf 49F6                   ??_sprintf 0049                  ___flge@ff1 001A  
                ___flge@ff2 001E             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 4BDE  
                ___flneg@f1 0001               ___rparam_used 0001                  ___fltol@f1 0001  
             __end_of_Rcmd1 7FDC               __end_of_Rcmd2 7EF6               __end_of_Rcmd3 7F21  
            __pcstackCOMRAM 0001                __pidataBANK0 4817               _SetAddrWindow 4B2C  
             __end_of_fputc 4E24               __end_of_fputs 49B4               __end_of_putch 4816  
                 ?_Delay_ms 0001                     ??_fputc 0004     __end_of_TFT_ST7735_Init 4ED0  
                   ??_fputs 000C                     ??_putch 0001                  __pbssBANK0 00AB  
                __pbssBANK1 0100                     ?___flge 001A                     ?___fleq 0001  
            ?_SetAddrWindow 0003                     ?___wmul 0001                     ?_efgtoa 002E  
                   ?_floorf 001A                     ?_memcpy 0001                     ?_strcpy 0001  
     TFT_SetRotation@madctl 0004                   ?___xxtofl 0001                  ??_Delay_ms 0003  
     TFT_WriteString@x_prev 002F                     __Hparam 0000               SPI_Write@dato 0001  
                   __Lparam 0000                     ___fladd 6AA0                     ___fldiv 62DC  
                   ___flneg 48CA                     ___flmul 6676                     ___flsub 49F6  
                   ___fltol 5316          SPI_Init_Master@smp 0002                   ?_vfprintf 0043  
                   __height 005C                     __pcinit 4B88                     __ramtop 0800  
     __end_of_TFT_DrawVLine 503A                     __ptext0 5544                     __ptext1 493A  
                   __ptext2 49B4                     __ptext3 5DF4                     __ptext4 4ED0  
                   __ptext5 486C                     __ptext6 6F60                     __ptext7 4902  
                   __ptext8 4BE8                     __ptext9 4974       __end_of_TFT_DrawPixel 4A86  
                   __xstart 00BB                     __ystart 00BA       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005                     efgtoa@c 0033                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 002F                     efgtoa@g 0082  
                   efgtoa@h 0077                     efgtoa@i 007F                     efgtoa@l 007B  
                   efgtoa@m 006D                     efgtoa@n 0086                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0075  
                   _sprintf 493A                     main@res 00A7            ?_TFT_ST7735_Init 0001  
      end_of_initialization 4BDE                     floorf@e 0028                     floorf@m 0024  
                   floorf@u 002A                     floorf@x 001A                     memcpy@d 0008  
                   memcpy@n 0005                     memcpy@s 000A                   Delay_ms@d 0001  
                 Delay_ms@i 0004                     fputc@fp 0003               __Lmediumconst 79BA  
                   fputs@fp 000B          _read_prec_or_width 4ED0             ??_SetAddrWindow 0006  
              ?_DisplayInit 0006           __end_of_vfpfcnvrt 6038                  efgtoa@mode 0069  
                efgtoa@sign 0081             WriteCommand@cmd 0002                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 003B  
             ?_TFT_FillRect 0008                  ??_vfprintf 0047                     strcpy@d 0005  
               ___fladd@grs 0010                   _TFT_Print 6038               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISBbits 0F93                   _TRISCbits 0F94  
                 _TRISDbits 0F95        ??_read_prec_or_width 0009                 ___fldiv@grs 0014  
               ___fldiv@rem 000D                   _SPI_Write 4846           ??_TFT_SetRotation 0003  
           DisplayInit@addr 0006                  main@cadena 0095                 ___flmul@grs 000E  
    DisplayInit@numCommands 0009              ??_TFT_FillRect 000D              __end_of___flge 5316  
            __end_of___fleq 4D7A                 vfpfcnvrt@ap 0038                 vfpfcnvrt@cp 0041  
               vfpfcnvrt@fp 0036              __end_of___wmul 4892          TFT_WriteString@str 0026  
             __pidataCOMRAM 4816              __end_of_efgtoa 79BA              __end_of_floorf 5DF4  
            __end_of_memcpy 4AD6                  floorf@F521 00AB              __end_of_strcpy 493A  
       start_initialization 4B88                  ?_TFT_Print 0001          TFT_DrawVLine@color 000A  
               __end_of_pad 4C4E                  ?_SPI_Write 0001          __end_of_Rcmd2green 7F55  
     __end_of___fpclassifyf 5212                 vfprintf@fmt 0044                    ??___flge 0022  
                  ??___fleq 0009                    ??___wmul 0005                    ??_efgtoa 0034  
               __pdataBANK0 00BC                    ??_floorf 001E                    ??_memcpy 0007  
             ?_WriteCommand 0001                    ??_strcpy 0005                   ___fladd@a 0005  
                 ___fladd@b 0001                   ___fldiv@a 0005                   ___fldiv@b 0001  
                 ___flmul@a 0005                   ___flmul@b 0001                 __pbssCOMRAM 0056  
                 ___flsub@a 001E                   ___flsub@b 001A               __pcstackBANK0 0060  
      SPI_Init_Master@reloj 0003              SetAddrWindow@h 0005       __end_of_Rcmd2green144 7F3B  
            SetAddrWindow@w 0004              SetAddrWindow@x 0007              SetAddrWindow@y 0003  
                 __colstart 005B                 _efgtoa$1487 0066               __pmediumconst 79BA  
                  ?___fladd 0001                    ?___fldiv 0001                    ?___flneg 0001  
                  ?___flmul 0001                    ?___flsub 001A                    ?___fltol 0001  
            ??_WriteCommand 0002                   __rowstart 00B9           ??_TFT_WriteString 002D  
         TFT_FillRect@color 000B                 ??_TFT_Print 0019                 ??_SPI_Write 0001  
                  ?_sprintf 008C        __end_of_TFT_FillRect 5544              ___wmul@product 0005  
                  _LATDbits 0F8C                    _PIR1bits 0F9E           ??_SPI_Init_Master 0003  
                 _vfpfcnvrt 5DF4             _TFT_SetRotation 59E8                   _textcolor 00BE  
                _ADCON0bits 0FC2           ___wmul@multiplier 0001          TFT_DrawPixel@color 0009  
                  _Delay_ms 4892                  TFT_Print@c 001F                  TFT_Print@i 0021  
                TFT_Print@j 0020           TFT_WriteString@bg 002A                  vfpfcnvrt@c 0040  
            _TFT_FillScreen 482A                   copy_data0 4B9C                    _Rcmd2red 7F3B  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 0046  
                  __Lrparam 0000                  vfprintf@fp 0043       __end_of_SetAddrWindow 4B88  
                ?_vfpfcnvrt 0036         SPI_Init_Master@modo 0001          ___fpclassifyf@F465 00AF  
                sprintf@fmt 008D                    ___xxtofl 5834      __end_of_TFT_FillScreen 4846  
                  __ptext10 4D7A                    __ptext11 4814                    __ptext20 6676  
                  __ptext12 4A86                    __ptext21 5212                    __ptext13 4AD6  
                  __ptext30 59E8                    __ptext22 4CD0                    __ptext14 5BE2  
                  __ptext31 4C4E                    __ptext23 62DC                    __ptext15 5114  
                  __ptext32 503A                    __ptext24 5834                    __ptext16 5316  
                  __ptext33 4892                    __ptext25 569E                    __ptext17 49F6  
                  __ptext34 482A                    __ptext26 6038                    __ptext18 6AA0  
                  __ptext35 541C                    __ptext27 4F7E                    __ptext19 48CA  
                  __ptext36 4B2C                    __ptext28 4A3C                    __ptext37 481C  
                  __ptext29 4E24                    __ptext38 4846                  strcpy@dest 0001  
      __end_of_WriteCommand 482A                    _cursor_x 0058                    _cursor_y 0056  
                  _tabcolor 005A                    efgtoa@fp 002E                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0071     __end_of_TFT_SetRotation 5BE2  
                  isa$xinst 0000      TFT_ST7735_Init@options 000E                    _rotation 00B8  
                  _vfprintf 49B4               DisplayInit@ms 000B                    _textsize 005E  
                  main@calc 00A5         TFT_FillScreen@color 0019            TFT_WriteString@x 0022  
          TFT_WriteString@y 0024               _TFT_DrawVLine 4F7E               _TFT_DrawPixel 4A3C  
       _TFT_WriteString$911 002D                    memcpy@d1 0001                    memcpy@s1 0003  
          _Rcmd2green160x80 7F21             ?_TFT_FillScreen 0019                   sprintf@ap 0049  
                 strcpy@src 0003             _TFT_WriteString 569E                 efgtoa@nmode 006A  
              _TFT_FillRect 541C           ??_TFT_ST7735_Init 000D                 ??_vfpfcnvrt 0039  
            ?_TFT_DrawVLine 0008              ?_TFT_DrawPixel 0008                    sprintf@f 004A  
                  sprintf@s 008C                 _SSPCON1bits 0FC6               ___fladd@signs 000D  
              ___fladd@aexp 000E                ___fladd@bexp 000F             _SPI_Init_Master 4C4E  
             ??_DisplayInit 0008                 _textbgcolor 00BC  
