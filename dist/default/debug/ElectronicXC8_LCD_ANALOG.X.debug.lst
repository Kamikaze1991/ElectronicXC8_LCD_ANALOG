

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Apr 02 21:56:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 17/10/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   0045F4                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _textsize
    99   0045F4  01                 	db	1
   100                           
   101                           	psect	idataBANK0
   102   0045F5                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _textbgcolor
   106   0045F5  FFFF               	dw	65535
   107                           
   108                           ;initializer for _textcolor
   109   0045F7  FFFF               	dw	65535
   110                           
   111                           ;initializer for _wrap
   112   0045F9  01                 	db	1
   113                           
   114                           	psect	mediumconst
   115   0077C0                     __pmediumconst:
   116                           	callstack 0
   117   0077C0  00                 	db	0
   118   0077C1                     _font:
   119                           	callstack 0
   120   0077C1  00                 	db	0
   121   0077C2  00                 	db	0
   122   0077C3  00                 	db	0
   123   0077C4  00                 	db	0
   124   0077C5  00                 	db	0
   125   0077C6  3E                 	db	62
   126   0077C7  5B                 	db	91
   127   0077C8  4F                 	db	79
   128   0077C9  5B                 	db	91
   129   0077CA  3E                 	db	62
   130   0077CB  3E                 	db	62
   131   0077CC  6B                 	db	107
   132   0077CD  4F                 	db	79
   133   0077CE  6B                 	db	107
   134   0077CF  3E                 	db	62
   135   0077D0  1C                 	db	28
   136   0077D1  3E                 	db	62
   137   0077D2  7C                 	db	124
   138   0077D3  3E                 	db	62
   139   0077D4  1C                 	db	28
   140   0077D5  18                 	db	24
   141   0077D6  3C                 	db	60
   142   0077D7  7E                 	db	126
   143   0077D8  3C                 	db	60
   144   0077D9  18                 	db	24
   145   0077DA  1C                 	db	28
   146   0077DB  57                 	db	87
   147   0077DC  7D                 	db	125
   148   0077DD  57                 	db	87
   149   0077DE  1C                 	db	28
   150   0077DF  1C                 	db	28
   151   0077E0  5E                 	db	94
   152   0077E1  7F                 	db	127
   153   0077E2  5E                 	db	94
   154   0077E3  1C                 	db	28
   155   0077E4  00                 	db	0
   156   0077E5  18                 	db	24
   157   0077E6  3C                 	db	60
   158   0077E7  18                 	db	24
   159   0077E8  00                 	db	0
   160   0077E9  FF                 	db	255
   161   0077EA  E7                 	db	231
   162   0077EB  C3                 	db	195
   163   0077EC  E7                 	db	231
   164   0077ED  FF                 	db	255
   165   0077EE  00                 	db	0
   166   0077EF  18                 	db	24
   167   0077F0  24                 	db	36
   168   0077F1  18                 	db	24
   169   0077F2  00                 	db	0
   170   0077F3  FF                 	db	255
   171   0077F4  E7                 	db	231
   172   0077F5  DB                 	db	219
   173   0077F6  E7                 	db	231
   174   0077F7  FF                 	db	255
   175   0077F8  30                 	db	48
   176   0077F9  48                 	db	72
   177   0077FA  3A                 	db	58
   178   0077FB  06                 	db	6
   179   0077FC  0E                 	db	14
   180   0077FD  26                 	db	38
   181   0077FE  29                 	db	41
   182   0077FF  79                 	db	121
   183   007800  29                 	db	41
   184   007801  26                 	db	38
   185   007802  40                 	db	64
   186   007803  7F                 	db	127
   187   007804  05                 	db	5
   188   007805  05                 	db	5
   189   007806  07                 	db	7
   190   007807  40                 	db	64
   191   007808  7F                 	db	127
   192   007809  05                 	db	5
   193   00780A  25                 	db	37
   194   00780B  3F                 	db	63
   195   00780C  5A                 	db	90
   196   00780D  3C                 	db	60
   197   00780E  E7                 	db	231
   198   00780F  3C                 	db	60
   199   007810  5A                 	db	90
   200   007811  7F                 	db	127
   201   007812  3E                 	db	62
   202   007813  1C                 	db	28
   203   007814  1C                 	db	28
   204   007815  08                 	db	8
   205   007816  08                 	db	8
   206   007817  1C                 	db	28
   207   007818  1C                 	db	28
   208   007819  3E                 	db	62
   209   00781A  7F                 	db	127
   210   00781B  14                 	db	20
   211   00781C  22                 	db	34
   212   00781D  7F                 	db	127
   213   00781E  22                 	db	34
   214   00781F  14                 	db	20
   215   007820  5F                 	db	95
   216   007821  5F                 	db	95
   217   007822  00                 	db	0
   218   007823  5F                 	db	95
   219   007824  5F                 	db	95
   220   007825  06                 	db	6
   221   007826  09                 	db	9
   222   007827  7F                 	db	127
   223   007828  01                 	db	1
   224   007829  7F                 	db	127
   225   00782A  00                 	db	0
   226   00782B  66                 	db	102
   227   00782C  89                 	db	137
   228   00782D  95                 	db	149
   229   00782E  6A                 	db	106
   230   00782F  60                 	db	96
   231   007830  60                 	db	96
   232   007831  60                 	db	96
   233   007832  60                 	db	96
   234   007833  60                 	db	96
   235   007834  94                 	db	148
   236   007835  A2                 	db	162
   237   007836  FF                 	db	255
   238   007837  A2                 	db	162
   239   007838  94                 	db	148
   240   007839  08                 	db	8
   241   00783A  04                 	db	4
   242   00783B  7E                 	db	126
   243   00783C  04                 	db	4
   244   00783D  08                 	db	8
   245   00783E  10                 	db	16
   246   00783F  20                 	db	32
   247   007840  7E                 	db	126
   248   007841  20                 	db	32
   249   007842  10                 	db	16
   250   007843  08                 	db	8
   251   007844  08                 	db	8
   252   007845  2A                 	db	42
   253   007846  1C                 	db	28
   254   007847  08                 	db	8
   255   007848  08                 	db	8
   256   007849  1C                 	db	28
   257   00784A  2A                 	db	42
   258   00784B  08                 	db	8
   259   00784C  08                 	db	8
   260   00784D  1E                 	db	30
   261   00784E  10                 	db	16
   262   00784F  10                 	db	16
   263   007850  10                 	db	16
   264   007851  10                 	db	16
   265   007852  0C                 	db	12
   266   007853  1E                 	db	30
   267   007854  0C                 	db	12
   268   007855  1E                 	db	30
   269   007856  0C                 	db	12
   270   007857  30                 	db	48
   271   007858  38                 	db	56
   272   007859  3E                 	db	62
   273   00785A  38                 	db	56
   274   00785B  30                 	db	48
   275   00785C  06                 	db	6
   276   00785D  0E                 	db	14
   277   00785E  3E                 	db	62
   278   00785F  0E                 	db	14
   279   007860  06                 	db	6
   280   007861  00                 	db	0
   281   007862  00                 	db	0
   282   007863  00                 	db	0
   283   007864  00                 	db	0
   284   007865  00                 	db	0
   285   007866  00                 	db	0
   286   007867  00                 	db	0
   287   007868  5F                 	db	95
   288   007869  00                 	db	0
   289   00786A  00                 	db	0
   290   00786B  00                 	db	0
   291   00786C  07                 	db	7
   292   00786D  00                 	db	0
   293   00786E  07                 	db	7
   294   00786F  00                 	db	0
   295   007870  14                 	db	20
   296   007871  7F                 	db	127
   297   007872  14                 	db	20
   298   007873  7F                 	db	127
   299   007874  14                 	db	20
   300   007875  24                 	db	36
   301   007876  2A                 	db	42
   302   007877  7F                 	db	127
   303   007878  2A                 	db	42
   304   007879  12                 	db	18
   305   00787A  23                 	db	35
   306   00787B  13                 	db	19
   307   00787C  08                 	db	8
   308   00787D  64                 	db	100
   309   00787E  62                 	db	98
   310   00787F  36                 	db	54
   311   007880  49                 	db	73
   312   007881  56                 	db	86
   313   007882  20                 	db	32
   314   007883  50                 	db	80
   315   007884  00                 	db	0
   316   007885  08                 	db	8
   317   007886  07                 	db	7
   318   007887  03                 	db	3
   319   007888  00                 	db	0
   320   007889  00                 	db	0
   321   00788A  1C                 	db	28
   322   00788B  22                 	db	34
   323   00788C  41                 	db	65
   324   00788D  00                 	db	0
   325   00788E  00                 	db	0
   326   00788F  41                 	db	65
   327   007890  22                 	db	34
   328   007891  1C                 	db	28
   329   007892  00                 	db	0
   330   007893  2A                 	db	42
   331   007894  1C                 	db	28
   332   007895  7F                 	db	127
   333   007896  1C                 	db	28
   334   007897  2A                 	db	42
   335   007898  08                 	db	8
   336   007899  08                 	db	8
   337   00789A  3E                 	db	62
   338   00789B  08                 	db	8
   339   00789C  08                 	db	8
   340   00789D  00                 	db	0
   341   00789E  80                 	db	128
   342   00789F  70                 	db	112
   343   0078A0  30                 	db	48
   344   0078A1  00                 	db	0
   345   0078A2  08                 	db	8
   346   0078A3  08                 	db	8
   347   0078A4  08                 	db	8
   348   0078A5  08                 	db	8
   349   0078A6  08                 	db	8
   350   0078A7  00                 	db	0
   351   0078A8  00                 	db	0
   352   0078A9  60                 	db	96
   353   0078AA  60                 	db	96
   354   0078AB  00                 	db	0
   355   0078AC  20                 	db	32
   356   0078AD  10                 	db	16
   357   0078AE  08                 	db	8
   358   0078AF  04                 	db	4
   359   0078B0  02                 	db	2
   360   0078B1  3E                 	db	62
   361   0078B2  51                 	db	81
   362   0078B3  49                 	db	73
   363   0078B4  45                 	db	69
   364   0078B5  3E                 	db	62
   365   0078B6  00                 	db	0
   366   0078B7  42                 	db	66
   367   0078B8  7F                 	db	127
   368   0078B9  40                 	db	64
   369   0078BA  00                 	db	0
   370   0078BB  72                 	db	114
   371   0078BC  49                 	db	73
   372   0078BD  49                 	db	73
   373   0078BE  49                 	db	73
   374   0078BF  46                 	db	70
   375   0078C0  21                 	db	33
   376   0078C1  41                 	db	65
   377   0078C2  49                 	db	73
   378   0078C3  4D                 	db	77
   379   0078C4  33                 	db	51
   380   0078C5  18                 	db	24
   381   0078C6  14                 	db	20
   382   0078C7  12                 	db	18
   383   0078C8  7F                 	db	127
   384   0078C9  10                 	db	16
   385   0078CA  27                 	db	39
   386   0078CB  45                 	db	69
   387   0078CC  45                 	db	69
   388   0078CD  45                 	db	69
   389   0078CE  39                 	db	57
   390   0078CF  3C                 	db	60
   391   0078D0  4A                 	db	74
   392   0078D1  49                 	db	73
   393   0078D2  49                 	db	73
   394   0078D3  31                 	db	49
   395   0078D4  41                 	db	65
   396   0078D5  21                 	db	33
   397   0078D6  11                 	db	17
   398   0078D7  09                 	db	9
   399   0078D8  07                 	db	7
   400   0078D9  36                 	db	54
   401   0078DA  49                 	db	73
   402   0078DB  49                 	db	73
   403   0078DC  49                 	db	73
   404   0078DD  36                 	db	54
   405   0078DE  46                 	db	70
   406   0078DF  49                 	db	73
   407   0078E0  49                 	db	73
   408   0078E1  29                 	db	41
   409   0078E2  1E                 	db	30
   410   0078E3  00                 	db	0
   411   0078E4  00                 	db	0
   412   0078E5  14                 	db	20
   413   0078E6  00                 	db	0
   414   0078E7  00                 	db	0
   415   0078E8  00                 	db	0
   416   0078E9  40                 	db	64
   417   0078EA  34                 	db	52
   418   0078EB  00                 	db	0
   419   0078EC  00                 	db	0
   420   0078ED  00                 	db	0
   421   0078EE  08                 	db	8
   422   0078EF  14                 	db	20
   423   0078F0  22                 	db	34
   424   0078F1  41                 	db	65
   425   0078F2  14                 	db	20
   426   0078F3  14                 	db	20
   427   0078F4  14                 	db	20
   428   0078F5  14                 	db	20
   429   0078F6  14                 	db	20
   430   0078F7  00                 	db	0
   431   0078F8  41                 	db	65
   432   0078F9  22                 	db	34
   433   0078FA  14                 	db	20
   434   0078FB  08                 	db	8
   435   0078FC  02                 	db	2
   436   0078FD  01                 	db	1
   437   0078FE  59                 	db	89
   438   0078FF  09                 	db	9
   439   007900  06                 	db	6
   440   007901  3E                 	db	62
   441   007902  41                 	db	65
   442   007903  5D                 	db	93
   443   007904  59                 	db	89
   444   007905  4E                 	db	78
   445   007906  7C                 	db	124
   446   007907  12                 	db	18
   447   007908  11                 	db	17
   448   007909  12                 	db	18
   449   00790A  7C                 	db	124
   450   00790B  7F                 	db	127
   451   00790C  49                 	db	73
   452   00790D  49                 	db	73
   453   00790E  49                 	db	73
   454   00790F  36                 	db	54
   455   007910  3E                 	db	62
   456   007911  41                 	db	65
   457   007912  41                 	db	65
   458   007913  41                 	db	65
   459   007914  22                 	db	34
   460   007915  7F                 	db	127
   461   007916  41                 	db	65
   462   007917  41                 	db	65
   463   007918  41                 	db	65
   464   007919  3E                 	db	62
   465   00791A  7F                 	db	127
   466   00791B  49                 	db	73
   467   00791C  49                 	db	73
   468   00791D  49                 	db	73
   469   00791E  41                 	db	65
   470   00791F  7F                 	db	127
   471   007920  09                 	db	9
   472   007921  09                 	db	9
   473   007922  09                 	db	9
   474   007923  01                 	db	1
   475   007924  3E                 	db	62
   476   007925  41                 	db	65
   477   007926  41                 	db	65
   478   007927  51                 	db	81
   479   007928  73                 	db	115
   480   007929  7F                 	db	127
   481   00792A  08                 	db	8
   482   00792B  08                 	db	8
   483   00792C  08                 	db	8
   484   00792D  7F                 	db	127
   485   00792E  00                 	db	0
   486   00792F  41                 	db	65
   487   007930  7F                 	db	127
   488   007931  41                 	db	65
   489   007932  00                 	db	0
   490   007933  20                 	db	32
   491   007934  40                 	db	64
   492   007935  41                 	db	65
   493   007936  3F                 	db	63
   494   007937  01                 	db	1
   495   007938  7F                 	db	127
   496   007939  08                 	db	8
   497   00793A  14                 	db	20
   498   00793B  22                 	db	34
   499   00793C  41                 	db	65
   500   00793D  7F                 	db	127
   501   00793E  40                 	db	64
   502   00793F  40                 	db	64
   503   007940  40                 	db	64
   504   007941  40                 	db	64
   505   007942  7F                 	db	127
   506   007943  02                 	db	2
   507   007944  1C                 	db	28
   508   007945  02                 	db	2
   509   007946  7F                 	db	127
   510   007947  7F                 	db	127
   511   007948  04                 	db	4
   512   007949  08                 	db	8
   513   00794A  10                 	db	16
   514   00794B  7F                 	db	127
   515   00794C  3E                 	db	62
   516   00794D  41                 	db	65
   517   00794E  41                 	db	65
   518   00794F  41                 	db	65
   519   007950  3E                 	db	62
   520   007951  7F                 	db	127
   521   007952  09                 	db	9
   522   007953  09                 	db	9
   523   007954  09                 	db	9
   524   007955  06                 	db	6
   525   007956  3E                 	db	62
   526   007957  41                 	db	65
   527   007958  51                 	db	81
   528   007959  21                 	db	33
   529   00795A  5E                 	db	94
   530   00795B  7F                 	db	127
   531   00795C  09                 	db	9
   532   00795D  19                 	db	25
   533   00795E  29                 	db	41
   534   00795F  46                 	db	70
   535   007960  26                 	db	38
   536   007961  49                 	db	73
   537   007962  49                 	db	73
   538   007963  49                 	db	73
   539   007964  32                 	db	50
   540   007965  03                 	db	3
   541   007966  01                 	db	1
   542   007967  7F                 	db	127
   543   007968  01                 	db	1
   544   007969  03                 	db	3
   545   00796A  3F                 	db	63
   546   00796B  40                 	db	64
   547   00796C  40                 	db	64
   548   00796D  40                 	db	64
   549   00796E  3F                 	db	63
   550   00796F  1F                 	db	31
   551   007970  20                 	db	32
   552   007971  40                 	db	64
   553   007972  20                 	db	32
   554   007973  1F                 	db	31
   555   007974  3F                 	db	63
   556   007975  40                 	db	64
   557   007976  38                 	db	56
   558   007977  40                 	db	64
   559   007978  3F                 	db	63
   560   007979  63                 	db	99
   561   00797A  14                 	db	20
   562   00797B  08                 	db	8
   563   00797C  14                 	db	20
   564   00797D  63                 	db	99
   565   00797E  03                 	db	3
   566   00797F  04                 	db	4
   567   007980  78                 	db	120
   568   007981  04                 	db	4
   569   007982  03                 	db	3
   570   007983  61                 	db	97
   571   007984  59                 	db	89
   572   007985  49                 	db	73
   573   007986  4D                 	db	77
   574   007987  43                 	db	67
   575   007988  00                 	db	0
   576   007989  7F                 	db	127
   577   00798A  41                 	db	65
   578   00798B  41                 	db	65
   579   00798C  41                 	db	65
   580   00798D  02                 	db	2
   581   00798E  04                 	db	4
   582   00798F  08                 	db	8
   583   007990  10                 	db	16
   584   007991  20                 	db	32
   585   007992  00                 	db	0
   586   007993  41                 	db	65
   587   007994  41                 	db	65
   588   007995  41                 	db	65
   589   007996  7F                 	db	127
   590   007997  04                 	db	4
   591   007998  02                 	db	2
   592   007999  01                 	db	1
   593   00799A  02                 	db	2
   594   00799B  04                 	db	4
   595   00799C  40                 	db	64
   596   00799D  40                 	db	64
   597   00799E  40                 	db	64
   598   00799F  40                 	db	64
   599   0079A0  40                 	db	64
   600   0079A1  00                 	db	0
   601   0079A2  03                 	db	3
   602   0079A3  07                 	db	7
   603   0079A4  08                 	db	8
   604   0079A5  00                 	db	0
   605   0079A6  20                 	db	32
   606   0079A7  54                 	db	84
   607   0079A8  54                 	db	84
   608   0079A9  78                 	db	120
   609   0079AA  40                 	db	64
   610   0079AB  7F                 	db	127
   611   0079AC  28                 	db	40
   612   0079AD  44                 	db	68
   613   0079AE  44                 	db	68
   614   0079AF  38                 	db	56
   615   0079B0  38                 	db	56
   616   0079B1  44                 	db	68
   617   0079B2  44                 	db	68
   618   0079B3  44                 	db	68
   619   0079B4  28                 	db	40
   620   0079B5  38                 	db	56
   621   0079B6  44                 	db	68
   622   0079B7  44                 	db	68
   623   0079B8  28                 	db	40
   624   0079B9  7F                 	db	127
   625   0079BA  38                 	db	56
   626   0079BB  54                 	db	84
   627   0079BC  54                 	db	84
   628   0079BD  54                 	db	84
   629   0079BE  18                 	db	24
   630   0079BF  00                 	db	0
   631   0079C0  08                 	db	8
   632   0079C1  7E                 	db	126
   633   0079C2  09                 	db	9
   634   0079C3  02                 	db	2
   635   0079C4  18                 	db	24
   636   0079C5  A4                 	db	164
   637   0079C6  A4                 	db	164
   638   0079C7  9C                 	db	156
   639   0079C8  78                 	db	120
   640   0079C9  7F                 	db	127
   641   0079CA  08                 	db	8
   642   0079CB  04                 	db	4
   643   0079CC  04                 	db	4
   644   0079CD  78                 	db	120
   645   0079CE  00                 	db	0
   646   0079CF  44                 	db	68
   647   0079D0  7D                 	db	125
   648   0079D1  40                 	db	64
   649   0079D2  00                 	db	0
   650   0079D3  20                 	db	32
   651   0079D4  40                 	db	64
   652   0079D5  40                 	db	64
   653   0079D6  3D                 	db	61
   654   0079D7  00                 	db	0
   655   0079D8  7F                 	db	127
   656   0079D9  10                 	db	16
   657   0079DA  28                 	db	40
   658   0079DB  44                 	db	68
   659   0079DC  00                 	db	0
   660   0079DD  00                 	db	0
   661   0079DE  41                 	db	65
   662   0079DF  7F                 	db	127
   663   0079E0  40                 	db	64
   664   0079E1  00                 	db	0
   665   0079E2  7C                 	db	124
   666   0079E3  04                 	db	4
   667   0079E4  78                 	db	120
   668   0079E5  04                 	db	4
   669   0079E6  78                 	db	120
   670   0079E7  7C                 	db	124
   671   0079E8  08                 	db	8
   672   0079E9  04                 	db	4
   673   0079EA  04                 	db	4
   674   0079EB  78                 	db	120
   675   0079EC  38                 	db	56
   676   0079ED  44                 	db	68
   677   0079EE  44                 	db	68
   678   0079EF  44                 	db	68
   679   0079F0  38                 	db	56
   680   0079F1  FC                 	db	252
   681   0079F2  18                 	db	24
   682   0079F3  24                 	db	36
   683   0079F4  24                 	db	36
   684   0079F5  18                 	db	24
   685   0079F6  18                 	db	24
   686   0079F7  24                 	db	36
   687   0079F8  24                 	db	36
   688   0079F9  18                 	db	24
   689   0079FA  FC                 	db	252
   690   0079FB  7C                 	db	124
   691   0079FC  08                 	db	8
   692   0079FD  04                 	db	4
   693   0079FE  04                 	db	4
   694   0079FF  08                 	db	8
   695   007A00  48                 	db	72
   696   007A01  54                 	db	84
   697   007A02  54                 	db	84
   698   007A03  54                 	db	84
   699   007A04  24                 	db	36
   700   007A05  04                 	db	4
   701   007A06  04                 	db	4
   702   007A07  3F                 	db	63
   703   007A08  44                 	db	68
   704   007A09  24                 	db	36
   705   007A0A  3C                 	db	60
   706   007A0B  40                 	db	64
   707   007A0C  40                 	db	64
   708   007A0D  20                 	db	32
   709   007A0E  7C                 	db	124
   710   007A0F  1C                 	db	28
   711   007A10  20                 	db	32
   712   007A11  40                 	db	64
   713   007A12  20                 	db	32
   714   007A13  1C                 	db	28
   715   007A14  3C                 	db	60
   716   007A15  40                 	db	64
   717   007A16  30                 	db	48
   718   007A17  40                 	db	64
   719   007A18  3C                 	db	60
   720   007A19  44                 	db	68
   721   007A1A  28                 	db	40
   722   007A1B  10                 	db	16
   723   007A1C  28                 	db	40
   724   007A1D  44                 	db	68
   725   007A1E  4C                 	db	76
   726   007A1F  90                 	db	144
   727   007A20  90                 	db	144
   728   007A21  90                 	db	144
   729   007A22  7C                 	db	124
   730   007A23  44                 	db	68
   731   007A24  64                 	db	100
   732   007A25  54                 	db	84
   733   007A26  4C                 	db	76
   734   007A27  44                 	db	68
   735   007A28  00                 	db	0
   736   007A29  08                 	db	8
   737   007A2A  36                 	db	54
   738   007A2B  41                 	db	65
   739   007A2C  00                 	db	0
   740   007A2D  00                 	db	0
   741   007A2E  00                 	db	0
   742   007A2F  77                 	db	119
   743   007A30  00                 	db	0
   744   007A31  00                 	db	0
   745   007A32  00                 	db	0
   746   007A33  41                 	db	65
   747   007A34  36                 	db	54
   748   007A35  08                 	db	8
   749   007A36  00                 	db	0
   750   007A37  02                 	db	2
   751   007A38  01                 	db	1
   752   007A39  02                 	db	2
   753   007A3A  04                 	db	4
   754   007A3B  02                 	db	2
   755   007A3C  3C                 	db	60
   756   007A3D  26                 	db	38
   757   007A3E  23                 	db	35
   758   007A3F  26                 	db	38
   759   007A40  3C                 	db	60
   760   007A41  1E                 	db	30
   761   007A42  A1                 	db	161
   762   007A43  A1                 	db	161
   763   007A44  61                 	db	97
   764   007A45  12                 	db	18
   765   007A46  3A                 	db	58
   766   007A47  40                 	db	64
   767   007A48  40                 	db	64
   768   007A49  20                 	db	32
   769   007A4A  7A                 	db	122
   770   007A4B  38                 	db	56
   771   007A4C  54                 	db	84
   772   007A4D  54                 	db	84
   773   007A4E  55                 	db	85
   774   007A4F  59                 	db	89
   775   007A50  21                 	db	33
   776   007A51  55                 	db	85
   777   007A52  55                 	db	85
   778   007A53  79                 	db	121
   779   007A54  41                 	db	65
   780   007A55  22                 	db	34
   781   007A56  54                 	db	84
   782   007A57  54                 	db	84
   783   007A58  78                 	db	120
   784   007A59  42                 	db	66
   785   007A5A  21                 	db	33
   786   007A5B  55                 	db	85
   787   007A5C  54                 	db	84
   788   007A5D  78                 	db	120
   789   007A5E  40                 	db	64
   790   007A5F  20                 	db	32
   791   007A60  54                 	db	84
   792   007A61  55                 	db	85
   793   007A62  79                 	db	121
   794   007A63  40                 	db	64
   795   007A64  0C                 	db	12
   796   007A65  1E                 	db	30
   797   007A66  52                 	db	82
   798   007A67  72                 	db	114
   799   007A68  12                 	db	18
   800   007A69  39                 	db	57
   801   007A6A  55                 	db	85
   802   007A6B  55                 	db	85
   803   007A6C  55                 	db	85
   804   007A6D  59                 	db	89
   805   007A6E  39                 	db	57
   806   007A6F  54                 	db	84
   807   007A70  54                 	db	84
   808   007A71  54                 	db	84
   809   007A72  59                 	db	89
   810   007A73  39                 	db	57
   811   007A74  55                 	db	85
   812   007A75  54                 	db	84
   813   007A76  54                 	db	84
   814   007A77  58                 	db	88
   815   007A78  00                 	db	0
   816   007A79  00                 	db	0
   817   007A7A  45                 	db	69
   818   007A7B  7C                 	db	124
   819   007A7C  41                 	db	65
   820   007A7D  00                 	db	0
   821   007A7E  02                 	db	2
   822   007A7F  45                 	db	69
   823   007A80  7D                 	db	125
   824   007A81  42                 	db	66
   825   007A82  00                 	db	0
   826   007A83  01                 	db	1
   827   007A84  45                 	db	69
   828   007A85  7C                 	db	124
   829   007A86  40                 	db	64
   830   007A87  7D                 	db	125
   831   007A88  12                 	db	18
   832   007A89  11                 	db	17
   833   007A8A  12                 	db	18
   834   007A8B  7D                 	db	125
   835   007A8C  F0                 	db	240
   836   007A8D  28                 	db	40
   837   007A8E  25                 	db	37
   838   007A8F  28                 	db	40
   839   007A90  F0                 	db	240
   840   007A91  7C                 	db	124
   841   007A92  54                 	db	84
   842   007A93  55                 	db	85
   843   007A94  45                 	db	69
   844   007A95  00                 	db	0
   845   007A96  20                 	db	32
   846   007A97  54                 	db	84
   847   007A98  54                 	db	84
   848   007A99  7C                 	db	124
   849   007A9A  54                 	db	84
   850   007A9B  7C                 	db	124
   851   007A9C  0A                 	db	10
   852   007A9D  09                 	db	9
   853   007A9E  7F                 	db	127
   854   007A9F  49                 	db	73
   855   007AA0  32                 	db	50
   856   007AA1  49                 	db	73
   857   007AA2  49                 	db	73
   858   007AA3  49                 	db	73
   859   007AA4  32                 	db	50
   860   007AA5  3A                 	db	58
   861   007AA6  44                 	db	68
   862   007AA7  44                 	db	68
   863   007AA8  44                 	db	68
   864   007AA9  3A                 	db	58
   865   007AAA  32                 	db	50
   866   007AAB  4A                 	db	74
   867   007AAC  48                 	db	72
   868   007AAD  48                 	db	72
   869   007AAE  30                 	db	48
   870   007AAF  3A                 	db	58
   871   007AB0  41                 	db	65
   872   007AB1  41                 	db	65
   873   007AB2  21                 	db	33
   874   007AB3  7A                 	db	122
   875   007AB4  3A                 	db	58
   876   007AB5  42                 	db	66
   877   007AB6  40                 	db	64
   878   007AB7  20                 	db	32
   879   007AB8  78                 	db	120
   880   007AB9  00                 	db	0
   881   007ABA  9D                 	db	157
   882   007ABB  A0                 	db	160
   883   007ABC  A0                 	db	160
   884   007ABD  7D                 	db	125
   885   007ABE  3D                 	db	61
   886   007ABF  42                 	db	66
   887   007AC0  42                 	db	66
   888   007AC1  42                 	db	66
   889   007AC2  3D                 	db	61
   890   007AC3  3D                 	db	61
   891   007AC4  40                 	db	64
   892   007AC5  40                 	db	64
   893   007AC6  40                 	db	64
   894   007AC7  3D                 	db	61
   895   007AC8  3C                 	db	60
   896   007AC9  24                 	db	36
   897   007ACA  FF                 	db	255
   898   007ACB  24                 	db	36
   899   007ACC  24                 	db	36
   900   007ACD  48                 	db	72
   901   007ACE  7E                 	db	126
   902   007ACF  49                 	db	73
   903   007AD0  43                 	db	67
   904   007AD1  66                 	db	102
   905   007AD2  2B                 	db	43
   906   007AD3  2F                 	db	47
   907   007AD4  FC                 	db	252
   908   007AD5  2F                 	db	47
   909   007AD6  2B                 	db	43
   910   007AD7  FF                 	db	255
   911   007AD8  09                 	db	9
   912   007AD9  29                 	db	41
   913   007ADA  F6                 	db	246
   914   007ADB  20                 	db	32
   915   007ADC  C0                 	db	192
   916   007ADD  88                 	db	136
   917   007ADE  7E                 	db	126
   918   007ADF  09                 	db	9
   919   007AE0  03                 	db	3
   920   007AE1  20                 	db	32
   921   007AE2  54                 	db	84
   922   007AE3  54                 	db	84
   923   007AE4  79                 	db	121
   924   007AE5  41                 	db	65
   925   007AE6  00                 	db	0
   926   007AE7  00                 	db	0
   927   007AE8  44                 	db	68
   928   007AE9  7D                 	db	125
   929   007AEA  41                 	db	65
   930   007AEB  30                 	db	48
   931   007AEC  48                 	db	72
   932   007AED  48                 	db	72
   933   007AEE  4A                 	db	74
   934   007AEF  32                 	db	50
   935   007AF0  38                 	db	56
   936   007AF1  40                 	db	64
   937   007AF2  40                 	db	64
   938   007AF3  22                 	db	34
   939   007AF4  7A                 	db	122
   940   007AF5  00                 	db	0
   941   007AF6  7A                 	db	122
   942   007AF7  0A                 	db	10
   943   007AF8  0A                 	db	10
   944   007AF9  72                 	db	114
   945   007AFA  7D                 	db	125
   946   007AFB  0D                 	db	13
   947   007AFC  19                 	db	25
   948   007AFD  31                 	db	49
   949   007AFE  7D                 	db	125
   950   007AFF  26                 	db	38
   951   007B00  29                 	db	41
   952   007B01  29                 	db	41
   953   007B02  2F                 	db	47
   954   007B03  28                 	db	40
   955   007B04  26                 	db	38
   956   007B05  29                 	db	41
   957   007B06  29                 	db	41
   958   007B07  29                 	db	41
   959   007B08  26                 	db	38
   960   007B09  30                 	db	48
   961   007B0A  48                 	db	72
   962   007B0B  4D                 	db	77
   963   007B0C  40                 	db	64
   964   007B0D  20                 	db	32
   965   007B0E  38                 	db	56
   966   007B0F  08                 	db	8
   967   007B10  08                 	db	8
   968   007B11  08                 	db	8
   969   007B12  08                 	db	8
   970   007B13  08                 	db	8
   971   007B14  08                 	db	8
   972   007B15  08                 	db	8
   973   007B16  08                 	db	8
   974   007B17  38                 	db	56
   975   007B18  2F                 	db	47
   976   007B19  10                 	db	16
   977   007B1A  C8                 	db	200
   978   007B1B  AC                 	db	172
   979   007B1C  BA                 	db	186
   980   007B1D  2F                 	db	47
   981   007B1E  10                 	db	16
   982   007B1F  28                 	db	40
   983   007B20  34                 	db	52
   984   007B21  FA                 	db	250
   985   007B22  00                 	db	0
   986   007B23  00                 	db	0
   987   007B24  7B                 	db	123
   988   007B25  00                 	db	0
   989   007B26  00                 	db	0
   990   007B27  08                 	db	8
   991   007B28  14                 	db	20
   992   007B29  2A                 	db	42
   993   007B2A  14                 	db	20
   994   007B2B  22                 	db	34
   995   007B2C  22                 	db	34
   996   007B2D  14                 	db	20
   997   007B2E  2A                 	db	42
   998   007B2F  14                 	db	20
   999   007B30  08                 	db	8
  1000   007B31  55                 	db	85
  1001   007B32  00                 	db	0
  1002   007B33  55                 	db	85
  1003   007B34  00                 	db	0
  1004   007B35  55                 	db	85
  1005   007B36  AA                 	db	170
  1006   007B37  55                 	db	85
  1007   007B38  AA                 	db	170
  1008   007B39  55                 	db	85
  1009   007B3A  AA                 	db	170
  1010   007B3B  FF                 	db	255
  1011   007B3C  55                 	db	85
  1012   007B3D  FF                 	db	255
  1013   007B3E  55                 	db	85
  1014   007B3F  FF                 	db	255
  1015   007B40  00                 	db	0
  1016   007B41  00                 	db	0
  1017   007B42  00                 	db	0
  1018   007B43  FF                 	db	255
  1019   007B44  00                 	db	0
  1020   007B45  10                 	db	16
  1021   007B46  10                 	db	16
  1022   007B47  10                 	db	16
  1023   007B48  FF                 	db	255
  1024   007B49  00                 	db	0
  1025   007B4A  14                 	db	20
  1026   007B4B  14                 	db	20
  1027   007B4C  14                 	db	20
  1028   007B4D  FF                 	db	255
  1029   007B4E  00                 	db	0
  1030   007B4F  10                 	db	16
  1031   007B50  10                 	db	16
  1032   007B51  FF                 	db	255
  1033   007B52  00                 	db	0
  1034   007B53  FF                 	db	255
  1035   007B54  10                 	db	16
  1036   007B55  10                 	db	16
  1037   007B56  F0                 	db	240
  1038   007B57  10                 	db	16
  1039   007B58  F0                 	db	240
  1040   007B59  14                 	db	20
  1041   007B5A  14                 	db	20
  1042   007B5B  14                 	db	20
  1043   007B5C  FC                 	db	252
  1044   007B5D  00                 	db	0
  1045   007B5E  14                 	db	20
  1046   007B5F  14                 	db	20
  1047   007B60  F7                 	db	247
  1048   007B61  00                 	db	0
  1049   007B62  FF                 	db	255
  1050   007B63  00                 	db	0
  1051   007B64  00                 	db	0
  1052   007B65  FF                 	db	255
  1053   007B66  00                 	db	0
  1054   007B67  FF                 	db	255
  1055   007B68  14                 	db	20
  1056   007B69  14                 	db	20
  1057   007B6A  F4                 	db	244
  1058   007B6B  04                 	db	4
  1059   007B6C  FC                 	db	252
  1060   007B6D  14                 	db	20
  1061   007B6E  14                 	db	20
  1062   007B6F  17                 	db	23
  1063   007B70  10                 	db	16
  1064   007B71  1F                 	db	31
  1065   007B72  10                 	db	16
  1066   007B73  10                 	db	16
  1067   007B74  1F                 	db	31
  1068   007B75  10                 	db	16
  1069   007B76  1F                 	db	31
  1070   007B77  14                 	db	20
  1071   007B78  14                 	db	20
  1072   007B79  14                 	db	20
  1073   007B7A  1F                 	db	31
  1074   007B7B  00                 	db	0
  1075   007B7C  10                 	db	16
  1076   007B7D  10                 	db	16
  1077   007B7E  10                 	db	16
  1078   007B7F  F0                 	db	240
  1079   007B80  00                 	db	0
  1080   007B81  00                 	db	0
  1081   007B82  00                 	db	0
  1082   007B83  00                 	db	0
  1083   007B84  1F                 	db	31
  1084   007B85  10                 	db	16
  1085   007B86  10                 	db	16
  1086   007B87  10                 	db	16
  1087   007B88  10                 	db	16
  1088   007B89  1F                 	db	31
  1089   007B8A  10                 	db	16
  1090   007B8B  10                 	db	16
  1091   007B8C  10                 	db	16
  1092   007B8D  10                 	db	16
  1093   007B8E  F0                 	db	240
  1094   007B8F  10                 	db	16
  1095   007B90  00                 	db	0
  1096   007B91  00                 	db	0
  1097   007B92  00                 	db	0
  1098   007B93  FF                 	db	255
  1099   007B94  10                 	db	16
  1100   007B95  10                 	db	16
  1101   007B96  10                 	db	16
  1102   007B97  10                 	db	16
  1103   007B98  10                 	db	16
  1104   007B99  10                 	db	16
  1105   007B9A  10                 	db	16
  1106   007B9B  10                 	db	16
  1107   007B9C  10                 	db	16
  1108   007B9D  FF                 	db	255
  1109   007B9E  10                 	db	16
  1110   007B9F  00                 	db	0
  1111   007BA0  00                 	db	0
  1112   007BA1  00                 	db	0
  1113   007BA2  FF                 	db	255
  1114   007BA3  14                 	db	20
  1115   007BA4  00                 	db	0
  1116   007BA5  00                 	db	0
  1117   007BA6  FF                 	db	255
  1118   007BA7  00                 	db	0
  1119   007BA8  FF                 	db	255
  1120   007BA9  00                 	db	0
  1121   007BAA  00                 	db	0
  1122   007BAB  1F                 	db	31
  1123   007BAC  10                 	db	16
  1124   007BAD  17                 	db	23
  1125   007BAE  00                 	db	0
  1126   007BAF  00                 	db	0
  1127   007BB0  FC                 	db	252
  1128   007BB1  04                 	db	4
  1129   007BB2  F4                 	db	244
  1130   007BB3  14                 	db	20
  1131   007BB4  14                 	db	20
  1132   007BB5  17                 	db	23
  1133   007BB6  10                 	db	16
  1134   007BB7  17                 	db	23
  1135   007BB8  14                 	db	20
  1136   007BB9  14                 	db	20
  1137   007BBA  F4                 	db	244
  1138   007BBB  04                 	db	4
  1139   007BBC  F4                 	db	244
  1140   007BBD  00                 	db	0
  1141   007BBE  00                 	db	0
  1142   007BBF  FF                 	db	255
  1143   007BC0  00                 	db	0
  1144   007BC1  F7                 	db	247
  1145   007BC2  14                 	db	20
  1146   007BC3  14                 	db	20
  1147   007BC4  14                 	db	20
  1148   007BC5  14                 	db	20
  1149   007BC6  14                 	db	20
  1150   007BC7  14                 	db	20
  1151   007BC8  14                 	db	20
  1152   007BC9  F7                 	db	247
  1153   007BCA  00                 	db	0
  1154   007BCB  F7                 	db	247
  1155   007BCC  14                 	db	20
  1156   007BCD  14                 	db	20
  1157   007BCE  14                 	db	20
  1158   007BCF  17                 	db	23
  1159   007BD0  14                 	db	20
  1160   007BD1  10                 	db	16
  1161   007BD2  10                 	db	16
  1162   007BD3  1F                 	db	31
  1163   007BD4  10                 	db	16
  1164   007BD5  1F                 	db	31
  1165   007BD6  14                 	db	20
  1166   007BD7  14                 	db	20
  1167   007BD8  14                 	db	20
  1168   007BD9  F4                 	db	244
  1169   007BDA  14                 	db	20
  1170   007BDB  10                 	db	16
  1171   007BDC  10                 	db	16
  1172   007BDD  F0                 	db	240
  1173   007BDE  10                 	db	16
  1174   007BDF  F0                 	db	240
  1175   007BE0  00                 	db	0
  1176   007BE1  00                 	db	0
  1177   007BE2  1F                 	db	31
  1178   007BE3  10                 	db	16
  1179   007BE4  1F                 	db	31
  1180   007BE5  00                 	db	0
  1181   007BE6  00                 	db	0
  1182   007BE7  00                 	db	0
  1183   007BE8  1F                 	db	31
  1184   007BE9  14                 	db	20
  1185   007BEA  00                 	db	0
  1186   007BEB  00                 	db	0
  1187   007BEC  00                 	db	0
  1188   007BED  FC                 	db	252
  1189   007BEE  14                 	db	20
  1190   007BEF  00                 	db	0
  1191   007BF0  00                 	db	0
  1192   007BF1  F0                 	db	240
  1193   007BF2  10                 	db	16
  1194   007BF3  F0                 	db	240
  1195   007BF4  10                 	db	16
  1196   007BF5  10                 	db	16
  1197   007BF6  FF                 	db	255
  1198   007BF7  10                 	db	16
  1199   007BF8  FF                 	db	255
  1200   007BF9  14                 	db	20
  1201   007BFA  14                 	db	20
  1202   007BFB  14                 	db	20
  1203   007BFC  FF                 	db	255
  1204   007BFD  14                 	db	20
  1205   007BFE  10                 	db	16
  1206   007BFF  10                 	db	16
  1207   007C00  10                 	db	16
  1208   007C01  1F                 	db	31
  1209   007C02  00                 	db	0
  1210   007C03  00                 	db	0
  1211   007C04  00                 	db	0
  1212   007C05  00                 	db	0
  1213   007C06  F0                 	db	240
  1214   007C07  10                 	db	16
  1215   007C08  FF                 	db	255
  1216   007C09  FF                 	db	255
  1217   007C0A  FF                 	db	255
  1218   007C0B  FF                 	db	255
  1219   007C0C  FF                 	db	255
  1220   007C0D  F0                 	db	240
  1221   007C0E  F0                 	db	240
  1222   007C0F  F0                 	db	240
  1223   007C10  F0                 	db	240
  1224   007C11  F0                 	db	240
  1225   007C12  FF                 	db	255
  1226   007C13  FF                 	db	255
  1227   007C14  FF                 	db	255
  1228   007C15  00                 	db	0
  1229   007C16  00                 	db	0
  1230   007C17  00                 	db	0
  1231   007C18  00                 	db	0
  1232   007C19  00                 	db	0
  1233   007C1A  FF                 	db	255
  1234   007C1B  FF                 	db	255
  1235   007C1C  0F                 	db	15
  1236   007C1D  0F                 	db	15
  1237   007C1E  0F                 	db	15
  1238   007C1F  0F                 	db	15
  1239   007C20  0F                 	db	15
  1240   007C21  38                 	db	56
  1241   007C22  44                 	db	68
  1242   007C23  44                 	db	68
  1243   007C24  38                 	db	56
  1244   007C25  44                 	db	68
  1245   007C26  FC                 	db	252
  1246   007C27  4A                 	db	74
  1247   007C28  4A                 	db	74
  1248   007C29  4A                 	db	74
  1249   007C2A  34                 	db	52
  1250   007C2B  7E                 	db	126
  1251   007C2C  02                 	db	2
  1252   007C2D  02                 	db	2
  1253   007C2E  06                 	db	6
  1254   007C2F  06                 	db	6
  1255   007C30  02                 	db	2
  1256   007C31  7E                 	db	126
  1257   007C32  02                 	db	2
  1258   007C33  7E                 	db	126
  1259   007C34  02                 	db	2
  1260   007C35  63                 	db	99
  1261   007C36  55                 	db	85
  1262   007C37  49                 	db	73
  1263   007C38  41                 	db	65
  1264   007C39  63                 	db	99
  1265   007C3A  38                 	db	56
  1266   007C3B  44                 	db	68
  1267   007C3C  44                 	db	68
  1268   007C3D  3C                 	db	60
  1269   007C3E  04                 	db	4
  1270   007C3F  40                 	db	64
  1271   007C40  7E                 	db	126
  1272   007C41  20                 	db	32
  1273   007C42  1E                 	db	30
  1274   007C43  20                 	db	32
  1275   007C44  06                 	db	6
  1276   007C45  02                 	db	2
  1277   007C46  7E                 	db	126
  1278   007C47  02                 	db	2
  1279   007C48  02                 	db	2
  1280   007C49  99                 	db	153
  1281   007C4A  A5                 	db	165
  1282   007C4B  E7                 	db	231
  1283   007C4C  A5                 	db	165
  1284   007C4D  99                 	db	153
  1285   007C4E  1C                 	db	28
  1286   007C4F  2A                 	db	42
  1287   007C50  49                 	db	73
  1288   007C51  2A                 	db	42
  1289   007C52  1C                 	db	28
  1290   007C53  4C                 	db	76
  1291   007C54  72                 	db	114
  1292   007C55  01                 	db	1
  1293   007C56  72                 	db	114
  1294   007C57  4C                 	db	76
  1295   007C58  30                 	db	48
  1296   007C59  4A                 	db	74
  1297   007C5A  4D                 	db	77
  1298   007C5B  4D                 	db	77
  1299   007C5C  30                 	db	48
  1300   007C5D  30                 	db	48
  1301   007C5E  48                 	db	72
  1302   007C5F  78                 	db	120
  1303   007C60  48                 	db	72
  1304   007C61  30                 	db	48
  1305   007C62  BC                 	db	188
  1306   007C63  62                 	db	98
  1307   007C64  5A                 	db	90
  1308   007C65  46                 	db	70
  1309   007C66  3D                 	db	61
  1310   007C67  3E                 	db	62
  1311   007C68  49                 	db	73
  1312   007C69  49                 	db	73
  1313   007C6A  49                 	db	73
  1314   007C6B  00                 	db	0
  1315   007C6C  7E                 	db	126
  1316   007C6D  01                 	db	1
  1317   007C6E  01                 	db	1
  1318   007C6F  01                 	db	1
  1319   007C70  7E                 	db	126
  1320   007C71  2A                 	db	42
  1321   007C72  2A                 	db	42
  1322   007C73  2A                 	db	42
  1323   007C74  2A                 	db	42
  1324   007C75  2A                 	db	42
  1325   007C76  44                 	db	68
  1326   007C77  44                 	db	68
  1327   007C78  5F                 	db	95
  1328   007C79  44                 	db	68
  1329   007C7A  44                 	db	68
  1330   007C7B  40                 	db	64
  1331   007C7C  51                 	db	81
  1332   007C7D  4A                 	db	74
  1333   007C7E  44                 	db	68
  1334   007C7F  40                 	db	64
  1335   007C80  40                 	db	64
  1336   007C81  44                 	db	68
  1337   007C82  4A                 	db	74
  1338   007C83  51                 	db	81
  1339   007C84  40                 	db	64
  1340   007C85  00                 	db	0
  1341   007C86  00                 	db	0
  1342   007C87  FF                 	db	255
  1343   007C88  01                 	db	1
  1344   007C89  03                 	db	3
  1345   007C8A  E0                 	db	224
  1346   007C8B  80                 	db	128
  1347   007C8C  FF                 	db	255
  1348   007C8D  00                 	db	0
  1349   007C8E  00                 	db	0
  1350   007C8F  08                 	db	8
  1351   007C90  08                 	db	8
  1352   007C91  6B                 	db	107
  1353   007C92  6B                 	db	107
  1354   007C93  08                 	db	8
  1355   007C94  36                 	db	54
  1356   007C95  12                 	db	18
  1357   007C96  36                 	db	54
  1358   007C97  24                 	db	36
  1359   007C98  36                 	db	54
  1360   007C99  06                 	db	6
  1361   007C9A  0F                 	db	15
  1362   007C9B  09                 	db	9
  1363   007C9C  0F                 	db	15
  1364   007C9D  06                 	db	6
  1365   007C9E  00                 	db	0
  1366   007C9F  00                 	db	0
  1367   007CA0  18                 	db	24
  1368   007CA1  18                 	db	24
  1369   007CA2  00                 	db	0
  1370   007CA3  00                 	db	0
  1371   007CA4  00                 	db	0
  1372   007CA5  10                 	db	16
  1373   007CA6  10                 	db	16
  1374   007CA7  00                 	db	0
  1375   007CA8  30                 	db	48
  1376   007CA9  40                 	db	64
  1377   007CAA  FF                 	db	255
  1378   007CAB  01                 	db	1
  1379   007CAC  01                 	db	1
  1380   007CAD  00                 	db	0
  1381   007CAE  1F                 	db	31
  1382   007CAF  01                 	db	1
  1383   007CB0  01                 	db	1
  1384   007CB1  1E                 	db	30
  1385   007CB2  00                 	db	0
  1386   007CB3  19                 	db	25
  1387   007CB4  1D                 	db	29
  1388   007CB5  17                 	db	23
  1389   007CB6  12                 	db	18
  1390   007CB7  00                 	db	0
  1391   007CB8  3C                 	db	60
  1392   007CB9  3C                 	db	60
  1393   007CBA  3C                 	db	60
  1394   007CBB  3C                 	db	60
  1395   007CBC  00                 	db	0
  1396   007CBD  00                 	db	0
  1397   007CBE  00                 	db	0
  1398   007CBF  00                 	db	0
  1399   007CC0  00                 	db	0
  1400   007CC1                     __end_of_font:
  1401                           	callstack 0
  1402   007CC1                     _Rcmd2green160x80:
  1403                           	callstack 0
  1404   007CC1  02                 	db	2
  1405   007CC2  2A                 	db	42
  1406   007CC3  04                 	db	4
  1407   007CC4  00                 	db	0
  1408   007CC5  00                 	db	0
  1409   007CC6  00                 	db	0
  1410   007CC7  7F                 	db	127
  1411   007CC8  2B                 	db	43
  1412   007CC9  04                 	db	4
  1413   007CCA  00                 	db	0
  1414   007CCB  00                 	db	0
  1415   007CCC  00                 	db	0
  1416   007CCD  9F                 	db	159
  1417   007CCE                     __end_of_Rcmd2green160x80:
  1418                           	callstack 0
  1419   007CCE                     _Rcmd2red:
  1420                           	callstack 0
  1421   007CCE  02                 	db	2
  1422   007CCF  2A                 	db	42
  1423   007CD0  04                 	db	4
  1424   007CD1  00                 	db	0
  1425   007CD2  00                 	db	0
  1426   007CD3  00                 	db	0
  1427   007CD4  7F                 	db	127
  1428   007CD5  2B                 	db	43
  1429   007CD6  04                 	db	4
  1430   007CD7  00                 	db	0
  1431   007CD8  00                 	db	0
  1432   007CD9  00                 	db	0
  1433   007CDA  9F                 	db	159
  1434   007CDB                     __end_of_Rcmd2red:
  1435                           	callstack 0
  1436   007CDB                     _Rcmd2green:
  1437                           	callstack 0
  1438   007CDB  02                 	db	2
  1439   007CDC  2A                 	db	42
  1440   007CDD  04                 	db	4
  1441   007CDE  00                 	db	0
  1442   007CDF  02                 	db	2
  1443   007CE0  00                 	db	0
  1444   007CE1  81                 	db	129
  1445   007CE2  2B                 	db	43
  1446   007CE3  04                 	db	4
  1447   007CE4  00                 	db	0
  1448   007CE5  01                 	db	1
  1449   007CE6  00                 	db	0
  1450   007CE7  A0                 	db	160
  1451   007CE8                     __end_of_Rcmd2green:
  1452                           	callstack 0
  1453   007CE8                     _Bcmd:
  1454                           	callstack 0
  1455   007CE8  12                 	db	18
  1456   007CE9  01                 	db	1
  1457   007CEA  80                 	db	128
  1458   007CEB  32                 	db	50
  1459   007CEC  11                 	db	17
  1460   007CED  80                 	db	128
  1461   007CEE  FF                 	db	255
  1462   007CEF  3A                 	db	58
  1463   007CF0  81                 	db	129
  1464   007CF1  05                 	db	5
  1465   007CF2  0A                 	db	10
  1466   007CF3  B1                 	db	177
  1467   007CF4  83                 	db	131
  1468   007CF5  00                 	db	0
  1469   007CF6  06                 	db	6
  1470   007CF7  03                 	db	3
  1471   007CF8  0A                 	db	10
  1472   007CF9  36                 	db	54
  1473   007CFA  01                 	db	1
  1474   007CFB  08                 	db	8
  1475   007CFC  B6                 	db	182
  1476   007CFD  02                 	db	2
  1477   007CFE  15                 	db	21
  1478   007CFF  02                 	db	2
  1479   007D00  B4                 	db	180
  1480   007D01  01                 	db	1
  1481   007D02  00                 	db	0
  1482   007D03  C0                 	db	192
  1483   007D04  82                 	db	130
  1484   007D05  02                 	db	2
  1485   007D06  70                 	db	112
  1486   007D07  0A                 	db	10
  1487   007D08  C1                 	db	193
  1488   007D09  01                 	db	1
  1489   007D0A  05                 	db	5
  1490   007D0B  C2                 	db	194
  1491   007D0C  02                 	db	2
  1492   007D0D  01                 	db	1
  1493   007D0E  02                 	db	2
  1494   007D0F  C5                 	db	197
  1495   007D10  82                 	db	130
  1496   007D11  3C                 	db	60
  1497   007D12  38                 	db	56
  1498   007D13  0A                 	db	10
  1499   007D14  FC                 	db	252
  1500   007D15  02                 	db	2
  1501   007D16  11                 	db	17
  1502   007D17  15                 	db	21
  1503   007D18  E0                 	db	224
  1504   007D19  10                 	db	16
  1505   007D1A  09                 	db	9
  1506   007D1B  16                 	db	22
  1507   007D1C  09                 	db	9
  1508   007D1D  20                 	db	32
  1509   007D1E  21                 	db	33
  1510   007D1F  1B                 	db	27
  1511   007D20  13                 	db	19
  1512   007D21  19                 	db	25
  1513   007D22  17                 	db	23
  1514   007D23  15                 	db	21
  1515   007D24  1E                 	db	30
  1516   007D25  2B                 	db	43
  1517   007D26  04                 	db	4
  1518   007D27  05                 	db	5
  1519   007D28  02                 	db	2
  1520   007D29  0E                 	db	14
  1521   007D2A  E1                 	db	225
  1522   007D2B  90                 	db	144
  1523   007D2C  0B                 	db	11
  1524   007D2D  14                 	db	20
  1525   007D2E  08                 	db	8
  1526   007D2F  1E                 	db	30
  1527   007D30  22                 	db	34
  1528   007D31  1D                 	db	29
  1529   007D32  18                 	db	24
  1530   007D33  1E                 	db	30
  1531   007D34  1B                 	db	27
  1532   007D35  1A                 	db	26
  1533   007D36  24                 	db	36
  1534   007D37  2B                 	db	43
  1535   007D38  06                 	db	6
  1536   007D39  06                 	db	6
  1537   007D3A  02                 	db	2
  1538   007D3B  0F                 	db	15
  1539   007D3C  0A                 	db	10
  1540   007D3D  2A                 	db	42
  1541   007D3E  04                 	db	4
  1542   007D3F  00                 	db	0
  1543   007D40  02                 	db	2
  1544   007D41  00                 	db	0
  1545   007D42  81                 	db	129
  1546   007D43  2B                 	db	43
  1547   007D44  04                 	db	4
  1548   007D45  00                 	db	0
  1549   007D46  02                 	db	2
  1550   007D47  00                 	db	0
  1551   007D48  81                 	db	129
  1552   007D49  13                 	db	19
  1553   007D4A  80                 	db	128
  1554   007D4B  0A                 	db	10
  1555   007D4C  29                 	db	41
  1556   007D4D  80                 	db	128
  1557   007D4E  FF                 	db	255
  1558   007D4F                     __end_of_Bcmd:
  1559                           	callstack 0
  1560   007D4F                     _Rcmd3:
  1561                           	callstack 0
  1562   007D4F  04                 	db	4
  1563   007D50  E0                 	db	224
  1564   007D51  10                 	db	16
  1565   007D52  02                 	db	2
  1566   007D53  1C                 	db	28
  1567   007D54  07                 	db	7
  1568   007D55  12                 	db	18
  1569   007D56  37                 	db	55
  1570   007D57  32                 	db	50
  1571   007D58  29                 	db	41
  1572   007D59  2D                 	db	45
  1573   007D5A  29                 	db	41
  1574   007D5B  25                 	db	37
  1575   007D5C  2B                 	db	43
  1576   007D5D  39                 	db	57
  1577   007D5E  00                 	db	0
  1578   007D5F  01                 	db	1
  1579   007D60  03                 	db	3
  1580   007D61  10                 	db	16
  1581   007D62  E1                 	db	225
  1582   007D63  10                 	db	16
  1583   007D64  03                 	db	3
  1584   007D65  1D                 	db	29
  1585   007D66  07                 	db	7
  1586   007D67  06                 	db	6
  1587   007D68  2E                 	db	46
  1588   007D69  2C                 	db	44
  1589   007D6A  29                 	db	41
  1590   007D6B  2D                 	db	45
  1591   007D6C  2E                 	db	46
  1592   007D6D  2E                 	db	46
  1593   007D6E  37                 	db	55
  1594   007D6F  3F                 	db	63
  1595   007D70  00                 	db	0
  1596   007D71  00                 	db	0
  1597   007D72  02                 	db	2
  1598   007D73  10                 	db	16
  1599   007D74  13                 	db	19
  1600   007D75  80                 	db	128
  1601   007D76  0A                 	db	10
  1602   007D77  29                 	db	41
  1603   007D78  80                 	db	128
  1604   007D79  64                 	db	100
  1605   007D7A                     __end_of_Rcmd3:
  1606                           	callstack 0
  1607   007D7A                     _Rcmd1:
  1608                           	callstack 0
  1609   007D7A  06                 	db	6
  1610   007D7B  01                 	db	1
  1611   007D7C  80                 	db	128
  1612   007D7D  96                 	db	150
  1613   007D7E  11                 	db	17
  1614   007D7F  80                 	db	128
  1615   007D80  0A                 	db	10
  1616   007D81  3A                 	db	58
  1617   007D82  81                 	db	129
  1618   007D83  55                 	db	85
  1619   007D84  0A                 	db	10
  1620   007D85  36                 	db	54
  1621   007D86  01                 	db	1
  1622   007D87  08                 	db	8
  1623   007D88  13                 	db	19
  1624   007D89  80                 	db	128
  1625   007D8A  0A                 	db	10
  1626   007D8B  29                 	db	41
  1627   007D8C  80                 	db	128
  1628   007D8D  0A                 	db	10
  1629   007D8E                     __end_of_Rcmd1:
  1630                           	callstack 0
  1631   007D8E                     _Rcmd2green144:
  1632                           	callstack 0
  1633   007D8E  02                 	db	2
  1634   007D8F  2A                 	db	42
  1635   007D90  04                 	db	4
  1636   007D91  00                 	db	0
  1637   007D92  00                 	db	0
  1638   007D93  00                 	db	0
  1639   007D94  7F                 	db	127
  1640   007D95  2B                 	db	43
  1641   007D96  04                 	db	4
  1642   007D97  00                 	db	0
  1643   007D98  00                 	db	0
  1644   007D99  00                 	db	0
  1645   007D9A  7F                 	db	127
  1646   007D9B                     __end_of_Rcmd2green144:
  1647                           	callstack 0
  1648   000000                     _TRISCbits	set	3988
  1649   000000                     _TRISDbits	set	3989
  1650   000000                     _LATDbits	set	3980
  1651   000000                     _ADCON0bits	set	4034
  1652   000000                     _LATD	set	3980
  1653   000000                     _TRISD	set	3989
  1654   000000                     _PIR1bits	set	3998
  1655   000000                     _ADCON2	set	4032
  1656   000000                     _ADCON1	set	4033
  1657   000000                     _SSPCON1bits	set	4038
  1658   000000                     _ADRESH	set	4036
  1659   000000                     _ADRESL	set	4035
  1660   000000                     _ADCON0	set	4034
  1661   000000                     _TRISE	set	3990
  1662   000000                     _TRISAbits	set	3986
  1663   000000                     _TRISBbits	set	3987
  1664   000000                     _LATE	set	3981
  1665   000000                     _SSPBUF	set	4041
  1666   000000                     _SSPSTATbits	set	4039
  1667   007D9B                     STR_2:
  1668   007D9B  3C                 	db	60	;'<'
  1669   007D9C  6D                 	db	109	;'m'
  1670   007D9D  65                 	db	101	;'e'
  1671   007D9E  64                 	db	100	;'d'
  1672   007D9F  69                 	db	105	;'i'
  1673   007DA0  64                 	db	100	;'d'
  1674   007DA1  61                 	db	97	;'a'
  1675   007DA2  20                 	db	32
  1676   007DA3  72                 	db	114	;'r'
  1677   007DA4  65                 	db	101	;'e'
  1678   007DA5  73                 	db	115	;'s'
  1679   007DA6  69                 	db	105	;'i'
  1680   007DA7  73                 	db	115	;'s'
  1681   007DA8  74                 	db	116	;'t'
  1682   007DA9  65                 	db	101	;'e'
  1683   007DAA  6E                 	db	110	;'n'
  1684   007DAB  63                 	db	99	;'c'
  1685   007DAC  69                 	db	105	;'i'
  1686   007DAD  61                 	db	97	;'a'
  1687   007DAE  3E                 	db	62	;'>'
  1688   007DAF  00                 	db	0
  1689   007DB0                     STR_1:
  1690   007DB0  25                 	db	37
  1691   007DB1  30                 	db	48	;'0'
  1692   007DB2  2E                 	db	46
  1693   007DB3  32                 	db	50	;'2'
  1694   007DB4  66                 	db	102	;'f'
  1695   007DB5  00                 	db	0
  1696   007DB6                     STR_3:
  1697   007DB6  69                 	db	105	;'i'
  1698   007DB7  6E                 	db	110	;'n'
  1699   007DB8  66                 	db	102	;'f'
  1700   007DB9  00                 	db	0
  1701   007DBA                     STR_6:
  1702   007DBA  6E                 	db	110	;'n'
  1703   007DBB  61                 	db	97	;'a'
  1704   007DBC  6E                 	db	110	;'n'
  1705   007DBD  00                 	db	0
  1706   007DBE  00                 	db	0	; dummy byte at the end
  1707   000000                     
  1708                           ; #config settings
  1709                           
  1710                           	psect	cinit
  1711   004966                     __pcinit:
  1712                           	callstack 0
  1713   004966                     start_initialization:
  1714                           	callstack 0
  1715   004966                     __initialization:
  1716                           	callstack 0
  1717                           
  1718                           ; Initialize objects allocated to BANK0 (5 bytes)
  1719                           ; load TBLPTR registers with __pidataBANK0
  1720   004966  0EF5               	movlw	low __pidataBANK0
  1721   004968  6EF6               	movwf	tblptrl,c
  1722   00496A  0E45               	movlw	high __pidataBANK0
  1723   00496C  6EF7               	movwf	tblptrh,c
  1724   00496E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1725   004970  6EF8               	movwf	tblptru,c
  1726   004972  EE00  F0BC         	lfsr	0,__pdataBANK0
  1727   004976  EE10 F005          	lfsr	1,5
  1728   00497A                     copy_data0:
  1729   00497A  0009               	tblrd		*+
  1730   00497C  CFF5 FFEE          	movff	tablat,postinc0
  1731   004980  50E5               	movf	postdec1,w,c
  1732   004982  50E1               	movf	fsr1l,w,c
  1733   004984  E1FA               	bnz	copy_data0
  1734                           
  1735                           ; Initialize objects allocated to COMRAM (1 bytes)
  1736                           ; load TBLPTR registers with __pidataCOMRAM
  1737   004986  0EF4               	movlw	low __pidataCOMRAM
  1738   004988  6EF6               	movwf	tblptrl,c
  1739   00498A  0E45               	movlw	high __pidataCOMRAM
  1740   00498C  6EF7               	movwf	tblptrh,c
  1741   00498E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1742   004990  6EF8               	movwf	tblptru,c
  1743   004992  0009               	tblrd		*+	;fetch initializer
  1744   004994  CFF5 F05E          	movff	tablat,__pdataCOMRAM
  1745                           
  1746                           ; Clear objects allocated to BANK1 (80 bytes)
  1747   004998  EE01  F000         	lfsr	0,__pbssBANK1
  1748   00499C  0E50               	movlw	80
  1749   00499E                     clear_0:
  1750   00499E  6AEE               	clrf	postinc0,c
  1751   0049A0  06E8               	decf	wreg,f,c
  1752   0049A2  E1FD               	bnz	clear_0
  1753                           
  1754                           ; Clear objects allocated to BANK0 (17 bytes)
  1755   0049A4  EE00  F0AB         	lfsr	0,__pbssBANK0
  1756   0049A8  0E11               	movlw	17
  1757   0049AA                     clear_1:
  1758   0049AA  6AEE               	clrf	postinc0,c
  1759   0049AC  06E8               	decf	wreg,f,c
  1760   0049AE  E1FD               	bnz	clear_1
  1761                           
  1762                           ; Clear objects allocated to COMRAM (8 bytes)
  1763   0049B0  EE00  F056         	lfsr	0,__pbssCOMRAM
  1764   0049B4  0E08               	movlw	8
  1765   0049B6                     clear_2:
  1766   0049B6  6AEE               	clrf	postinc0,c
  1767   0049B8  06E8               	decf	wreg,f,c
  1768   0049BA  E1FD               	bnz	clear_2
  1769   0049BC                     end_of_initialization:
  1770                           	callstack 0
  1771   0049BC                     __end_of__initialization:
  1772                           	callstack 0
  1773   0049BC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1774   0049BE  6EF8               	movwf	tblptru,c
  1775   0049C0  0100               	movlb	0
  1776   0049C2  EF9D  F029         	goto	_main	;jump to C main() function
  1777                           
  1778                           	psect	bssCOMRAM
  1779   000056                     __pbssCOMRAM:
  1780                           	callstack 0
  1781   000056                     _cursor_y:
  1782                           	callstack 0
  1783   000056                     	ds	2
  1784   000058                     _cursor_x:
  1785                           	callstack 0
  1786   000058                     	ds	2
  1787   00005A                     _tabcolor:
  1788                           	callstack 0
  1789   00005A                     	ds	1
  1790   00005B                     __colstart:
  1791                           	callstack 0
  1792   00005B                     	ds	1
  1793   00005C                     __height:
  1794                           	callstack 0
  1795   00005C                     	ds	1
  1796   00005D                     __width:
  1797                           	callstack 0
  1798   00005D                     	ds	1
  1799                           
  1800                           	psect	dataCOMRAM
  1801   00005E                     __pdataCOMRAM:
  1802                           	callstack 0
  1803   00005E                     _textsize:
  1804                           	callstack 0
  1805   00005E                     	ds	1
  1806                           
  1807                           	psect	bssBANK0
  1808   0000AB                     __pbssBANK0:
  1809                           	callstack 0
  1810   0000AB                     floorf@F521:
  1811                           	callstack 0
  1812   0000AB                     	ds	4
  1813   0000AF                     ___fpclassifyf@F465:
  1814                           	callstack 0
  1815   0000AF                     	ds	4
  1816   0000B3                     _width:
  1817                           	callstack 0
  1818   0000B3                     	ds	2
  1819   0000B5                     _prec:
  1820                           	callstack 0
  1821   0000B5                     	ds	2
  1822   0000B7                     _flags:
  1823                           	callstack 0
  1824   0000B7                     	ds	1
  1825   0000B8                     _rotation:
  1826                           	callstack 0
  1827   0000B8                     	ds	1
  1828   0000B9                     __rowstart:
  1829                           	callstack 0
  1830   0000B9                     	ds	1
  1831   0000BA                     __ystart:
  1832                           	callstack 0
  1833   0000BA                     	ds	1
  1834   0000BB                     __xstart:
  1835                           	callstack 0
  1836   0000BB                     	ds	1
  1837                           
  1838                           	psect	dataBANK0
  1839   0000BC                     __pdataBANK0:
  1840                           	callstack 0
  1841   0000BC                     _textbgcolor:
  1842                           	callstack 0
  1843   0000BC                     	ds	2
  1844   0000BE                     _textcolor:
  1845                           	callstack 0
  1846   0000BE                     	ds	2
  1847   0000C0                     _wrap:
  1848                           	callstack 0
  1849   0000C0                     	ds	1
  1850                           
  1851                           	psect	bssBANK1
  1852   000100                     __pbssBANK1:
  1853                           	callstack 0
  1854   000100                     _dbuf:
  1855                           	callstack 0
  1856   000100                     	ds	80
  1857                           
  1858                           	psect	cstackBANK0
  1859   000060                     __pcstackBANK0:
  1860                           	callstack 0
  1861   000060                     efgtoa@ne:
  1862                           	callstack 0
  1863                           
  1864                           ; 2 bytes @ 0x0
  1865   000060                     	ds	2
  1866   000062                     efgtoa@p:
  1867                           	callstack 0
  1868                           
  1869                           ; 2 bytes @ 0x2
  1870   000062                     	ds	2
  1871   000064                     efgtoa@t:
  1872                           	callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x4
  1875   000064                     	ds	2
  1876   000066                     _efgtoa$1490:
  1877                           	callstack 0
  1878                           
  1879                           ; 2 bytes @ 0x6
  1880   000066                     	ds	2
  1881   000068                     efgtoa@pp:
  1882                           	callstack 0
  1883                           
  1884                           ; 1 bytes @ 0x8
  1885   000068                     	ds	1
  1886   000069                     efgtoa@mode:
  1887                           	callstack 0
  1888                           
  1889                           ; 1 bytes @ 0x9
  1890   000069                     	ds	1
  1891   00006A                     efgtoa@nmode:
  1892                           	callstack 0
  1893                           
  1894                           ; 1 bytes @ 0xA
  1895   00006A                     	ds	1
  1896   00006B                     efgtoa@d:
  1897                           	callstack 0
  1898                           
  1899                           ; 2 bytes @ 0xB
  1900   00006B                     	ds	2
  1901   00006D                     efgtoa@m:
  1902                           	callstack 0
  1903                           
  1904                           ; 2 bytes @ 0xD
  1905   00006D                     	ds	2
  1906   00006F                     efgtoa@e:
  1907                           	callstack 0
  1908                           
  1909                           ; 2 bytes @ 0xF
  1910   00006F                     	ds	2
  1911   000071                     efgtoa@ou:
  1912                           	callstack 0
  1913                           
  1914                           ; 4 bytes @ 0x11
  1915   000071                     	ds	4
  1916   000075                     efgtoa@w:
  1917                           	callstack 0
  1918                           
  1919                           ; 2 bytes @ 0x15
  1920   000075                     	ds	2
  1921   000077                     efgtoa@h:
  1922                           	callstack 0
  1923                           
  1924                           ; 4 bytes @ 0x17
  1925   000077                     	ds	4
  1926   00007B                     efgtoa@l:
  1927                           	callstack 0
  1928                           
  1929                           ; 4 bytes @ 0x1B
  1930   00007B                     	ds	4
  1931   00007F                     efgtoa@i:
  1932                           	callstack 0
  1933                           
  1934                           ; 2 bytes @ 0x1F
  1935   00007F                     	ds	2
  1936   000081                     efgtoa@sign:
  1937                           	callstack 0
  1938                           
  1939                           ; 1 bytes @ 0x21
  1940   000081                     	ds	1
  1941   000082                     efgtoa@g:
  1942                           	callstack 0
  1943                           
  1944                           ; 4 bytes @ 0x22
  1945   000082                     	ds	4
  1946   000086                     efgtoa@n:
  1947                           	callstack 0
  1948                           
  1949                           ; 2 bytes @ 0x26
  1950   000086                     	ds	2
  1951   000088                     efgtoa@u:
  1952                           	callstack 0
  1953                           
  1954                           ; 4 bytes @ 0x28
  1955   000088                     	ds	4
  1956   00008C                     ?_sprintf:
  1957                           	callstack 0
  1958   00008C                     sprintf@s:
  1959                           	callstack 0
  1960                           
  1961                           ; 1 bytes @ 0x2C
  1962   00008C                     	ds	1
  1963   00008D                     sprintf@fmt:
  1964                           	callstack 0
  1965                           
  1966                           ; 2 bytes @ 0x2D
  1967   00008D                     	ds	6
  1968   000093                     ??_main:
  1969                           
  1970                           ; 1 bytes @ 0x33
  1971   000093                     	ds	2
  1972   000095                     main@cadena:
  1973                           	callstack 0
  1974                           
  1975                           ; 16 bytes @ 0x35
  1976   000095                     	ds	16
  1977   0000A5                     main@calc:
  1978                           	callstack 0
  1979                           
  1980                           ; 2 bytes @ 0x45
  1981   0000A5                     	ds	2
  1982   0000A7                     main@res:
  1983                           	callstack 0
  1984                           
  1985                           ; 4 bytes @ 0x47
  1986   0000A7                     	ds	4
  1987                           
  1988                           	psect	cstackCOMRAM
  1989   000001                     __pcstackCOMRAM:
  1990                           	callstack 0
  1991   000001                     ?___fpclassifyf:
  1992                           	callstack 0
  1993   000001                     ?___wmul:
  1994                           	callstack 0
  1995   000001                     ?___fladd:
  1996                           	callstack 0
  1997   000001                     ?___fldiv:
  1998                           	callstack 0
  1999   000001                     ?___flmul:
  2000                           	callstack 0
  2001   000001                     ?_labs:
  2002                           	callstack 0
  2003   000001                     ?___flneg:
  2004                           	callstack 0
  2005   000001                     ?___fltol:
  2006                           	callstack 0
  2007   000001                     ?___xxtofl:
  2008                           	callstack 0
  2009   000001                     SPI_Init_Master@modo:
  2010                           	callstack 0
  2011   000001                     SPI_Write@dato:
  2012                           	callstack 0
  2013   000001                     Delay_ms@d:
  2014                           	callstack 0
  2015   000001                     ___wmul@multiplier:
  2016                           	callstack 0
  2017   000001                     memcpy@d1:
  2018                           	callstack 0
  2019   000001                     fputc@c:
  2020                           	callstack 0
  2021   000001                     strcpy@dest:
  2022                           	callstack 0
  2023   000001                     ___fleq@ff1:
  2024                           	callstack 0
  2025   000001                     ___flneg@f1:
  2026                           	callstack 0
  2027   000001                     ___fltol@f1:
  2028                           	callstack 0
  2029   000001                     ___fladd@b:
  2030                           	callstack 0
  2031   000001                     ___fldiv@b:
  2032                           	callstack 0
  2033   000001                     ___flmul@b:
  2034                           	callstack 0
  2035   000001                     ___xxtofl@val:
  2036                           	callstack 0
  2037   000001                     ___fpclassifyf@x:
  2038                           	callstack 0
  2039   000001                     labs@a:
  2040                           	callstack 0
  2041                           
  2042                           ; 4 bytes @ 0x0
  2043   000001                     	ds	1
  2044   000002                     SPI_Init_Master@smp:
  2045                           	callstack 0
  2046   000002                     WriteCommand@cmd:
  2047                           	callstack 0
  2048                           
  2049                           ; 1 bytes @ 0x1
  2050   000002                     	ds	1
  2051   000003                     ??_Delay_ms:
  2052   000003                     SPI_Init_Master@reloj:
  2053                           	callstack 0
  2054   000003                     SetAddrWindow@y:
  2055                           	callstack 0
  2056   000003                     TFT_SetRotation@m:
  2057                           	callstack 0
  2058   000003                     fputc@fp:
  2059                           	callstack 0
  2060   000003                     ___wmul@multiplicand:
  2061                           	callstack 0
  2062   000003                     memcpy@s1:
  2063                           	callstack 0
  2064   000003                     strcpy@src:
  2065                           	callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x2
  2068   000003                     	ds	1
  2069   000004                     ??_fputc:
  2070   000004                     SetAddrWindow@w:
  2071                           	callstack 0
  2072   000004                     TFT_SetRotation@madctl:
  2073                           	callstack 0
  2074   000004                     Delay_ms@i:
  2075                           	callstack 0
  2076                           
  2077                           ; 2 bytes @ 0x3
  2078   000004                     	ds	1
  2079   000005                     ??___fpclassifyf:
  2080   000005                     ??_labs:
  2081   000005                     ??___fltol:
  2082   000005                     ??___xxtofl:
  2083   000005                     SetAddrWindow@h:
  2084                           	callstack 0
  2085   000005                     ___wmul@product:
  2086                           	callstack 0
  2087   000005                     memcpy@n:
  2088                           	callstack 0
  2089   000005                     strcpy@d:
  2090                           	callstack 0
  2091   000005                     ___fleq@ff2:
  2092                           	callstack 0
  2093   000005                     ___fladd@a:
  2094                           	callstack 0
  2095   000005                     ___fldiv@a:
  2096                           	callstack 0
  2097   000005                     ___flmul@a:
  2098                           	callstack 0
  2099                           
  2100                           ; 4 bytes @ 0x4
  2101   000005                     	ds	1
  2102   000006                     ??_SetAddrWindow:
  2103   000006                     DisplayInit@addr:
  2104                           	callstack 0
  2105                           
  2106                           ; 2 bytes @ 0x5
  2107   000006                     	ds	1
  2108   000007                     ?_read_prec_or_width:
  2109                           	callstack 0
  2110   000007                     SetAddrWindow@x:
  2111                           	callstack 0
  2112   000007                     read_prec_or_width@fmt:
  2113                           	callstack 0
  2114   000007                     memcpy@tmp:
  2115                           	callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x6
  2118   000007                     	ds	1
  2119   000008                     ??_DisplayInit:
  2120   000008                     TFT_DrawPixel@y:
  2121                           	callstack 0
  2122   000008                     TFT_DrawVLine@y:
  2123                           	callstack 0
  2124   000008                     TFT_FillRect@y:
  2125                           	callstack 0
  2126   000008                     read_prec_or_width@ap:
  2127                           	callstack 0
  2128   000008                     memcpy@d:
  2129                           	callstack 0
  2130                           
  2131                           ; 2 bytes @ 0x7
  2132   000008                     	ds	1
  2133   000009                     ??___fladd:
  2134   000009                     ??___fldiv:
  2135   000009                     ??___flmul:
  2136   000009                     ??___fleq:
  2137   000009                     DisplayInit@numCommands:
  2138                           	callstack 0
  2139   000009                     TFT_DrawVLine@h:
  2140                           	callstack 0
  2141   000009                     TFT_FillRect@w:
  2142                           	callstack 0
  2143   000009                     ___fltol@sign1:
  2144                           	callstack 0
  2145   000009                     ___xxtofl@sign:
  2146                           	callstack 0
  2147   000009                     read_prec_or_width@c:
  2148                           	callstack 0
  2149   000009                     TFT_DrawPixel@color:
  2150                           	callstack 0
  2151   000009                     ___fpclassifyf@e:
  2152                           	callstack 0
  2153   000009                     fputs@s:
  2154                           	callstack 0
  2155                           
  2156                           ; 2 bytes @ 0x8
  2157   000009                     	ds	1
  2158   00000A                     DisplayInit@numArgs:
  2159                           	callstack 0
  2160   00000A                     TFT_FillRect@h:
  2161                           	callstack 0
  2162   00000A                     ___fltol@exp1:
  2163                           	callstack 0
  2164   00000A                     ___xxtofl@exp:
  2165                           	callstack 0
  2166   00000A                     TFT_DrawVLine@color:
  2167                           	callstack 0
  2168   00000A                     read_prec_or_width@n:
  2169                           	callstack 0
  2170   00000A                     memcpy@s:
  2171                           	callstack 0
  2172                           
  2173                           ; 2 bytes @ 0x9
  2174   00000A                     	ds	1
  2175   00000B                     TFT_DrawPixel@x:
  2176                           	callstack 0
  2177   00000B                     fputs@fp:
  2178                           	callstack 0
  2179   00000B                     DisplayInit@ms:
  2180                           	callstack 0
  2181   00000B                     TFT_FillRect@color:
  2182                           	callstack 0
  2183   00000B                     ___xxtofl@arg:
  2184                           	callstack 0
  2185   00000B                     ___fpclassifyf@u:
  2186                           	callstack 0
  2187                           
  2188                           ; 4 bytes @ 0xA
  2189   00000B                     	ds	1
  2190   00000C                     ??_TFT_DrawVLine:
  2191   00000C                     fputs@c:
  2192                           	callstack 0
  2193                           
  2194                           ; 1 bytes @ 0xB
  2195   00000C                     	ds	1
  2196   00000D                     ??_TFT_ST7735_Init:
  2197   00000D                     ??_TFT_FillRect:
  2198   00000D                     ___fladd@signs:
  2199                           	callstack 0
  2200   00000D                     ___flmul@sign:
  2201                           	callstack 0
  2202   00000D                     fputs@i:
  2203                           	callstack 0
  2204   00000D                     ___fldiv@rem:
  2205                           	callstack 0
  2206                           
  2207                           ; 4 bytes @ 0xC
  2208   00000D                     	ds	1
  2209   00000E                     TFT_ST7735_Init@options:
  2210                           	callstack 0
  2211   00000E                     ___fladd@aexp:
  2212                           	callstack 0
  2213   00000E                     ___flmul@grs:
  2214                           	callstack 0
  2215                           
  2216                           ; 4 bytes @ 0xD
  2217   00000E                     	ds	1
  2218   00000F                     ___fladd@bexp:
  2219                           	callstack 0
  2220   00000F                     pad@fp:
  2221                           	callstack 0
  2222                           
  2223                           ; 1 bytes @ 0xE
  2224   00000F                     	ds	1
  2225   000010                     ___fladd@grs:
  2226                           	callstack 0
  2227   000010                     pad@buf:
  2228                           	callstack 0
  2229                           
  2230                           ; 2 bytes @ 0xF
  2231   000010                     	ds	1
  2232   000011                     ___fldiv@sign:
  2233                           	callstack 0
  2234                           
  2235                           ; 1 bytes @ 0x10
  2236   000011                     	ds	1
  2237   000012                     ___flmul@aexp:
  2238                           	callstack 0
  2239   000012                     ___fldiv@new_exp:
  2240                           	callstack 0
  2241   000012                     pad@p:
  2242                           	callstack 0
  2243                           
  2244                           ; 2 bytes @ 0x11
  2245   000012                     	ds	1
  2246   000013                     TFT_DrawVLine@hi:
  2247                           	callstack 0
  2248   000013                     ___flmul@bexp:
  2249                           	callstack 0
  2250                           
  2251                           ; 1 bytes @ 0x12
  2252   000013                     	ds	1
  2253   000014                     ??_pad:
  2254   000014                     TFT_DrawVLine@lo:
  2255                           	callstack 0
  2256   000014                     TFT_FillRect@px:
  2257                           	callstack 0
  2258   000014                     ___fldiv@grs:
  2259                           	callstack 0
  2260   000014                     ___flmul@prod:
  2261                           	callstack 0
  2262                           
  2263                           ; 4 bytes @ 0x13
  2264   000014                     	ds	1
  2265   000015                     TFT_DrawVLine@x:
  2266                           	callstack 0
  2267   000015                     pad@i:
  2268                           	callstack 0
  2269                           
  2270                           ; 2 bytes @ 0x14
  2271   000015                     	ds	1
  2272   000016                     TFT_FillRect@hi:
  2273                           	callstack 0
  2274                           
  2275                           ; 1 bytes @ 0x15
  2276   000016                     	ds	1
  2277   000017                     TFT_FillRect@lo:
  2278                           	callstack 0
  2279                           
  2280                           ; 1 bytes @ 0x16
  2281   000017                     	ds	1
  2282   000018                     TFT_FillRect@x:
  2283                           	callstack 0
  2284   000018                     ___fldiv@bexp:
  2285                           	callstack 0
  2286   000018                     ___flmul@temp:
  2287                           	callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x17
  2290   000018                     	ds	1
  2291   000019                     ??_TFT_Print:
  2292   000019                     ___fldiv@aexp:
  2293                           	callstack 0
  2294   000019                     TFT_FillScreen@color:
  2295                           	callstack 0
  2296                           
  2297                           ; 2 bytes @ 0x18
  2298   000019                     	ds	1
  2299   00001A                     ?___flsub:
  2300                           	callstack 0
  2301   00001A                     ?_floorf:
  2302                           	callstack 0
  2303   00001A                     ___flge@ff1:
  2304                           	callstack 0
  2305   00001A                     ___flsub@b:
  2306                           	callstack 0
  2307   00001A                     floorf@x:
  2308                           	callstack 0
  2309                           
  2310                           ; 4 bytes @ 0x19
  2311   00001A                     	ds	1
  2312   00001B                     
  2313                           ; 1 bytes @ 0x1A
  2314   00001B                     	ds	3
  2315   00001E                     ??_floorf:
  2316   00001E                     TFT_Print@line:
  2317                           	callstack 0
  2318   00001E                     ___flge@ff2:
  2319                           	callstack 0
  2320   00001E                     ___flsub@a:
  2321                           	callstack 0
  2322                           
  2323                           ; 4 bytes @ 0x1D
  2324   00001E                     	ds	1
  2325   00001F                     TFT_Print@c:
  2326                           	callstack 0
  2327                           
  2328                           ; 1 bytes @ 0x1E
  2329   00001F                     	ds	1
  2330   000020                     TFT_Print@j:
  2331                           	callstack 0
  2332                           
  2333                           ; 1 bytes @ 0x1F
  2334   000020                     	ds	1
  2335   000021                     TFT_Print@i:
  2336                           	callstack 0
  2337                           
  2338                           ; 1 bytes @ 0x20
  2339   000021                     	ds	1
  2340   000022                     ??___flge:
  2341   000022                     TFT_WriteString@x:
  2342                           	callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x21
  2345   000022                     	ds	2
  2346   000024                     TFT_WriteString@y:
  2347                           	callstack 0
  2348   000024                     floorf@m:
  2349                           	callstack 0
  2350                           
  2351                           ; 4 bytes @ 0x23
  2352   000024                     	ds	2
  2353   000026                     TFT_WriteString@str:
  2354                           	callstack 0
  2355                           
  2356                           ; 2 bytes @ 0x25
  2357   000026                     	ds	2
  2358   000028                     TFT_WriteString@color:
  2359                           	callstack 0
  2360   000028                     floorf@e:
  2361                           	callstack 0
  2362                           
  2363                           ; 2 bytes @ 0x27
  2364   000028                     	ds	2
  2365   00002A                     TFT_WriteString@bg:
  2366                           	callstack 0
  2367   00002A                     floorf@u:
  2368                           	callstack 0
  2369                           
  2370                           ; 4 bytes @ 0x29
  2371   00002A                     	ds	2
  2372   00002C                     TFT_WriteString@size:
  2373                           	callstack 0
  2374                           
  2375                           ; 1 bytes @ 0x2B
  2376   00002C                     	ds	1
  2377   00002D                     _TFT_WriteString$914:
  2378                           	callstack 0
  2379                           
  2380                           ; 2 bytes @ 0x2C
  2381   00002D                     	ds	1
  2382   00002E                     efgtoa@fp:
  2383                           	callstack 0
  2384                           
  2385                           ; 1 bytes @ 0x2D
  2386   00002E                     	ds	1
  2387   00002F                     TFT_WriteString@x_prev:
  2388                           	callstack 0
  2389   00002F                     efgtoa@f:
  2390                           	callstack 0
  2391                           
  2392                           ; 4 bytes @ 0x2E
  2393   00002F                     	ds	4
  2394   000033                     efgtoa@c:
  2395                           	callstack 0
  2396                           
  2397                           ; 1 bytes @ 0x32
  2398   000033                     	ds	1
  2399   000034                     ??_efgtoa:
  2400                           
  2401                           ; 1 bytes @ 0x33
  2402   000034                     	ds	2
  2403   000036                     vfpfcnvrt@fp:
  2404                           	callstack 0
  2405                           
  2406                           ; 1 bytes @ 0x35
  2407   000036                     	ds	1
  2408   000037                     vfpfcnvrt@fmt:
  2409                           	callstack 0
  2410                           
  2411                           ; 1 bytes @ 0x36
  2412   000037                     	ds	1
  2413   000038                     vfpfcnvrt@ap:
  2414                           	callstack 0
  2415                           
  2416                           ; 1 bytes @ 0x37
  2417   000038                     	ds	1
  2418   000039                     ??_vfpfcnvrt:
  2419                           
  2420                           ; 1 bytes @ 0x38
  2421   000039                     	ds	2
  2422   00003B                     vfpfcnvrt@convarg:
  2423                           	callstack 0
  2424                           
  2425                           ; 4 bytes @ 0x3A
  2426   00003B                     	ds	4
  2427   00003F                     vfpfcnvrt@done:
  2428                           	callstack 0
  2429                           
  2430                           ; 1 bytes @ 0x3E
  2431   00003F                     	ds	1
  2432   000040                     vfpfcnvrt@c:
  2433                           	callstack 0
  2434                           
  2435                           ; 1 bytes @ 0x3F
  2436   000040                     	ds	1
  2437   000041                     vfpfcnvrt@cp:
  2438                           	callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x40
  2441   000041                     	ds	2
  2442   000043                     ?_vfprintf:
  2443                           	callstack 0
  2444   000043                     vfprintf@fp:
  2445                           	callstack 0
  2446                           
  2447                           ; 1 bytes @ 0x42
  2448   000043                     	ds	1
  2449   000044                     vfprintf@fmt:
  2450                           	callstack 0
  2451                           
  2452                           ; 2 bytes @ 0x43
  2453   000044                     	ds	2
  2454   000046                     vfprintf@ap:
  2455                           	callstack 0
  2456                           
  2457                           ; 1 bytes @ 0x45
  2458   000046                     	ds	1
  2459   000047                     vfprintf@cfmt:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x46
  2463   000047                     	ds	2
  2464   000049                     sprintf@ap:
  2465                           	callstack 0
  2466                           
  2467                           ; 1 bytes @ 0x48
  2468   000049                     	ds	1
  2469   00004A                     sprintf@f:
  2470                           	callstack 0
  2471                           
  2472                           ; 12 bytes @ 0x49
  2473   00004A                     	ds	12
  2474                           
  2475 ;;
  2476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2477 ;;
  2478 ;; *************** function _main *****************
  2479 ;; Defined at:
  2480 ;;		line 23 in file "pruebilla.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  calc            2   69[BANK0 ] int 
  2485 ;;  bit_hight       2    0        int 
  2486 ;;  bit_low         2    0        int 
  2487 ;;  cadena         16   53[BANK0 ] unsigned char [16]
  2488 ;;  res             4   71[BANK0 ] float 
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2498 ;;      Params:         0       0       0       0       0       0       0       0       0
  2499 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2500 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2501 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2502 ;;Total ram usage:       24 bytes
  2503 ;; Hardware stack levels required when called: 8
  2504 ;; This function calls:
  2505 ;;		_TFT_FillRect
  2506 ;;		_TFT_FillScreen
  2507 ;;		_TFT_ST7735_Init
  2508 ;;		_TFT_SetRotation
  2509 ;;		_TFT_WriteString
  2510 ;;		___xxtofl
  2511 ;;		_sprintf
  2512 ;; This function is called by:
  2513 ;;		Startup code after reset
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text0
  2518   00533A                     __ptext0:
  2519                           	callstack 0
  2520   00533A                     _main:
  2521                           	callstack 23
  2522   00533A                     
  2523                           ;pruebilla.c: 25:     ADCON1=0X03;
  2524   00533A  0E03               	movlw	3
  2525   00533C  6EC1               	movwf	193,c	;volatile
  2526                           
  2527                           ;pruebilla.c: 26:     ADCON0=0x00;
  2528   00533E  0E00               	movlw	0
  2529   005340  6EC2               	movwf	194,c	;volatile
  2530                           
  2531                           ;pruebilla.c: 27:     ADCON2=0x8f;
  2532   005342  0E8F               	movlw	143
  2533   005344  6EC0               	movwf	192,c	;volatile
  2534   005346                     
  2535                           ;pruebilla.c: 28:     ADCON0bits.ADON=1;
  2536   005346  80C2               	bsf	194,0,c	;volatile
  2537                           
  2538                           ;pruebilla.c: 29:     TRISD=0x00;
  2539   005348  0E00               	movlw	0
  2540   00534A  6E95               	movwf	149,c	;volatile
  2541                           
  2542                           ;pruebilla.c: 30:     TRISE=0x00;
  2543   00534C  0E00               	movlw	0
  2544   00534E  6E96               	movwf	150,c	;volatile
  2545                           
  2546                           ;pruebilla.c: 31:     LATD=0x00;
  2547   005350  0E00               	movlw	0
  2548   005352  6E8C               	movwf	140,c	;volatile
  2549                           
  2550                           ;pruebilla.c: 32:     LATE=0x00;
  2551   005354  0E00               	movlw	0
  2552   005356  6E8D               	movwf	141,c	;volatile
  2553   005358                     
  2554                           ;pruebilla.c: 35:     TFT_ST7735_Init(0x01);
  2555   005358  0E01               	movlw	1
  2556   00535A  ECB6  F026         	call	_TFT_ST7735_Init
  2557   00535E                     
  2558                           ;pruebilla.c: 36:     TFT_SetRotation(0);
  2559   00535E  0E00               	movlw	0
  2560   005360  ECF7  F02B         	call	_TFT_SetRotation
  2561   005364                     
  2562                           ;pruebilla.c: 37:     TFT_FillScreen(0x001F);
  2563   005364  0E00               	movlw	0
  2564   005366  6E1A               	movwf	(TFT_FillScreen@color+1)^0,c
  2565   005368  0E1F               	movlw	31
  2566   00536A  6E19               	movwf	TFT_FillScreen@color^0,c
  2567   00536C  EC04  F023         	call	_TFT_FillScreen	;wreg free
  2568   005370                     l5750:
  2569                           
  2570                           ;pruebilla.c: 41:     {;pruebilla.c: 43:         ADCON0bits.GODONE=1;
  2571   005370  82C2               	bsf	194,1,c	;volatile
  2572   005372                     
  2573                           ;pruebilla.c: 44:         float res=0;
  2574   005372  0E00               	movlw	0
  2575   005374  0100               	movlb	0	; () banked
  2576   005376  6FA7               	movwf	main@res& (0+255),b
  2577   005378  0E00               	movlw	0
  2578   00537A  6FA8               	movwf	(main@res+1)& (0+255),b
  2579   00537C  0E00               	movlw	0
  2580   00537E  6FA9               	movwf	(main@res+2)& (0+255),b
  2581   005380  0E00               	movlw	0
  2582   005382  6FAA               	movwf	(main@res+3)& (0+255),b
  2583                           
  2584                           ;pruebilla.c: 45:         char cadena[16];;pruebilla.c: 46:         while(ADCON0bits.GOD
      +                          ONE==1){
  2585   005384  EFEC  F029         	goto	l5760
  2586   005388                     l69:
  2587   005388  50C3               	movf	195,w,c	;volatile
  2588   00538A  50C4               	movf	196,w,c	;volatile
  2589   00538C                     
  2590                           ;pruebilla.c: 50:             int calc=(ADRESH<<8)+ADRESL;
  2591   00538C  50C4               	movf	196,w,c	;volatile
  2592   00538E  0100               	movlb	0	; () banked
  2593   005390  6F94               	movwf	(??_main+1)& (0+255),b
  2594   005392  6B93               	clrf	??_main& (0+255),b
  2595   005394  50C3               	movf	195,w,c	;volatile
  2596   005396  2593               	addwf	??_main& (0+255),w,b
  2597   005398  6FA5               	movwf	main@calc& (0+255),b
  2598   00539A  0E00               	movlw	0
  2599   00539C  2194               	addwfc	(??_main+1)& (0+255),w,b
  2600   00539E  6FA6               	movwf	(main@calc+1)& (0+255),b
  2601   0053A0                     
  2602                           ; BSR set to: 0
  2603                           ;pruebilla.c: 51:             res=(float)calc;
  2604   0053A0  C0A5  F001         	movff	main@calc,___xxtofl@val
  2605   0053A4  C0A6  F002         	movff	main@calc+1,___xxtofl@val+1
  2606   0053A8  0E00               	movlw	0
  2607   0053AA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2608   0053AC  0EFF               	movlw	-1
  2609   0053AE  6E03               	movwf	(___xxtofl@val+2)^0,c
  2610   0053B0  6E04               	movwf	(___xxtofl@val+3)^0,c
  2611   0053B2  0E01               	movlw	1
  2612   0053B4  EC1D  F02B         	call	___xxtofl
  2613   0053B8  C001  F0A7         	movff	?___xxtofl,main@res
  2614   0053BC  C002  F0A8         	movff	?___xxtofl+1,main@res+1
  2615   0053C0  C003  F0A9         	movff	?___xxtofl+2,main@res+2
  2616   0053C4  C004  F0AA         	movff	?___xxtofl+3,main@res+3
  2617   0053C8                     
  2618                           ;pruebilla.c: 53:             _delay((unsigned long)((10)*(48000000/4000.0)));
  2619   0053C8  0E9C               	movlw	156
  2620   0053CA  0100               	movlb	0	; () banked
  2621   0053CC  6F93               	movwf	??_main& (0+255),b
  2622   0053CE  0ED7               	movlw	215
  2623   0053D0                     u6727:
  2624   0053D0  2EE8               	decfsz	wreg,f,c
  2625   0053D2  D7FE               	bra	u6727
  2626   0053D4  2F93               	decfsz	??_main& (0+255),f,b
  2627   0053D6  D7FC               	bra	u6727
  2628   0053D8                     l5760:
  2629                           
  2630                           ;pruebilla.c: 46:         while(ADCON0bits.GODONE==1){
  2631   0053D8  B2C2               	btfsc	194,1,c	;volatile
  2632   0053DA  EFF1  F029         	goto	u6711
  2633   0053DE  EFF3  F029         	goto	u6710
  2634   0053E2                     u6711:
  2635   0053E2  EFC4  F029         	goto	l69
  2636   0053E6                     u6710:
  2637   0053E6                     
  2638                           ;pruebilla.c: 55:         cadena[0]=' ';
  2639   0053E6  0E20               	movlw	32
  2640   0053E8  0100               	movlb	0	; () banked
  2641   0053EA  6F95               	movwf	main@cadena& (0+255),b
  2642                           
  2643                           ;pruebilla.c: 56:         cadena[1]=' ';
  2644   0053EC  0E20               	movlw	32
  2645   0053EE  6F96               	movwf	(main@cadena+1)& (0+255),b
  2646                           
  2647                           ;pruebilla.c: 57:         cadena[2]=' ';
  2648   0053F0  0E20               	movlw	32
  2649   0053F2  6F97               	movwf	(main@cadena+2)& (0+255),b
  2650                           
  2651                           ;pruebilla.c: 58:         cadena[3]=' ';
  2652   0053F4  0E20               	movlw	32
  2653   0053F6  6F98               	movwf	(main@cadena+3)& (0+255),b
  2654                           
  2655                           ;pruebilla.c: 59:         cadena[4]=' ';
  2656   0053F8  0E20               	movlw	32
  2657   0053FA  6F99               	movwf	(main@cadena+4)& (0+255),b
  2658                           
  2659                           ;pruebilla.c: 60:         cadena[5]=' ';
  2660   0053FC  0E20               	movlw	32
  2661   0053FE  6F9A               	movwf	(main@cadena+5)& (0+255),b
  2662                           
  2663                           ;pruebilla.c: 61:         cadena[6]=' ';
  2664   005400  0E20               	movlw	32
  2665   005402  6F9B               	movwf	(main@cadena+6)& (0+255),b
  2666   005404                     
  2667                           ; BSR set to: 0
  2668                           ;pruebilla.c: 62:         sprintf(cadena,"%0.2f",res);
  2669   005404  0E95               	movlw	low main@cadena
  2670   005406  6F8C               	movwf	sprintf@s& (0+255),b
  2671   005408  0EB0               	movlw	low STR_1
  2672   00540A  6F8D               	movwf	sprintf@fmt& (0+255),b
  2673   00540C  0E7D               	movlw	high STR_1
  2674   00540E  6F8E               	movwf	(sprintf@fmt+1)& (0+255),b
  2675   005410  C0A7  F08F         	movff	main@res,?_sprintf+3
  2676   005414  C0A8  F090         	movff	main@res+1,?_sprintf+4
  2677   005418  C0A9  F091         	movff	main@res+2,?_sprintf+5
  2678   00541C  C0AA  F092         	movff	main@res+3,?_sprintf+6
  2679   005420  EC8C  F023         	call	_sprintf	;wreg free
  2680   005424                     
  2681                           ;pruebilla.c: 63:         TFT_WriteString(0, 10, "<medida resistencia>" , 0x07E0, 0x0000
      +                          , 1);
  2682   005424  0E00               	movlw	0
  2683   005426  6E23               	movwf	(TFT_WriteString@x+1)^0,c
  2684   005428  0E00               	movlw	0
  2685   00542A  6E22               	movwf	TFT_WriteString@x^0,c
  2686   00542C  0E00               	movlw	0
  2687   00542E  6E25               	movwf	(TFT_WriteString@y+1)^0,c
  2688   005430  0E0A               	movlw	10
  2689   005432  6E24               	movwf	TFT_WriteString@y^0,c
  2690   005434  0E9B               	movlw	low STR_2
  2691   005436  6E26               	movwf	TFT_WriteString@str^0,c
  2692   005438  0E7D               	movlw	high STR_2
  2693   00543A  6E27               	movwf	(TFT_WriteString@str+1)^0,c
  2694   00543C  0E07               	movlw	7
  2695   00543E  6E29               	movwf	(TFT_WriteString@color+1)^0,c
  2696   005440  0EE0               	movlw	224
  2697   005442  6E28               	movwf	TFT_WriteString@color^0,c
  2698   005444  0E00               	movlw	0
  2699   005446  6E2B               	movwf	(TFT_WriteString@bg+1)^0,c
  2700   005448  0E00               	movlw	0
  2701   00544A  6E2A               	movwf	TFT_WriteString@bg^0,c
  2702   00544C  0E01               	movlw	1
  2703   00544E  6E2C               	movwf	TFT_WriteString@size^0,c
  2704   005450  EC52  F02A         	call	_TFT_WriteString	;wreg free
  2705   005454                     
  2706                           ;pruebilla.c: 65:         TFT_WriteString(1, 40, cadena, 0x07E0, 0x0000, 1);
  2707   005454  0E00               	movlw	0
  2708   005456  6E23               	movwf	(TFT_WriteString@x+1)^0,c
  2709   005458  0E01               	movlw	1
  2710   00545A  6E22               	movwf	TFT_WriteString@x^0,c
  2711   00545C  0E00               	movlw	0
  2712   00545E  6E25               	movwf	(TFT_WriteString@y+1)^0,c
  2713   005460  0E28               	movlw	40
  2714   005462  6E24               	movwf	TFT_WriteString@y^0,c
  2715   005464  0E95               	movlw	low main@cadena
  2716   005466  6E26               	movwf	TFT_WriteString@str^0,c
  2717   005468  6A27               	clrf	(TFT_WriteString@str+1)^0,c
  2718   00546A  0E07               	movlw	7
  2719   00546C  6E29               	movwf	(TFT_WriteString@color+1)^0,c
  2720   00546E  0EE0               	movlw	224
  2721   005470  6E28               	movwf	TFT_WriteString@color^0,c
  2722   005472  0E00               	movlw	0
  2723   005474  6E2B               	movwf	(TFT_WriteString@bg+1)^0,c
  2724   005476  0E00               	movlw	0
  2725   005478  6E2A               	movwf	TFT_WriteString@bg^0,c
  2726   00547A  0E01               	movlw	1
  2727   00547C  6E2C               	movwf	TFT_WriteString@size^0,c
  2728   00547E  EC52  F02A         	call	_TFT_WriteString	;wreg free
  2729   005482                     
  2730                           ;pruebilla.c: 67:         TFT_FillRect(80,40,60,60,0x001F);
  2731   005482  0E28               	movlw	40
  2732   005484  6E08               	movwf	TFT_FillRect@y^0,c
  2733   005486  0E3C               	movlw	60
  2734   005488  6E09               	movwf	TFT_FillRect@w^0,c
  2735   00548A  0E3C               	movlw	60
  2736   00548C  6E0A               	movwf	TFT_FillRect@h^0,c
  2737   00548E  0E00               	movlw	0
  2738   005490  6E0C               	movwf	(TFT_FillRect@color+1)^0,c
  2739   005492  0E1F               	movlw	31
  2740   005494  6E0B               	movwf	TFT_FillRect@color^0,c
  2741   005496  0E50               	movlw	80
  2742   005498  EC09  F029         	call	_TFT_FillRect
  2743   00549C  EFB8  F029         	goto	l5750
  2744   0054A0  EF00  F000         	goto	start
  2745   0054A4                     __end_of_main:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _sprintf *****************
  2749 ;; Defined at:
  2750 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;  s               1   44[BANK0 ] PTR unsigned char 
  2753 ;;		 -> main@cadena(16), 
  2754 ;;  fmt             2   45[BANK0 ] PTR const unsigned char 
  2755 ;;		 -> STR_1(6), 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  f              12   73[COMRAM] struct _IO_FILE
  2758 ;;  ret             2    0        int 
  2759 ;;  ap              1   72[COMRAM] PTR void [1]
  2760 ;;		 -> ?_sprintf(2), 
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  2   44[BANK0 ] int 
  2763 ;; Registers used:
  2764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2770 ;;      Params:         0       7       0       0       0       0       0       0       0
  2771 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2773 ;;      Totals:        13       7       0       0       0       0       0       0       0
  2774 ;;Total ram usage:       20 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 7
  2777 ;; This function calls:
  2778 ;;		_vfprintf
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text1
  2785   004718                     __ptext1:
  2786                           	callstack 0
  2787   004718                     _sprintf:
  2788                           	callstack 23
  2789   004718  0E8F               	movlw	low (?_sprintf+3)
  2790   00471A  6E49               	movwf	sprintf@ap^0,c
  2791   00471C  C08C  F04A         	movff	sprintf@s,sprintf@f
  2792   004720  0E00               	movlw	0
  2793   004722  6E4E               	movwf	(sprintf@f+4)^0,c
  2794   004724  0E00               	movlw	0
  2795   004726  6E4D               	movwf	(sprintf@f+3)^0,c
  2796   004728  0E00               	movlw	0
  2797   00472A  6E55               	movwf	(sprintf@f+11)^0,c
  2798   00472C  0E00               	movlw	0
  2799   00472E  6E54               	movwf	(sprintf@f+10)^0,c
  2800   004730  0E4A               	movlw	low sprintf@f
  2801   004732  6E43               	movwf	vfprintf@fp^0,c
  2802   004734  C08D  F044         	movff	sprintf@fmt,vfprintf@fmt
  2803   004738  C08E  F045         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2804   00473C  0E49               	movlw	low sprintf@ap
  2805   00473E  6E46               	movwf	vfprintf@ap^0,c
  2806   004740  ECC9  F023         	call	_vfprintf	;wreg free
  2807   004744  0100               	movlb	0	; () banked
  2808   004746  518C               	movf	sprintf@s& (0+255),w,b
  2809   004748  244D               	addwf	(sprintf@f+3)^0,w,c
  2810   00474A  6ED9               	movwf	fsr2l,c
  2811   00474C  6ADA               	clrf	fsr2h,c
  2812   00474E  6ADF               	clrf	indf2,c
  2813   004750                     
  2814                           ; BSR set to: 0
  2815   004750  0012               	return		;funcret
  2816   004752                     __end_of_sprintf:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _vfprintf *****************
  2820 ;; Defined at:
  2821 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  fp              1   66[COMRAM] PTR struct _IO_FILE
  2824 ;;		 -> sprintf@f(12), 
  2825 ;;  fmt             2   67[COMRAM] PTR const unsigned char 
  2826 ;;		 -> STR_1(6), 
  2827 ;;  ap              1   69[COMRAM] PTR PTR void 
  2828 ;;		 -> sprintf@ap(1), 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  cfmt            2   70[COMRAM] PTR unsigned char 
  2831 ;;		 -> STR_1(6), 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  2   66[COMRAM] int 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2841 ;;      Params:         4       0       0       0       0       0       0       0       0
  2842 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2844 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2845 ;;Total ram usage:        6 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 6
  2848 ;; This function calls:
  2849 ;;		_vfpfcnvrt
  2850 ;; This function is called by:
  2851 ;;		_sprintf
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text2
  2856   004792                     __ptext2:
  2857                           	callstack 0
  2858   004792                     _vfprintf:
  2859                           	callstack 23
  2860   004792                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2862   004792  C044  F047         	movff	vfprintf@fmt,vfprintf@cfmt
  2863   004796  C045  F048         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2864                           
  2865                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2866   00479A  EFD7  F023         	goto	l5722
  2867   00479E                     l5720:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2870   00479E  C043  F036         	movff	vfprintf@fp,vfpfcnvrt@fp
  2871   0047A2  0E47               	movlw	low vfprintf@cfmt
  2872   0047A4  6E37               	movwf	vfpfcnvrt@fmt^0,c
  2873   0047A6  C046  F038         	movff	vfprintf@ap,vfpfcnvrt@ap
  2874   0047AA  ECFD  F02D         	call	_vfpfcnvrt	;wreg free
  2875   0047AE                     l5722:
  2876                           
  2877                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2878   0047AE  C047  FFF6         	movff	vfprintf@cfmt,tblptrl
  2879   0047B2  C048  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2880   0047B6                     	if	0	;tblptru may be non-zero
  2881   0047B6                     	endif
  2882   0047B6                     	if	0	;tblptru may be non-zero
  2883   0047B6                     	endif
  2884   0047B6  0008               	tblrd		*
  2885   0047B8  50F5               	movf	tablat,w,c
  2886   0047BA  0900               	iorlw	0
  2887   0047BC  A4D8               	btfss	status,2,c
  2888   0047BE  EFE3  F023         	goto	u6701
  2889   0047C2  EFE5  F023         	goto	u6700
  2890   0047C6                     u6701:
  2891   0047C6  EFCF  F023         	goto	l5720
  2892   0047CA                     u6700:
  2893   0047CA                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2895   0047CA  0E00               	movlw	0
  2896   0047CC  6E44               	movwf	(?_vfprintf+1)^0,c
  2897   0047CE  0E00               	movlw	0
  2898   0047D0  6E43               	movwf	?_vfprintf^0,c
  2899   0047D2  0012               	return		;funcret
  2900   0047D4                     __end_of_vfprintf:
  2901                           	callstack 0
  2902                           
  2903 ;; *************** function _vfpfcnvrt *****************
  2904 ;; Defined at:
  2905 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  2908 ;;		 -> sprintf@f(12), 
  2909 ;;  fmt             1   54[COMRAM] PTR PTR unsigned char 
  2910 ;;		 -> vfprintf@cfmt(2), 
  2911 ;;  ap              1   55[COMRAM] PTR PTR void 
  2912 ;;		 -> sprintf@ap(1), 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  convarg         4   58[COMRAM] struct .
  2915 ;;  cp              2   64[COMRAM] PTR unsigned char 
  2916 ;;		 -> STR_1(6), 
  2917 ;;  c               1   63[COMRAM] unsigned char 
  2918 ;;  done            1   62[COMRAM] _Bool 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         3       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2931 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:       13 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; Hardware stack levels required when called: 5
  2935 ;; This function calls:
  2936 ;;		_efgtoa
  2937 ;;		_fputc
  2938 ;;		_read_prec_or_width
  2939 ;; This function is called by:
  2940 ;;		_vfprintf
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text3
  2945   005BFA                     __ptext3:
  2946                           	callstack 0
  2947   005BFA                     _vfpfcnvrt:
  2948                           	callstack 23
  2949   005BFA                     
  2950                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2951   005BFA  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2952   005BFC  6ED9               	movwf	fsr2l,c
  2953   005BFE  6ADA               	clrf	fsr2h,c
  2954   005C00  CFDE FFF6          	movff	postinc2,tblptrl
  2955   005C04  CFDD FFF7          	movff	postdec2,tblptrh
  2956   005C08                     	if	0	;tblptru may be non-zero
  2957   005C08                     	endif
  2958   005C08                     	if	0	;tblptru may be non-zero
  2959   005C08                     	endif
  2960   005C08  0008               	tblrd		*
  2961   005C0A  50F5               	movf	tablat,w,c
  2962   005C0C  0A25               	xorlw	37
  2963   005C0E  A4D8               	btfss	status,2,c
  2964   005C10  EF0C  F02E         	goto	u6661
  2965   005C14  EF0E  F02E         	goto	u6660
  2966   005C18                     u6661:
  2967   005C18  EF0D  F02F         	goto	l5712
  2968   005C1C                     u6660:
  2969   005C1C                     
  2970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2971   005C1C  5037               	movf	vfpfcnvrt@fmt^0,w,c
  2972   005C1E  6ED9               	movwf	fsr2l,c
  2973   005C20  6ADA               	clrf	fsr2h,c
  2974   005C22  2ADE               	incf	postinc2,f,c
  2975   005C24  0E00               	movlw	0
  2976   005C26  22DD               	addwfc	postdec2,f,c
  2977   005C28                     
  2978                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2979   005C28  0E00               	movlw	0
  2980   005C2A  0100               	movlb	0	; () banked
  2981   005C2C  6FB4               	movwf	(_width+1)& (0+255),b
  2982   005C2E  0E00               	movlw	0
  2983   005C30  6FB3               	movwf	_width& (0+255),b
  2984   005C32  C0B3  F0B7         	movff	_width,_flags
  2985   005C36                     
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2988   005C36  69B5               	setf	_prec& (0+255),b
  2989   005C38  69B6               	setf	(_prec+1)& (0+255),b
  2990   005C3A                     
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2993   005C3A  0E00               	movlw	0
  2994   005C3C  6E3F               	movwf	vfpfcnvrt@done^0,c
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2997   005C3E  EF3E  F02E         	goto	l5666
  2998   005C42                     l5656:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  3001   005C42  0100               	movlb	0	; () banked
  3002   005C44  83B7               	bsf	_flags& (0+255),1,b
  3003   005C46                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  3006   005C46  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3007   005C48  6ED9               	movwf	fsr2l,c
  3008   005C4A  6ADA               	clrf	fsr2h,c
  3009   005C4C  2ADE               	incf	postinc2,f,c
  3010   005C4E  0E00               	movlw	0
  3011   005C50  22DD               	addwfc	postdec2,f,c
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  3014   005C52  EF3E  F02E         	goto	l5666
  3015   005C56                     l5660:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  3018   005C56  0E01               	movlw	1
  3019   005C58  6E3F               	movwf	vfpfcnvrt@done^0,c
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  3022   005C5A  EF3E  F02E         	goto	l5666
  3023   005C5E                     l5664:
  3024   005C5E  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3025   005C60  6ED9               	movwf	fsr2l,c
  3026   005C62  6ADA               	clrf	fsr2h,c
  3027   005C64  CFDE FFF6          	movff	postinc2,tblptrl
  3028   005C68  CFDD FFF7          	movff	postdec2,tblptrh
  3029   005C6C                     	if	0	;tblptru may be non-zero
  3030   005C6C                     	endif
  3031   005C6C                     	if	0	;tblptru may be non-zero
  3032   005C6C                     	endif
  3033   005C6C  0008               	tblrd		*
  3034   005C6E  50F5               	movf	tablat,w,c
  3035                           
  3036                           ; Switch size 1, requested type "simple"
  3037                           ; Number of cases is 1, Range of values is 48 to 48
  3038                           ; switch strategies available:
  3039                           ; Name         Instructions Cycles
  3040                           ; simple_byte            4     3 (average)
  3041                           ;	Chosen strategy is simple_byte
  3042   005C70  0A30               	xorlw	48	; case 48
  3043   005C72  B4D8               	btfsc	status,2,c
  3044   005C74  EF21  F02E         	goto	l5656
  3045   005C78  EF2B  F02E         	goto	l5660
  3046   005C7C                     l5666:
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  3049   005C7C  503F               	movf	vfpfcnvrt@done^0,w,c
  3050   005C7E  B4D8               	btfsc	status,2,c
  3051   005C80  EF44  F02E         	goto	u6671
  3052   005C84  EF46  F02E         	goto	u6670
  3053   005C88                     u6671:
  3054   005C88  EF2F  F02E         	goto	l5664
  3055   005C8C                     u6670:
  3056   005C8C                     
  3057                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3058   005C8C  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3059   005C8E  6ED9               	movwf	fsr2l,c
  3060   005C90  6ADA               	clrf	fsr2h,c
  3061   005C92  CFDE FFF6          	movff	postinc2,tblptrl
  3062   005C96  CFDD FFF7          	movff	postdec2,tblptrh
  3063   005C9A                     	if	0	;tblptru may be non-zero
  3064   005C9A                     	endif
  3065   005C9A                     	if	0	;tblptru may be non-zero
  3066   005C9A                     	endif
  3067   005C9A  0008               	tblrd		*
  3068   005C9C  50F5               	movf	tablat,w,c
  3069   005C9E  0A2E               	xorlw	46
  3070   005CA0  A4D8               	btfss	status,2,c
  3071   005CA2  EF55  F02E         	goto	u6681
  3072   005CA6  EF57  F02E         	goto	u6680
  3073   005CAA                     u6681:
  3074   005CAA  EF67  F02E         	goto	l5674
  3075   005CAE                     u6680:
  3076   005CAE                     
  3077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3078   005CAE  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3079   005CB0  6ED9               	movwf	fsr2l,c
  3080   005CB2  6ADA               	clrf	fsr2h,c
  3081   005CB4  2ADE               	incf	postinc2,f,c
  3082   005CB6  0E00               	movlw	0
  3083   005CB8  22DD               	addwfc	postdec2,f,c
  3084   005CBA                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3086   005CBA  C037  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3087   005CBE  C038  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3088   005CC2  EC01  F026         	call	_read_prec_or_width	;wreg free
  3089   005CC6  C007  F0B5         	movff	?_read_prec_or_width,_prec
  3090   005CCA  C008  F0B6         	movff	?_read_prec_or_width+1,_prec+1
  3091   005CCE                     l5674:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3094   005CCE  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3095   005CD0  6ED9               	movwf	fsr2l,c
  3096   005CD2  6ADA               	clrf	fsr2h,c
  3097   005CD4  CFDE F041          	movff	postinc2,vfpfcnvrt@cp
  3098   005CD8  CFDD F042          	movff	postdec2,vfpfcnvrt@cp+1
  3099   005CDC                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3101   005CDC  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3102   005CE0  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3103   005CE4                     	if	0	;tblptru may be non-zero
  3104   005CE4                     	endif
  3105   005CE4                     	if	0	;tblptru may be non-zero
  3106   005CE4                     	endif
  3107   005CE4  0008               	tblrd		*
  3108   005CE6  CFF5 F040          	movff	tablat,vfpfcnvrt@c
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3111   005CEA  EF83  F02E         	goto	l5686
  3112   005CEE                     l5678:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3115   005CEE  4A41               	infsnz	vfpfcnvrt@cp^0,f,c
  3116   005CF0  2A42               	incf	(vfpfcnvrt@cp+1)^0,f,c
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  3119   005CF2  EF92  F02E         	goto	l5688
  3120   005CF6                     l5680:
  3121                           
  3122                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3123   005CF6  0E6C               	movlw	108
  3124   005CF8  6E40               	movwf	vfpfcnvrt@c^0,c
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  3127   005CFA  EF92  F02E         	goto	l5688
  3128   005CFE                     l5682:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3131   005CFE  0E00               	movlw	0
  3132   005D00  6E40               	movwf	vfpfcnvrt@c^0,c
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  3135   005D02  EF92  F02E         	goto	l5688
  3136   005D06                     l5686:
  3137   005D06  5040               	movf	vfpfcnvrt@c^0,w,c
  3138                           
  3139                           ; Switch size 1, requested type "simple"
  3140                           ; Number of cases is 3, Range of values is 76 to 108
  3141                           ; switch strategies available:
  3142                           ; Name         Instructions Cycles
  3143                           ; simple_byte           10     6 (average)
  3144                           ;	Chosen strategy is simple_byte
  3145   005D08  0A4C               	xorlw	76	; case 76
  3146   005D0A  B4D8               	btfsc	status,2,c
  3147   005D0C  EF77  F02E         	goto	l5678
  3148   005D10  0A2A               	xorlw	42	; case 102
  3149   005D12  B4D8               	btfsc	status,2,c
  3150   005D14  EF7B  F02E         	goto	l5680
  3151   005D18  0A0A               	xorlw	10	; case 108
  3152   005D1A  B4D8               	btfsc	status,2,c
  3153   005D1C  EF77  F02E         	goto	l5678
  3154   005D20  EF7F  F02E         	goto	l5682
  3155   005D24                     l5688:
  3156   005D24  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3157   005D28  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3158   005D2C                     	if	0	;tblptru may be non-zero
  3159   005D2C                     	endif
  3160   005D2C                     	if	0	;tblptru may be non-zero
  3161   005D2C                     	endif
  3162   005D2C  0008               	tblrd		*
  3163   005D2E  50F5               	movf	tablat,w,c
  3164   005D30  0A66               	xorlw	102
  3165   005D32  A4D8               	btfss	status,2,c
  3166   005D34  EF9E  F02E         	goto	u6691
  3167   005D38  EFA0  F02E         	goto	u6690
  3168   005D3C                     u6691:
  3169   005D3C  EF05  F02F         	goto	l5708
  3170   005D40                     u6690:
  3171   005D40  EFCA  F02E         	goto	l5696
  3172   005D44                     l5690:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3175   005D44  5038               	movf	vfpfcnvrt@ap^0,w,c
  3176   005D46  6ED9               	movwf	fsr2l,c
  3177   005D48  6ADA               	clrf	fsr2h,c
  3178   005D4A  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3179   005D4E  0E04               	movlw	4
  3180   005D50  26DF               	addwf	indf2,f,c
  3181   005D52  5039               	movf	??_vfpfcnvrt^0,w,c
  3182   005D54  6ED9               	movwf	fsr2l,c
  3183   005D56  6ADA               	clrf	fsr2h,c
  3184   005D58  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  3185   005D5C  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  3186   005D60  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  3187   005D64  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  3190   005D68  EFD5  F02E         	goto	l5698
  3191   005D6C                     l5692:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3194   005D6C  5038               	movf	vfpfcnvrt@ap^0,w,c
  3195   005D6E  6ED9               	movwf	fsr2l,c
  3196   005D70  6ADA               	clrf	fsr2h,c
  3197   005D72  CFDF F039          	movff	indf2,??_vfpfcnvrt
  3198   005D76  0E04               	movlw	4
  3199   005D78  26DF               	addwf	indf2,f,c
  3200   005D7A  5039               	movf	??_vfpfcnvrt^0,w,c
  3201   005D7C  6ED9               	movwf	fsr2l,c
  3202   005D7E  6ADA               	clrf	fsr2h,c
  3203   005D80  CFDE F03B          	movff	postinc2,vfpfcnvrt@convarg
  3204   005D84  CFDE F03C          	movff	postinc2,vfpfcnvrt@convarg+1
  3205   005D88  CFDE F03D          	movff	postinc2,vfpfcnvrt@convarg+2
  3206   005D8C  CFDE F03E          	movff	postinc2,vfpfcnvrt@convarg+3
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  3209   005D90  EFD5  F02E         	goto	l5698
  3210   005D94                     l5696:
  3211   005D94  5040               	movf	vfpfcnvrt@c^0,w,c
  3212                           
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 2, Range of values is 76 to 108
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte            7     4 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219   005D96  0A4C               	xorlw	76	; case 76
  3220   005D98  B4D8               	btfsc	status,2,c
  3221   005D9A  EFB6  F02E         	goto	l5692
  3222   005D9E  0A20               	xorlw	32	; case 108
  3223   005DA0  B4D8               	btfsc	status,2,c
  3224   005DA2  EFA2  F02E         	goto	l5690
  3225   005DA6  EFD5  F02E         	goto	l5698
  3226   005DAA                     l5698:
  3227                           
  3228                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3229   005DAA  0E01               	movlw	1
  3230   005DAC  2441               	addwf	vfpfcnvrt@cp^0,w,c
  3231   005DAE  6E39               	movwf	??_vfpfcnvrt^0,c
  3232   005DB0  0E00               	movlw	0
  3233   005DB2  2042               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3234   005DB4  6E3A               	movwf	(??_vfpfcnvrt+1)^0,c
  3235   005DB6  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3236   005DB8  6ED9               	movwf	fsr2l,c
  3237   005DBA  6ADA               	clrf	fsr2h,c
  3238   005DBC  C039  FFDE         	movff	??_vfpfcnvrt,postinc2
  3239   005DC0  C03A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3242   005DC4  EFF9  F02E         	goto	l5706
  3243   005DC8                     l5700:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3246   005DC8  C036  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3247   005DCC  C03B  F02F         	movff	vfpfcnvrt@convarg,efgtoa@f
  3248   005DD0  C03C  F030         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3249   005DD4  C03D  F031         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3250   005DD8  C03E  F032         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3251   005DDC  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3252   005DE0  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3253   005DE4                     	if	0	;tblptru may be non-zero
  3254   005DE4                     	endif
  3255   005DE4                     	if	0	;tblptru may be non-zero
  3256   005DE4                     	endif
  3257   005DE4  0008               	tblrd		*
  3258   005DE6  CFF5 F033          	movff	tablat,efgtoa@c
  3259   005DEA  ECB3  F036         	call	_efgtoa	;wreg free
  3260   005DEE  EF1E  F02F         	goto	l1307
  3261   005DF2                     l5706:
  3262   005DF2  C041  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3263   005DF6  C042  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3264   005DFA                     	if	0	;tblptru may be non-zero
  3265   005DFA                     	endif
  3266   005DFA                     	if	0	;tblptru may be non-zero
  3267   005DFA                     	endif
  3268   005DFA  0008               	tblrd		*
  3269   005DFC  50F5               	movf	tablat,w,c
  3270                           
  3271                           ; Switch size 1, requested type "simple"
  3272                           ; Number of cases is 1, Range of values is 102 to 102
  3273                           ; switch strategies available:
  3274                           ; Name         Instructions Cycles
  3275                           ; simple_byte            4     3 (average)
  3276                           ;	Chosen strategy is simple_byte
  3277   005DFE  0A66               	xorlw	102	; case 102
  3278   005E00  B4D8               	btfsc	status,2,c
  3279   005E02  EFE4  F02E         	goto	l5700
  3280   005E06  EF05  F02F         	goto	l5708
  3281   005E0A                     l5708:
  3282                           
  3283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3284   005E0A  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3285   005E0C  6ED9               	movwf	fsr2l,c
  3286   005E0E  6ADA               	clrf	fsr2h,c
  3287   005E10  2ADE               	incf	postinc2,f,c
  3288   005E12  0E00               	movlw	0
  3289   005E14  22DD               	addwfc	postdec2,f,c
  3290   005E16  EF1E  F02F         	goto	l1307
  3291   005E1A                     l5712:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3294   005E1A  5037               	movf	vfpfcnvrt@fmt^0,w,c
  3295   005E1C  6ED9               	movwf	fsr2l,c
  3296   005E1E  6ADA               	clrf	fsr2h,c
  3297   005E20  CFDE FFF6          	movff	postinc2,tblptrl
  3298   005E24  CFDD FFF7          	movff	postdec2,tblptrh
  3299   005E28                     	if	0	;tblptru may be non-zero
  3300   005E28                     	endif
  3301   005E28                     	if	0	;tblptru may be non-zero
  3302   005E28                     	endif
  3303   005E28  0008               	tblrd		*
  3304   005E2A  50F5               	movf	tablat,w,c
  3305   005E2C  6E01               	movwf	fputc@c^0,c
  3306   005E2E  6A02               	clrf	(fputc@c+1)^0,c
  3307   005E30  C036  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3308   005E34  ECAC  F025         	call	_fputc	;wreg free
  3309   005E38  EF05  F02F         	goto	l5708
  3310   005E3C                     l1307:
  3311   005E3C  0012               	return		;funcret
  3312   005E3E                     __end_of_vfpfcnvrt:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _read_prec_or_width *****************
  3316 ;; Defined at:
  3317 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3320 ;;		 -> vfprintf@cfmt(2), 
  3321 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3322 ;;		 -> sprintf@ap(1), 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  c               1    8[COMRAM] unsigned char 
  3325 ;;  n               2    9[COMRAM] int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    6[COMRAM] int 
  3328 ;; Registers used:
  3329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         2       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        5 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; Hardware stack levels required when called: 1
  3342 ;; This function calls:
  3343 ;;		___wmul
  3344 ;; This function is called by:
  3345 ;;		_vfpfcnvrt
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text4
  3350   004C02                     __ptext4:
  3351                           	callstack 0
  3352   004C02                     _read_prec_or_width:
  3353                           	callstack 26
  3354   004C02                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3356   004C02  0E00               	movlw	0
  3357   004C04  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3358   004C06  0E00               	movlw	0
  3359   004C08  6E0A               	movwf	read_prec_or_width@n^0,c
  3360   004C0A                     
  3361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3362   004C0A  5007               	movf	read_prec_or_width@fmt^0,w,c
  3363   004C0C  6ED9               	movwf	fsr2l,c
  3364   004C0E  6ADA               	clrf	fsr2h,c
  3365   004C10  CFDE FFF6          	movff	postinc2,tblptrl
  3366   004C14  CFDD FFF7          	movff	postdec2,tblptrh
  3367   004C18                     	if	0	;tblptru may be non-zero
  3368   004C18                     	endif
  3369   004C18                     	if	0	;tblptru may be non-zero
  3370   004C18                     	endif
  3371   004C18  0008               	tblrd		*
  3372   004C1A  50F5               	movf	tablat,w,c
  3373   004C1C  0A2A               	xorlw	42
  3374   004C1E  A4D8               	btfss	status,2,c
  3375   004C20  EF14  F026         	goto	u4771
  3376   004C24  EF16  F026         	goto	u4770
  3377   004C28                     u4771:
  3378   004C28  EF40  F026         	goto	l4354
  3379   004C2C                     u4770:
  3380   004C2C                     
  3381                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3382   004C2C  5007               	movf	read_prec_or_width@fmt^0,w,c
  3383   004C2E  6ED9               	movwf	fsr2l,c
  3384   004C30  6ADA               	clrf	fsr2h,c
  3385   004C32  2ADE               	incf	postinc2,f,c
  3386   004C34  0E00               	movlw	0
  3387   004C36  22DD               	addwfc	postdec2,f,c
  3388   004C38                     
  3389                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3390   004C38  5008               	movf	read_prec_or_width@ap^0,w,c
  3391   004C3A  6ED9               	movwf	fsr2l,c
  3392   004C3C  6ADA               	clrf	fsr2h,c
  3393   004C3E  0E02               	movlw	2
  3394   004C40  26DF               	addwf	indf2,f,c
  3395   004C42  5CDF               	subwf	indf2,w,c
  3396   004C44  6ED9               	movwf	fsr2l,c
  3397   004C46  6ADA               	clrf	fsr2h,c
  3398   004C48  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3399   004C4C  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3402   004C50  EF53  F026         	goto	l1276
  3403   004C54                     l4350:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3406   004C54  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3407   004C58  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3408   004C5C  0E00               	movlw	0
  3409   004C5E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3410   004C60  0E0A               	movlw	10
  3411   004C62  6E03               	movwf	___wmul@multiplicand^0,c
  3412   004C64  EC25  F023         	call	___wmul	;wreg free
  3413   004C68  5009               	movf	read_prec_or_width@c^0,w,c
  3414   004C6A  2401               	addwf	?___wmul^0,w,c
  3415   004C6C  6E0A               	movwf	read_prec_or_width@n^0,c
  3416   004C6E  0E00               	movlw	0
  3417   004C70  2002               	addwfc	(?___wmul+1)^0,w,c
  3418   004C72  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3419   004C74                     
  3420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3421   004C74  5007               	movf	read_prec_or_width@fmt^0,w,c
  3422   004C76  6ED9               	movwf	fsr2l,c
  3423   004C78  6ADA               	clrf	fsr2h,c
  3424   004C7A  2ADE               	incf	postinc2,f,c
  3425   004C7C  0E00               	movlw	0
  3426   004C7E  22DD               	addwfc	postdec2,f,c
  3427   004C80                     l4354:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3430   004C80  5007               	movf	read_prec_or_width@fmt^0,w,c
  3431   004C82  6ED9               	movwf	fsr2l,c
  3432   004C84  6ADA               	clrf	fsr2h,c
  3433   004C86  CFDE FFF6          	movff	postinc2,tblptrl
  3434   004C8A  CFDD FFF7          	movff	postdec2,tblptrh
  3435   004C8E                     	if	0	;tblptru may be non-zero
  3436   004C8E                     	endif
  3437   004C8E                     	if	0	;tblptru may be non-zero
  3438   004C8E                     	endif
  3439   004C8E  0008               	tblrd		*
  3440   004C90  50F5               	movf	tablat,w,c
  3441   004C92  0FD0               	addlw	208
  3442   004C94  6E09               	movwf	read_prec_or_width@c^0,c
  3443   004C96  0E09               	movlw	9
  3444   004C98  6409               	cpfsgt	read_prec_or_width@c^0,c
  3445   004C9A  EF51  F026         	goto	u4781
  3446   004C9E  EF53  F026         	goto	u4780
  3447   004CA2                     u4781:
  3448   004CA2  EF2A  F026         	goto	l4350
  3449   004CA6                     u4780:
  3450   004CA6                     l1276:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3453   004CA6  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3454   004CAA  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3455   004CAE  0012               	return		;funcret
  3456   004CB0                     __end_of_read_prec_or_width:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function ___wmul *****************
  3460 ;; Defined at:
  3461 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  multiplier      2    0[COMRAM] unsigned int 
  3464 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  product         2    4[COMRAM] unsigned int 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  2    0[COMRAM] unsigned int 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, prodl, prodh
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3476 ;;      Params:         4       0       0       0       0       0       0       0       0
  3477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3479 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3480 ;;Total ram usage:        6 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_read_prec_or_width
  3486 ;;		_TFT_FillTriangle
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text5
  3491   00464A                     __ptext5:
  3492                           	callstack 0
  3493   00464A                     ___wmul:
  3494                           	callstack 26
  3495   00464A  5001               	movf	___wmul@multiplier^0,w,c
  3496   00464C  0203               	mulwf	___wmul@multiplicand^0,c
  3497   00464E  CFF3 F005          	movff	prodl,___wmul@product
  3498   004652  CFF4 F006          	movff	prodh,___wmul@product+1
  3499   004656  5001               	movf	___wmul@multiplier^0,w,c
  3500   004658  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3501   00465A  50F3               	movf	243,w,c
  3502   00465C  2606               	addwf	(___wmul@product+1)^0,f,c
  3503   00465E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3504   004660  0203               	mulwf	___wmul@multiplicand^0,c
  3505   004662  50F3               	movf	243,w,c
  3506   004664  2606               	addwf	(___wmul@product+1)^0,f,c
  3507   004666  C005  F001         	movff	___wmul@product,?___wmul
  3508   00466A  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3509   00466E  0012               	return		;funcret
  3510   004670                     __end_of___wmul:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _efgtoa *****************
  3514 ;; Defined at:
  3515 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  fp              1   45[COMRAM] PTR struct _IO_FILE
  3518 ;;		 -> sprintf@f(12), 
  3519 ;;  f               4   46[COMRAM] PTR struct _IO_FILE
  3520 ;;  c               1   50[COMRAM] unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  u               4   40[BANK0 ] struct flui
  3523 ;;  g               4   34[BANK0 ] struct flui
  3524 ;;  l               4   27[BANK0 ] struct flui
  3525 ;;  h               4   23[BANK0 ] struct flui
  3526 ;;  ou              4   17[BANK0 ] struct flui
  3527 ;;  n               2   38[BANK0 ] int 
  3528 ;;  i               2   31[BANK0 ] int 
  3529 ;;  w               2   21[BANK0 ] int 
  3530 ;;  e               2   15[BANK0 ] int 
  3531 ;;  m               2   13[BANK0 ] int 
  3532 ;;  d               2   11[BANK0 ] int 
  3533 ;;  t               2    4[BANK0 ] int 
  3534 ;;  p               2    2[BANK0 ] int 
  3535 ;;  ne              2    0[BANK0 ] int 
  3536 ;;  sign            1   33[BANK0 ] unsigned char 
  3537 ;;  nmode           1   10[BANK0 ] unsigned char 
  3538 ;;  mode            1    9[BANK0 ] unsigned char 
  3539 ;;  pp              1    8[BANK0 ] unsigned char 
  3540 ;;  esign           1    0        unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3550 ;;      Params:         6       0       0       0       0       0       0       0       0
  3551 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3552 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3553 ;;      Totals:         8      44       0       0       0       0       0       0       0
  3554 ;;Total ram usage:       52 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 4
  3557 ;; This function calls:
  3558 ;;		___fladd
  3559 ;;		___fldiv
  3560 ;;		___fleq
  3561 ;;		___flge
  3562 ;;		___flmul
  3563 ;;		___flneg
  3564 ;;		___flsub
  3565 ;;		___fltol
  3566 ;;		___fpclassifyf
  3567 ;;		_floorf
  3568 ;;		_labs
  3569 ;;		_memcpy
  3570 ;;		_pad
  3571 ;;		_strcpy
  3572 ;; This function is called by:
  3573 ;;		_vfpfcnvrt
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text6
  3578   006D66                     __ptext6:
  3579                           	callstack 0
  3580   006D66                     _efgtoa:
  3581                           	callstack 23
  3582   006D66                     
  3583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3584   006D66  0E00               	movlw	0
  3585   006D68  0100               	movlb	0	; () banked
  3586   006D6A  6F81               	movwf	efgtoa@sign& (0+255),b
  3587   006D6C                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3590   006D6C  C02F  F082         	movff	efgtoa@f,efgtoa@g
  3591   006D70  C030  F083         	movff	efgtoa@f+1,efgtoa@g+1
  3592   006D74  C031  F084         	movff	efgtoa@f+2,efgtoa@g+2
  3593   006D78  C032  F085         	movff	efgtoa@f+3,efgtoa@g+3
  3594   006D7C                     
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3597   006D7C  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3598   006D7E  EFC5  F036         	goto	u6310
  3599   006D82  EFC3  F036         	goto	u6311
  3600   006D86                     u6311:
  3601   006D86  EFD9  F036         	goto	l5422
  3602   006D8A                     u6310:
  3603   006D8A                     
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3606   006D8A  0E01               	movlw	1
  3607   006D8C  6F81               	movwf	efgtoa@sign& (0+255),b
  3608   006D8E                     
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3611   006D8E  C082  F001         	movff	efgtoa@g,___flneg@f1
  3612   006D92  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3613   006D96  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3614   006D9A  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3615   006D9E  EC54  F023         	call	___flneg	;wreg free
  3616   006DA2  C001  F082         	movff	?___flneg,efgtoa@g
  3617   006DA6  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  3618   006DAA  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  3619   006DAE  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  3620   006DB2                     l5422:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3623   006DB2  0E00               	movlw	0
  3624   006DB4  0100               	movlb	0	; () banked
  3625   006DB6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3626   006DB8  0E00               	movlw	0
  3627   006DBA  6F86               	movwf	efgtoa@n& (0+255),b
  3628   006DBC                     
  3629                           ; BSR set to: 0
  3630                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3631   006DBC  C0B3  F075         	movff	_width,efgtoa@w
  3632   006DC0  C0B4  F076         	movff	_width+1,efgtoa@w+1
  3633   006DC4                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3636   006DC4  5181               	movf	efgtoa@sign& (0+255),w,b
  3637   006DC6  B4D8               	btfsc	status,2,c
  3638   006DC8  EFE8  F036         	goto	u6321
  3639   006DCC  EFEA  F036         	goto	u6320
  3640   006DD0                     u6321:
  3641   006DD0  EFFE  F036         	goto	l5436
  3642   006DD4                     u6320:
  3643   006DD4                     
  3644                           ; BSR set to: 0
  3645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3646   006DD4  5181               	movf	efgtoa@sign& (0+255),w,b
  3647   006DD6  A4D8               	btfss	status,2,c
  3648   006DD8  EFF0  F036         	goto	u6331
  3649   006DDC  EFF2  F036         	goto	u6330
  3650   006DE0                     u6331:
  3651   006DE0  EFF8  F036         	goto	l5432
  3652   006DE4                     u6330:
  3653   006DE4                     
  3654                           ; BSR set to: 0
  3655   006DE4  0E00               	movlw	0
  3656   006DE6  6F67               	movwf	(_efgtoa$1490+1)& (0+255),b
  3657   006DE8  0E2B               	movlw	43
  3658   006DEA  6F66               	movwf	_efgtoa$1490& (0+255),b
  3659   006DEC  EFFC  F036         	goto	l5434
  3660   006DF0                     l5432:
  3661                           
  3662                           ; BSR set to: 0
  3663   006DF0  0E00               	movlw	0
  3664   006DF2  6F67               	movwf	(_efgtoa$1490+1)& (0+255),b
  3665   006DF4  0E2D               	movlw	45
  3666   006DF6  6F66               	movwf	_efgtoa$1490& (0+255),b
  3667   006DF8                     l5434:
  3668                           
  3669                           ; BSR set to: 0
  3670   006DF8  C066  F081         	movff	_efgtoa$1490,efgtoa@sign
  3671   006DFC                     l5436:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3675   006DFC  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3676   006E00  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3677   006E04  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3678   006E08  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3679   006E0C  EC85  F027         	call	___fpclassifyf	;wreg free
  3680   006E10  0401               	decf	?___fpclassifyf^0,w,c
  3681   006E12  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3682   006E14  A4D8               	btfss	status,2,c
  3683   006E16  EF0F  F037         	goto	u6341
  3684   006E1A  EF11  F037         	goto	u6340
  3685   006E1E                     u6341:
  3686   006E1E  EF42  F037         	goto	l5454
  3687   006E22                     u6340:
  3688   006E22                     
  3689                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3690   006E22  0100               	movlb	0	; () banked
  3691   006E24  5181               	movf	efgtoa@sign& (0+255),w,b
  3692   006E26  B4D8               	btfsc	status,2,c
  3693   006E28  EF18  F037         	goto	u6351
  3694   006E2C  EF1A  F037         	goto	u6350
  3695   006E30                     u6351:
  3696   006E30  EF23  F037         	goto	l5446
  3697   006E34                     u6350:
  3698   006E34                     
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3701   006E34  C081  F100         	movff	efgtoa@sign,_dbuf
  3702   006E38                     
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  3705   006E38  0775               	decf	efgtoa@w& (0+255),f,b
  3706   006E3A  A0D8               	btfss	status,0,c
  3707   006E3C  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3708   006E3E                     
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3711   006E3E  0E00               	movlw	0
  3712   006E40  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3713   006E42  0E01               	movlw	1
  3714   006E44  6F86               	movwf	efgtoa@n& (0+255),b
  3715   006E46                     l5446:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3719   006E46  0E00               	movlw	low _dbuf
  3720   006E48  2586               	addwf	efgtoa@n& (0+255),w,b
  3721   006E4A  6E01               	movwf	strcpy@dest^0,c
  3722   006E4C  0E01               	movlw	high _dbuf
  3723   006E4E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3724   006E50  6E02               	movwf	(strcpy@dest+1)^0,c
  3725   006E52  0EB6               	movlw	low STR_3
  3726   006E54  6E03               	movwf	strcpy@src^0,c
  3727   006E56  0E7D               	movlw	high STR_3
  3728   006E58  6E04               	movwf	(strcpy@src+1)^0,c
  3729   006E5A  EC70  F023         	call	_strcpy	;wreg free
  3730   006E5E                     l5448:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3733   006E5E  0100               	movlb	0	; () banked
  3734   006E60  0EFD               	movlw	253
  3735   006E62  2775               	addwf	efgtoa@w& (0+255),f,b
  3736   006E64  0EFF               	movlw	255
  3737   006E66  2376               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3738   006E68                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3741   006E68  C02E  F00F         	movff	efgtoa@fp,pad@fp
  3742   006E6C  0E00               	movlw	low _dbuf
  3743   006E6E  6E10               	movwf	pad@buf^0,c
  3744   006E70  0E01               	movlw	high _dbuf
  3745   006E72  6E11               	movwf	(pad@buf+1)^0,c
  3746   006E74  C075  F012         	movff	efgtoa@w,pad@p
  3747   006E78  C076  F013         	movff	efgtoa@w+1,pad@p+1
  3748   006E7C  ECE3  F024         	call	_pad	;wreg free
  3749   006E80  EFDF  F03B         	goto	l1225
  3750   006E84                     l5454:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3753   006E84  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3754   006E88  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3755   006E8C  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3756   006E90  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3757   006E94  EC85  F027         	call	___fpclassifyf	;wreg free
  3758   006E98  5001               	movf	?___fpclassifyf^0,w,c
  3759   006E9A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3760   006E9C  A4D8               	btfss	status,2,c
  3761   006E9E  EF53  F037         	goto	u6361
  3762   006EA2  EF55  F037         	goto	u6360
  3763   006EA6                     u6361:
  3764   006EA6  EF75  F037         	goto	l5472
  3765   006EAA                     u6360:
  3766   006EAA                     
  3767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3768   006EAA  0100               	movlb	0	; () banked
  3769   006EAC  5181               	movf	efgtoa@sign& (0+255),w,b
  3770   006EAE  B4D8               	btfsc	status,2,c
  3771   006EB0  EF5C  F037         	goto	u6371
  3772   006EB4  EF5E  F037         	goto	u6370
  3773   006EB8                     u6371:
  3774   006EB8  EF67  F037         	goto	l5464
  3775   006EBC                     u6370:
  3776   006EBC                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3779   006EBC  C081  F100         	movff	efgtoa@sign,_dbuf
  3780   006EC0                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  3783   006EC0  0775               	decf	efgtoa@w& (0+255),f,b
  3784   006EC2  A0D8               	btfss	status,0,c
  3785   006EC4  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  3786   006EC6                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3789   006EC6  0E00               	movlw	0
  3790   006EC8  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3791   006ECA  0E01               	movlw	1
  3792   006ECC  6F86               	movwf	efgtoa@n& (0+255),b
  3793   006ECE                     l5464:
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3797   006ECE  0E00               	movlw	low _dbuf
  3798   006ED0  2586               	addwf	efgtoa@n& (0+255),w,b
  3799   006ED2  6E01               	movwf	strcpy@dest^0,c
  3800   006ED4  0E01               	movlw	high _dbuf
  3801   006ED6  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3802   006ED8  6E02               	movwf	(strcpy@dest+1)^0,c
  3803   006EDA  0EBA               	movlw	low STR_6
  3804   006EDC  6E03               	movwf	strcpy@src^0,c
  3805   006EDE  0E7D               	movlw	high STR_6
  3806   006EE0  6E04               	movwf	(strcpy@src+1)^0,c
  3807   006EE2  EC70  F023         	call	_strcpy	;wreg free
  3808   006EE6  EF2F  F037         	goto	l5448
  3809   006EEA                     l5472:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3812   006EEA  0E00               	movlw	0
  3813   006EEC  0100               	movlb	0	; () banked
  3814   006EEE  6F88               	movwf	efgtoa@u& (0+255),b
  3815   006EF0  0E00               	movlw	0
  3816   006EF2  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3817   006EF4  0E80               	movlw	128
  3818   006EF6  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3819   006EF8  0E3F               	movlw	63
  3820   006EFA  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3823   006EFC  0E00               	movlw	0
  3824   006EFE  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3825   006F00  0E00               	movlw	0
  3826   006F02  6F6F               	movwf	efgtoa@e& (0+255),b
  3827   006F04                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3830   006F04  C082  F001         	movff	efgtoa@g,___fleq@ff1
  3831   006F08  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3832   006F0C  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3833   006F10  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3834   006F14  0E00               	movlw	0
  3835   006F16  6E05               	movwf	___fleq@ff2^0,c
  3836   006F18  0E00               	movlw	0
  3837   006F1A  6E06               	movwf	(___fleq@ff2+1)^0,c
  3838   006F1C  0E00               	movlw	0
  3839   006F1E  6E07               	movwf	(___fleq@ff2+2)^0,c
  3840   006F20  0E00               	movlw	0
  3841   006F22  6E08               	movwf	(___fleq@ff2+3)^0,c
  3842   006F24  EC57  F025         	call	___fleq	;wreg free
  3843   006F28  B0D8               	btfsc	status,0,c
  3844   006F2A  EF99  F037         	goto	u6381
  3845   006F2E  EF9B  F037         	goto	u6380
  3846   006F32                     u6381:
  3847   006F32  EF7A  F038         	goto	l1228
  3848   006F36                     u6380:
  3849   006F36  EFA8  F037         	goto	l5480
  3850   006F3A                     l1230:
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3853   006F3A  C071  F088         	movff	efgtoa@ou,efgtoa@u
  3854   006F3E  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3855   006F42  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3856   006F46  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3857   006F4A                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3859   006F4A  0100               	movlb	0	; () banked
  3860   006F4C  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3861   006F4E  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3862   006F50                     l5480:
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3865   006F50  C088  F001         	movff	efgtoa@u,___flmul@b
  3866   006F54  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3867   006F58  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3868   006F5C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3869   006F60  0E00               	movlw	0
  3870   006F62  6E05               	movwf	___flmul@a^0,c
  3871   006F64  0E00               	movlw	0
  3872   006F66  6E06               	movwf	(___flmul@a+1)^0,c
  3873   006F68  0E20               	movlw	32
  3874   006F6A  6E07               	movwf	(___flmul@a+2)^0,c
  3875   006F6C  0E41               	movlw	65
  3876   006F6E  6E08               	movwf	(___flmul@a+3)^0,c
  3877   006F70  EC3E  F032         	call	___flmul	;wreg free
  3878   006F74  C001  F071         	movff	?___flmul,efgtoa@ou
  3879   006F78  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  3880   006F7C  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  3881   006F80  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  3882   006F84  0100               	movlb	0	; () banked
  3883   006F86  5171               	movf	efgtoa@ou& (0+255),w,b
  3884   006F88  5D82               	subwf	efgtoa@g& (0+255),w,b
  3885   006F8A  6E01               	movwf	labs@a^0,c
  3886   006F8C  5172               	movf	(efgtoa@ou+1)& (0+255),w,b
  3887   006F8E  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3888   006F90  6E02               	movwf	(labs@a+1)^0,c
  3889   006F92  5173               	movf	(efgtoa@ou+2)& (0+255),w,b
  3890   006F94  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3891   006F96  6E03               	movwf	(labs@a+2)^0,c
  3892   006F98  5174               	movf	(efgtoa@ou+3)& (0+255),w,b
  3893   006F9A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3894   006F9C  6E04               	movwf	(labs@a+3)^0,c
  3895   006F9E  EC5A  F024         	call	_labs	;wreg free
  3896   006FA2  BE04               	btfsc	(?_labs+3)^0,7,c
  3897   006FA4  EFDF  F037         	goto	u6391
  3898   006FA8  5004               	movf	(?_labs+3)^0,w,c
  3899   006FAA  1003               	iorwf	(?_labs+2)^0,w,c
  3900   006FAC  1002               	iorwf	(?_labs+1)^0,w,c
  3901   006FAE  E109               	bnz	u6390
  3902   006FB0  0E02               	movlw	2
  3903   006FB2  5C01               	subwf	?_labs^0,w,c
  3904   006FB4  A0D8               	btfss	status,0,c
  3905   006FB6  EFDF  F037         	goto	u6391
  3906   006FBA  EFE1  F037         	goto	u6390
  3907   006FBE                     u6391:
  3908   006FBE  EF9D  F037         	goto	l1230
  3909   006FC2                     u6390:
  3910   006FC2  C071  F01A         	movff	efgtoa@ou,___flge@ff1
  3911   006FC6  C072  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3912   006FCA  C073  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3913   006FCE  C074  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3914   006FD2  C082  F01E         	movff	efgtoa@g,___flge@ff2
  3915   006FD6  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3916   006FDA  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3917   006FDE  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3918   006FE2  EC04  F028         	call	___flge	;wreg free
  3919   006FE6  A0D8               	btfss	status,0,c
  3920   006FE8  EFF8  F037         	goto	u6401
  3921   006FEC  EFFA  F037         	goto	u6400
  3922   006FF0                     u6401:
  3923   006FF0  EF9D  F037         	goto	l1230
  3924   006FF4                     u6400:
  3925   006FF4                     
  3926                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3927   006FF4  0100               	movlb	0	; () banked
  3928   006FF6  5188               	movf	efgtoa@u& (0+255),w,b
  3929   006FF8  5D82               	subwf	efgtoa@g& (0+255),w,b
  3930   006FFA  6E01               	movwf	labs@a^0,c
  3931   006FFC  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3932   006FFE  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3933   007000  6E02               	movwf	(labs@a+1)^0,c
  3934   007002  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3935   007004  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3936   007006  6E03               	movwf	(labs@a+2)^0,c
  3937   007008  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3938   00700A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3939   00700C  6E04               	movwf	(labs@a+3)^0,c
  3940   00700E  EC5A  F024         	call	_labs	;wreg free
  3941   007012  BE04               	btfsc	(?_labs+3)^0,7,c
  3942   007014  EF19  F038         	goto	u6410
  3943   007018  5004               	movf	(?_labs+3)^0,w,c
  3944   00701A  1003               	iorwf	(?_labs+2)^0,w,c
  3945   00701C  1002               	iorwf	(?_labs+1)^0,w,c
  3946   00701E  E107               	bnz	u6411
  3947   007020  0E02               	movlw	2
  3948   007022  5C01               	subwf	?_labs^0,w,c
  3949   007024  B0D8               	btfsc	status,0,c
  3950   007026  EF17  F038         	goto	u6411
  3951   00702A  EF19  F038         	goto	u6410
  3952   00702E                     u6411:
  3953   00702E  EF61  F038         	goto	l5498
  3954   007032                     u6410:
  3955   007032                     l5488:
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3958   007032  C088  F082         	movff	efgtoa@u,efgtoa@g
  3959   007036  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3960   00703A  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3961   00703E  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3962                           
  3963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  3964   007042  EF7A  F038         	goto	l1228
  3965   007046                     l5490:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3968   007046  C088  F001         	movff	efgtoa@u,___fldiv@b
  3969   00704A  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3970   00704E  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3971   007052  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3972   007056  0E00               	movlw	0
  3973   007058  6E05               	movwf	___fldiv@a^0,c
  3974   00705A  0E00               	movlw	0
  3975   00705C  6E06               	movwf	(___fldiv@a+1)^0,c
  3976   00705E  0E20               	movlw	32
  3977   007060  6E07               	movwf	(___fldiv@a+2)^0,c
  3978   007062  0E41               	movlw	65
  3979   007064  6E08               	movwf	(___fldiv@a+3)^0,c
  3980   007066  EC71  F030         	call	___fldiv	;wreg free
  3981   00706A  C001  F088         	movff	?___fldiv,efgtoa@u
  3982   00706E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3983   007072  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3984   007076  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3985   00707A                     
  3986                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  3987   00707A  0100               	movlb	0	; () banked
  3988   00707C  076F               	decf	efgtoa@e& (0+255),f,b
  3989   00707E  A0D8               	btfss	status,0,c
  3990   007080  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3991   007082                     
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3994   007082  5188               	movf	efgtoa@u& (0+255),w,b
  3995   007084  5D82               	subwf	efgtoa@g& (0+255),w,b
  3996   007086  6E01               	movwf	labs@a^0,c
  3997   007088  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3998   00708A  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3999   00708C  6E02               	movwf	(labs@a+1)^0,c
  4000   00708E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  4001   007090  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4002   007092  6E03               	movwf	(labs@a+2)^0,c
  4003   007094  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  4004   007096  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4005   007098  6E04               	movwf	(labs@a+3)^0,c
  4006   00709A  EC5A  F024         	call	_labs	;wreg free
  4007   00709E  BE04               	btfsc	(?_labs+3)^0,7,c
  4008   0070A0  EF5F  F038         	goto	u6420
  4009   0070A4  5004               	movf	(?_labs+3)^0,w,c
  4010   0070A6  1003               	iorwf	(?_labs+2)^0,w,c
  4011   0070A8  1002               	iorwf	(?_labs+1)^0,w,c
  4012   0070AA  E107               	bnz	u6421
  4013   0070AC  0E02               	movlw	2
  4014   0070AE  5C01               	subwf	?_labs^0,w,c
  4015   0070B0  B0D8               	btfsc	status,0,c
  4016   0070B2  EF5D  F038         	goto	u6421
  4017   0070B6  EF5F  F038         	goto	u6420
  4018   0070BA                     u6421:
  4019   0070BA  EF61  F038         	goto	l5498
  4020   0070BE                     u6420:
  4021   0070BE  EF19  F038         	goto	l5488
  4022   0070C2                     l5498:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4025   0070C2  C082  F01A         	movff	efgtoa@g,___flge@ff1
  4026   0070C6  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  4027   0070CA  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  4028   0070CE  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  4029   0070D2  C088  F01E         	movff	efgtoa@u,___flge@ff2
  4030   0070D6  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  4031   0070DA  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  4032   0070DE  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  4033   0070E2  EC04  F028         	call	___flge	;wreg free
  4034   0070E6  A0D8               	btfss	status,0,c
  4035   0070E8  EF78  F038         	goto	u6431
  4036   0070EC  EF7A  F038         	goto	u6430
  4037   0070F0                     u6431:
  4038   0070F0  EF23  F038         	goto	l5490
  4039   0070F4                     u6430:
  4040   0070F4                     l1228:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4043   0070F4  C033  F069         	movff	efgtoa@c,efgtoa@mode
  4044                           
  4045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4046   0070F8  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  4047   0070FC                     
  4048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4049   0070FC  0100               	movlb	0	; () banked
  4050   0070FE  BFB6               	btfsc	(_prec+1)& (0+255),7,b
  4051   007100  EF84  F038         	goto	u6441
  4052   007104  EF86  F038         	goto	u6440
  4053   007108                     u6441:
  4054   007108  EF8C  F038         	goto	l5504
  4055   00710C                     u6440:
  4056   00710C                     
  4057                           ; BSR set to: 0
  4058   00710C  C0B5  F062         	movff	_prec,efgtoa@p
  4059   007110  C0B6  F063         	movff	_prec+1,efgtoa@p+1
  4060   007114  EF90  F038         	goto	l5506
  4061   007118                     l5504:
  4062                           
  4063                           ; BSR set to: 0
  4064   007118  0E00               	movlw	0
  4065   00711A  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  4066   00711C  0E06               	movlw	6
  4067   00711E  6F62               	movwf	efgtoa@p& (0+255),b
  4068   007120                     l5506:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4072   007120  C062  F06D         	movff	efgtoa@p,efgtoa@m
  4073   007124  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  4074   007128                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4077   007128  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4078   00712A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4079   00712C                     
  4080                           ; BSR set to: 0
  4081                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4082   00712C  0E66               	movlw	102
  4083   00712E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4084   007130  A4D8               	btfss	status,2,c
  4085   007132  EF9D  F038         	goto	u6451
  4086   007136  EF9F  F038         	goto	u6450
  4087   00713A                     u6451:
  4088   00713A  EFBF  F038         	goto	l5520
  4089   00713E                     u6450:
  4090   00713E                     
  4091                           ; BSR set to: 0
  4092                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4093   00713E  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4094   007140  EFA6  F038         	goto	u6460
  4095   007144  EFA4  F038         	goto	u6461
  4096   007148                     u6461:
  4097   007148  EFB2  F038         	goto	l5516
  4098   00714C                     u6460:
  4099   00714C                     
  4100                           ; BSR set to: 0
  4101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4102   00714C  0E00               	movlw	0
  4103   00714E  6F88               	movwf	efgtoa@u& (0+255),b
  4104   007150  0E00               	movlw	0
  4105   007152  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  4106   007154  0E80               	movlw	128
  4107   007156  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  4108   007158  0E3F               	movlw	63
  4109   00715A  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4112   00715C  0E00               	movlw	0
  4113   00715E  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  4114   007160  0E00               	movlw	0
  4115   007162  6F6F               	movwf	efgtoa@e& (0+255),b
  4116   007164                     l5516:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4120   007164  0E67               	movlw	103
  4121   007166  1969               	xorwf	efgtoa@mode& (0+255),w,b
  4122   007168  B4D8               	btfsc	status,2,c
  4123   00716A  EFB9  F038         	goto	u6471
  4124   00716E  EFBB  F038         	goto	u6470
  4125   007172                     u6471:
  4126   007172  EFBF  F038         	goto	l5520
  4127   007176                     u6470:
  4128   007176                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4131   007176  516F               	movf	efgtoa@e& (0+255),w,b
  4132   007178  276D               	addwf	efgtoa@m& (0+255),f,b
  4133   00717A  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  4134   00717C  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4135   00717E                     l5520:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4139   00717E  0E00               	movlw	0
  4140   007180  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4141   007182  0E00               	movlw	0
  4142   007184  6F7F               	movwf	efgtoa@i& (0+255),b
  4143   007186                     
  4144                           ; BSR set to: 0
  4145                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4146   007186  C082  F077         	movff	efgtoa@g,efgtoa@h
  4147   00718A  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  4148   00718E  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  4149   007192  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  4150   007196                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4153   007196  C088  F071         	movff	efgtoa@u,efgtoa@ou
  4154   00719A  C089  F072         	movff	efgtoa@u+1,efgtoa@ou+1
  4155   00719E  C08A  F073         	movff	efgtoa@u+2,efgtoa@ou+2
  4156   0071A2  C08B  F074         	movff	efgtoa@u+3,efgtoa@ou+3
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4159   0071A6  EF50  F039         	goto	l5534
  4160   0071AA                     l5526:
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4164   0071AA  C077  F001         	movff	efgtoa@h,___fldiv@b
  4165   0071AE  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4166   0071B2  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4167   0071B6  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4168   0071BA  C088  F005         	movff	efgtoa@u,___fldiv@a
  4169   0071BE  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4170   0071C2  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4171   0071C6  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4172   0071CA  EC71  F030         	call	___fldiv	;wreg free
  4173   0071CE  C001  F01A         	movff	?___fldiv,floorf@x
  4174   0071D2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4175   0071D6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4176   0071DA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4177   0071DE  ECF4  F02C         	call	_floorf	;wreg free
  4178   0071E2  C01A  F07B         	movff	?_floorf,efgtoa@l
  4179   0071E6  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  4180   0071EA  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  4181   0071EE  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4184   0071F2  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4185   0071F6  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4186   0071FA  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4187   0071FE  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4188   007202  EC86  F028         	call	___fltol	;wreg free
  4189   007206  C001  F06B         	movff	?___fltol,efgtoa@d
  4190   00720A  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4191   00720E                     
  4192                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4193   00720E  C077  F01A         	movff	efgtoa@h,___flsub@b
  4194   007212  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4195   007216  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4196   00721A  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4197   00721E  C07B  F005         	movff	efgtoa@l,___flmul@a
  4198   007222  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  4199   007226  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  4200   00722A  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  4201   00722E  C088  F001         	movff	efgtoa@u,___flmul@b
  4202   007232  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4203   007236  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4204   00723A  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4205   00723E  EC3E  F032         	call	___flmul	;wreg free
  4206   007242  C001  F01E         	movff	?___flmul,___flsub@a
  4207   007246  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4208   00724A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4209   00724E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4210   007252  ECEA  F023         	call	___flsub	;wreg free
  4211   007256  C01A  F077         	movff	?___flsub,efgtoa@h
  4212   00725A  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  4213   00725E  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  4214   007262  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  4215   007266                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4217   007266  C088  F001         	movff	efgtoa@u,___fldiv@b
  4218   00726A  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4219   00726E  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4220   007272  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4221   007276  0E00               	movlw	0
  4222   007278  6E05               	movwf	___fldiv@a^0,c
  4223   00727A  0E00               	movlw	0
  4224   00727C  6E06               	movwf	(___fldiv@a+1)^0,c
  4225   00727E  0E20               	movlw	32
  4226   007280  6E07               	movwf	(___fldiv@a+2)^0,c
  4227   007282  0E41               	movlw	65
  4228   007284  6E08               	movwf	(___fldiv@a+3)^0,c
  4229   007286  EC71  F030         	call	___fldiv	;wreg free
  4230   00728A  C001  F088         	movff	?___fldiv,efgtoa@u
  4231   00728E  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  4232   007292  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4233   007296  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4234   00729A                     
  4235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4236   00729A  0100               	movlb	0	; () banked
  4237   00729C  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4238   00729E  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4239   0072A0                     l5534:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4243   0072A0  516D               	movf	efgtoa@m& (0+255),w,b
  4244   0072A2  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4245   0072A4  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4246   0072A6  0A80               	xorlw	128
  4247   0072A8  6E34               	movwf	??_efgtoa^0,c
  4248   0072AA  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4249   0072AC  0A80               	xorlw	128
  4250   0072AE  5834               	subwfb	??_efgtoa^0,w,c
  4251   0072B0  A0D8               	btfss	status,0,c
  4252   0072B2  EF5D  F039         	goto	u6481
  4253   0072B6  EF5F  F039         	goto	u6480
  4254   0072BA                     u6481:
  4255   0072BA  EFD5  F038         	goto	l5526
  4256   0072BE                     u6480:
  4257   0072BE                     
  4258                           ; BSR set to: 0
  4259                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4260   0072BE  C088  F001         	movff	efgtoa@u,___flmul@b
  4261   0072C2  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4262   0072C6  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4263   0072CA  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4264   0072CE  0E00               	movlw	0
  4265   0072D0  6E05               	movwf	___flmul@a^0,c
  4266   0072D2  0E00               	movlw	0
  4267   0072D4  6E06               	movwf	(___flmul@a+1)^0,c
  4268   0072D6  0EA0               	movlw	160
  4269   0072D8  6E07               	movwf	(___flmul@a+2)^0,c
  4270   0072DA  0E40               	movlw	64
  4271   0072DC  6E08               	movwf	(___flmul@a+3)^0,c
  4272   0072DE  EC3E  F032         	call	___flmul	;wreg free
  4273   0072E2  C001  F07B         	movff	?___flmul,efgtoa@l
  4274   0072E6  C002  F07C         	movff	?___flmul+1,efgtoa@l+1
  4275   0072EA  C003  F07D         	movff	?___flmul+2,efgtoa@l+2
  4276   0072EE  C004  F07E         	movff	?___flmul+3,efgtoa@l+3
  4277   0072F2                     
  4278                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4279   0072F2  C077  F01A         	movff	efgtoa@h,___flge@ff1
  4280   0072F6  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4281   0072FA  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4282   0072FE  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4283   007302  C07B  F01E         	movff	efgtoa@l,___flge@ff2
  4284   007306  C07C  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  4285   00730A  C07D  F020         	movff	efgtoa@l+2,___flge@ff2+2
  4286   00730E  C07E  F021         	movff	efgtoa@l+3,___flge@ff2+3
  4287   007312  EC04  F028         	call	___flge	;wreg free
  4288   007316  B0D8               	btfsc	status,0,c
  4289   007318  EF90  F039         	goto	u6491
  4290   00731C  EF92  F039         	goto	u6490
  4291   007320                     u6491:
  4292   007320  EF9D  F039         	goto	l5542
  4293   007324                     u6490:
  4294   007324                     
  4295                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4296   007324  0E00               	movlw	0
  4297   007326  0100               	movlb	0	; () banked
  4298   007328  6F7B               	movwf	efgtoa@l& (0+255),b
  4299   00732A  0E00               	movlw	0
  4300   00732C  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4301   00732E  0E00               	movlw	0
  4302   007330  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4303   007332  0E00               	movlw	0
  4304   007334  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  4307   007336  EFC6  F039         	goto	l5548
  4308   00733A                     l5542:
  4309                           
  4310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4311   00733A  C077  F001         	movff	efgtoa@h,___fleq@ff1
  4312   00733E  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4313   007342  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4314   007346  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4315   00734A  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  4316   00734E  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4317   007352  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4318   007356  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4319   00735A  EC57  F025         	call	___fleq	;wreg free
  4320   00735E  A0D8               	btfss	status,0,c
  4321   007360  EFB4  F039         	goto	u6501
  4322   007364  EFB6  F039         	goto	u6500
  4323   007368                     u6501:
  4324   007368  EFC6  F039         	goto	l5548
  4325   00736C                     u6500:
  4326   00736C  0100               	movlb	0	; () banked
  4327   00736E  B16B               	btfsc	efgtoa@d& (0+255),0,b
  4328   007370  EFBC  F039         	goto	u6511
  4329   007374  EFBE  F039         	goto	u6510
  4330   007378                     u6511:
  4331   007378  EFC6  F039         	goto	l5548
  4332   00737C                     u6510:
  4333   00737C                     
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4336   00737C  0E00               	movlw	0
  4337   00737E  6F7B               	movwf	efgtoa@l& (0+255),b
  4338   007380  0E00               	movlw	0
  4339   007382  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4340   007384  0E00               	movlw	0
  4341   007386  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4342   007388  0E00               	movlw	0
  4343   00738A  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4344   00738C                     l5548:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4347   00738C  C082  F001         	movff	efgtoa@g,___fladd@b
  4348   007390  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  4349   007394  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  4350   007398  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  4351   00739C  C07B  F005         	movff	efgtoa@l,___fladd@a
  4352   0073A0  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  4353   0073A4  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  4354   0073A8  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  4355   0073AC  EC53  F034         	call	___fladd	;wreg free
  4356   0073B0  C001  F077         	movff	?___fladd,efgtoa@h
  4357   0073B4  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  4358   0073B8  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  4359   0073BC  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  4360   0073C0                     
  4361                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4362   0073C0  C077  F01A         	movff	efgtoa@h,___flge@ff1
  4363   0073C4  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4364   0073C8  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4365   0073CC  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4366   0073D0  0E00               	movlw	0
  4367   0073D2  6E05               	movwf	___flmul@a^0,c
  4368   0073D4  0E00               	movlw	0
  4369   0073D6  6E06               	movwf	(___flmul@a+1)^0,c
  4370   0073D8  0E20               	movlw	32
  4371   0073DA  6E07               	movwf	(___flmul@a+2)^0,c
  4372   0073DC  0E41               	movlw	65
  4373   0073DE  6E08               	movwf	(___flmul@a+3)^0,c
  4374   0073E0  C071  F001         	movff	efgtoa@ou,___flmul@b
  4375   0073E4  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4376   0073E8  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4377   0073EC  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4378   0073F0  EC3E  F032         	call	___flmul	;wreg free
  4379   0073F4  C001  F01E         	movff	?___flmul,___flge@ff2
  4380   0073F8  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4381   0073FC  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4382   007400  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4383   007404  EC04  F028         	call	___flge	;wreg free
  4384   007408  A0D8               	btfss	status,0,c
  4385   00740A  EF09  F03A         	goto	u6521
  4386   00740E  EF0B  F03A         	goto	u6520
  4387   007412                     u6521:
  4388   007412  EF34  F03A         	goto	l5560
  4389   007416                     u6520:
  4390   007416                     
  4391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  4392   007416  0100               	movlb	0	; () banked
  4393   007418  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4394   00741A  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4395   00741C                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4398   00741C  C071  F001         	movff	efgtoa@ou,___flmul@b
  4399   007420  C072  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4400   007424  C073  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4401   007428  C074  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4402   00742C  0E00               	movlw	0
  4403   00742E  6E05               	movwf	___flmul@a^0,c
  4404   007430  0E00               	movlw	0
  4405   007432  6E06               	movwf	(___flmul@a+1)^0,c
  4406   007434  0E20               	movlw	32
  4407   007436  6E07               	movwf	(___flmul@a+2)^0,c
  4408   007438  0E41               	movlw	65
  4409   00743A  6E08               	movwf	(___flmul@a+3)^0,c
  4410   00743C  EC3E  F032         	call	___flmul	;wreg free
  4411   007440  C001  F071         	movff	?___flmul,efgtoa@ou
  4412   007444  C002  F072         	movff	?___flmul+1,efgtoa@ou+1
  4413   007448  C003  F073         	movff	?___flmul+2,efgtoa@ou+2
  4414   00744C  C004  F074         	movff	?___flmul+3,efgtoa@ou+3
  4415   007450                     
  4416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4417   007450  0E66               	movlw	102
  4418   007452  0100               	movlb	0	; () banked
  4419   007454  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4420   007456  A4D8               	btfss	status,2,c
  4421   007458  EF30  F03A         	goto	u6531
  4422   00745C  EF32  F03A         	goto	u6530
  4423   007460                     u6531:
  4424   007460  EF34  F03A         	goto	l5560
  4425   007464                     u6530:
  4426   007464                     
  4427                           ; BSR set to: 0
  4428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  4429   007464  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4430   007466  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4431   007468                     l5560:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4434   007468  C071  F088         	movff	efgtoa@ou,efgtoa@u
  4435   00746C  C072  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4436   007470  C073  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4437   007474  C074  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4438   007478                     
  4439                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4440   007478  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4441   00747C  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4442   007480                     
  4443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4444   007480  0E00               	movlw	0
  4445   007482  0100               	movlb	0	; () banked
  4446   007484  6F68               	movwf	efgtoa@pp& (0+255),b
  4447   007486                     
  4448                           ; BSR set to: 0
  4449                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4450   007486  0E00               	movlw	0
  4451   007488  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4452   00748A  0E00               	movlw	0
  4453   00748C  6F64               	movwf	efgtoa@t& (0+255),b
  4454   00748E                     
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4457   00748E  0E00               	movlw	0
  4458   007490  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4459   007492  0E00               	movlw	0
  4460   007494  6F7F               	movwf	efgtoa@i& (0+255),b
  4461                           
  4462                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4463   007496  EF32  F03B         	goto	l5610
  4464   00749A                     l5570:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4468   00749A  C077  F001         	movff	efgtoa@h,___fldiv@b
  4469   00749E  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4470   0074A2  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4471   0074A6  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4472   0074AA  C088  F005         	movff	efgtoa@u,___fldiv@a
  4473   0074AE  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4474   0074B2  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4475   0074B6  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4476   0074BA  EC71  F030         	call	___fldiv	;wreg free
  4477   0074BE  C001  F01A         	movff	?___fldiv,floorf@x
  4478   0074C2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4479   0074C6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4480   0074CA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4481   0074CE  ECF4  F02C         	call	_floorf	;wreg free
  4482   0074D2  C01A  F07B         	movff	?_floorf,efgtoa@l
  4483   0074D6  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  4484   0074DA  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  4485   0074DE  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  4486                           
  4487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4488   0074E2  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4489   0074E6  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4490   0074EA  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4491   0074EE  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4492   0074F2  EC86  F028         	call	___fltol	;wreg free
  4493   0074F6  BE02               	btfsc	(?___fltol+1)^0,7,c
  4494   0074F8  EF89  F03A         	goto	u6540
  4495   0074FC  5002               	movf	(?___fltol+1)^0,w,c
  4496   0074FE  E107               	bnz	u6541
  4497   007500  0E0A               	movlw	10
  4498   007502  5C01               	subwf	?___fltol^0,w,c
  4499   007504  B0D8               	btfsc	status,0,c
  4500   007506  EF87  F03A         	goto	u6541
  4501   00750A  EF89  F03A         	goto	u6540
  4502   00750E                     u6541:
  4503   00750E  EF99  F03A         	goto	l5574
  4504   007512                     u6540:
  4505   007512  C07B  F001         	movff	efgtoa@l,___fltol@f1
  4506   007516  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4507   00751A  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4508   00751E  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4509   007522  EC86  F028         	call	___fltol	;wreg free
  4510   007526  C001  F06B         	movff	?___fltol,efgtoa@d
  4511   00752A  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4512   00752E  EF9E  F03A         	goto	l1258
  4513   007532                     l5574:
  4514   007532  0E00               	movlw	0
  4515   007534  0100               	movlb	0	; () banked
  4516   007536  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4517   007538  0E09               	movlw	9
  4518   00753A  6F6B               	movwf	efgtoa@d& (0+255),b
  4519   00753C                     l1258:
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4522   00753C  0100               	movlb	0	; () banked
  4523   00753E  5168               	movf	efgtoa@pp& (0+255),w,b
  4524   007540  A4D8               	btfss	status,2,c
  4525   007542  EFA5  F03A         	goto	u6551
  4526   007546  EFA7  F03A         	goto	u6550
  4527   00754A                     u6551:
  4528   00754A  EFCF  F03A         	goto	l5594
  4529   00754E                     u6550:
  4530   00754E                     
  4531                           ; BSR set to: 0
  4532   00754E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4533   007550  EFAE  F03A         	goto	u6560
  4534   007554  EFAC  F03A         	goto	u6561
  4535   007558                     u6561:
  4536   007558  EFCF  F03A         	goto	l5594
  4537   00755C                     u6560:
  4538   00755C                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4541   00755C  0E00               	movlw	low _dbuf
  4542   00755E  2586               	addwf	efgtoa@n& (0+255),w,b
  4543   007560  6ED9               	movwf	fsr2l,c
  4544   007562  0E01               	movlw	high _dbuf
  4545   007564  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4546   007566  6EDA               	movwf	fsr2h,c
  4547   007568  0E2E               	movlw	46
  4548   00756A  6EDF               	movwf	indf2,c
  4549   00756C                     
  4550                           ; BSR set to: 0
  4551   00756C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4552   00756E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4553   007570                     
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4556   007570  0775               	decf	efgtoa@w& (0+255),f,b
  4557   007572  A0D8               	btfss	status,0,c
  4558   007574  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4559   007576                     
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4562   007576  0E01               	movlw	1
  4563   007578  6F68               	movwf	efgtoa@pp& (0+255),b
  4564   00757A  EFCF  F03A         	goto	l5594
  4565   00757E                     l5586:
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4569   00757E  0E00               	movlw	low _dbuf
  4570   007580  2586               	addwf	efgtoa@n& (0+255),w,b
  4571   007582  6ED9               	movwf	fsr2l,c
  4572   007584  0E01               	movlw	high _dbuf
  4573   007586  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4574   007588  6EDA               	movwf	fsr2h,c
  4575   00758A  0E30               	movlw	48
  4576   00758C  6EDF               	movwf	indf2,c
  4577   00758E                     
  4578                           ; BSR set to: 0
  4579   00758E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4580   007590  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4581   007592                     
  4582                           ; BSR set to: 0
  4583                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4584   007592  0775               	decf	efgtoa@w& (0+255),f,b
  4585   007594  A0D8               	btfss	status,0,c
  4586   007596  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4587   007598                     
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4590   007598  0764               	decf	efgtoa@t& (0+255),f,b
  4591   00759A  A0D8               	btfss	status,0,c
  4592   00759C  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4593   00759E                     l5594:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4597   00759E  5164               	movf	efgtoa@t& (0+255),w,b
  4598   0075A0  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4599   0075A2  A4D8               	btfss	status,2,c
  4600   0075A4  EFD6  F03A         	goto	u6571
  4601   0075A8  EFD8  F03A         	goto	u6570
  4602   0075AC                     u6571:
  4603   0075AC  EFBF  F03A         	goto	l5586
  4604   0075B0                     u6570:
  4605   0075B0                     
  4606                           ; BSR set to: 0
  4607                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4608   0075B0  0E00               	movlw	low _dbuf
  4609   0075B2  2586               	addwf	efgtoa@n& (0+255),w,b
  4610   0075B4  6ED9               	movwf	fsr2l,c
  4611   0075B6  0E01               	movlw	high _dbuf
  4612   0075B8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4613   0075BA  6EDA               	movwf	fsr2h,c
  4614   0075BC  516B               	movf	efgtoa@d& (0+255),w,b
  4615   0075BE  0F30               	addlw	48
  4616   0075C0  6EDF               	movwf	indf2,c
  4617   0075C2                     
  4618                           ; BSR set to: 0
  4619   0075C2  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4620   0075C4  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4621   0075C6                     
  4622                           ; BSR set to: 0
  4623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4624   0075C6  0775               	decf	efgtoa@w& (0+255),f,b
  4625   0075C8  A0D8               	btfss	status,0,c
  4626   0075CA  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4627   0075CC                     
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4630   0075CC  C077  F01A         	movff	efgtoa@h,___flsub@b
  4631   0075D0  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  4632   0075D4  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  4633   0075D8  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  4634   0075DC  C07B  F005         	movff	efgtoa@l,___flmul@a
  4635   0075E0  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  4636   0075E4  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  4637   0075E8  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  4638   0075EC  C088  F001         	movff	efgtoa@u,___flmul@b
  4639   0075F0  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4640   0075F4  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4641   0075F8  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4642   0075FC  EC3E  F032         	call	___flmul	;wreg free
  4643   007600  C001  F01E         	movff	?___flmul,___flsub@a
  4644   007604  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  4645   007608  C003  F020         	movff	?___flmul+2,___flsub@a+2
  4646   00760C  C004  F021         	movff	?___flmul+3,___flsub@a+3
  4647   007610  ECEA  F023         	call	___flsub	;wreg free
  4648   007614  C01A  F077         	movff	?___flsub,efgtoa@h
  4649   007618  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  4650   00761C  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  4651   007620  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  4652   007624                     
  4653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4654   007624  C088  F001         	movff	efgtoa@u,___fldiv@b
  4655   007628  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4656   00762C  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4657   007630  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4658   007634  0E00               	movlw	0
  4659   007636  6E05               	movwf	___fldiv@a^0,c
  4660   007638  0E00               	movlw	0
  4661   00763A  6E06               	movwf	(___fldiv@a+1)^0,c
  4662   00763C  0E20               	movlw	32
  4663   00763E  6E07               	movwf	(___fldiv@a+2)^0,c
  4664   007640  0E41               	movlw	65
  4665   007642  6E08               	movwf	(___fldiv@a+3)^0,c
  4666   007644  EC71  F030         	call	___fldiv	;wreg free
  4667   007648  C001  F088         	movff	?___fldiv,efgtoa@u
  4668   00764C  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  4669   007650  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4670   007654  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4671   007658                     
  4672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4673   007658  0100               	movlb	0	; () banked
  4674   00765A  0760               	decf	efgtoa@ne& (0+255),f,b
  4675   00765C  A0D8               	btfss	status,0,c
  4676   00765E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4677   007660                     
  4678                           ; BSR set to: 0
  4679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4680   007660  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4681   007662  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4682   007664                     l5610:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4686   007664  516D               	movf	efgtoa@m& (0+255),w,b
  4687   007666  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4688   007668  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4689   00766A  0A80               	xorlw	128
  4690   00766C  6E34               	movwf	??_efgtoa^0,c
  4691   00766E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4692   007670  0A80               	xorlw	128
  4693   007672  5834               	subwfb	??_efgtoa^0,w,c
  4694   007674  B0D8               	btfsc	status,0,c
  4695   007676  EF3F  F03B         	goto	u6581
  4696   00767A  EF41  F03B         	goto	u6580
  4697   00767E                     u6581:
  4698   00767E  EF4F  F03B         	goto	l5614
  4699   007682                     u6580:
  4700   007682                     
  4701                           ; BSR set to: 0
  4702   007682  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4703   007684  EF4D  F03B         	goto	u6591
  4704   007688  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4705   00768A  E109               	bnz	u6590
  4706   00768C  0E4B               	movlw	75
  4707   00768E  5D86               	subwf	efgtoa@n& (0+255),w,b
  4708   007690  A0D8               	btfss	status,0,c
  4709   007692  EF4D  F03B         	goto	u6591
  4710   007696  EF4F  F03B         	goto	u6590
  4711   00769A                     u6591:
  4712   00769A  EF4D  F03A         	goto	l5570
  4713   00769E                     u6590:
  4714   00769E                     l5614:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4718   00769E  0E00               	movlw	0
  4719   0076A0  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4720   0076A2  0E4F               	movlw	79
  4721   0076A4  6F7F               	movwf	efgtoa@i& (0+255),b
  4722   0076A6                     
  4723                           ; BSR set to: 0
  4724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4725   0076A6  0E00               	movlw	low _dbuf
  4726   0076A8  257F               	addwf	efgtoa@i& (0+255),w,b
  4727   0076AA  6ED9               	movwf	fsr2l,c
  4728   0076AC  0E01               	movlw	high _dbuf
  4729   0076AE  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4730   0076B0  6EDA               	movwf	fsr2h,c
  4731   0076B2  6ADF               	clrf	indf2,c
  4732   0076B4                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4735   0076B4  0E00               	movlw	low _dbuf
  4736   0076B6  6E34               	movwf	??_efgtoa^0,c
  4737   0076B8  0E01               	movlw	high _dbuf
  4738   0076BA  6E35               	movwf	(??_efgtoa+1)^0,c
  4739   0076BC  5186               	movf	efgtoa@n& (0+255),w,b
  4740   0076BE  5E34               	subwf	??_efgtoa^0,f,c
  4741   0076C0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4742   0076C2  5A35               	subwfb	(??_efgtoa+1)^0,f,c
  4743   0076C4  517F               	movf	efgtoa@i& (0+255),w,b
  4744   0076C6  2434               	addwf	??_efgtoa^0,w,c
  4745   0076C8  6E01               	movwf	memcpy@d1^0,c
  4746   0076CA  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4747   0076CC  2035               	addwfc	(??_efgtoa+1)^0,w,c
  4748   0076CE  6E02               	movwf	(memcpy@d1+1)^0,c
  4749   0076D0  0E00               	movlw	low _dbuf
  4750   0076D2  6E03               	movwf	memcpy@s1^0,c
  4751   0076D4  0E01               	movlw	high _dbuf
  4752   0076D6  6E04               	movwf	(memcpy@s1+1)^0,c
  4753   0076D8  C086  F005         	movff	efgtoa@n,memcpy@n
  4754   0076DC  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  4755   0076E0  EC32  F024         	call	_memcpy	;wreg free
  4756   0076E4                     
  4757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4758   0076E4  0100               	movlb	0	; () banked
  4759   0076E6  5186               	movf	efgtoa@n& (0+255),w,b
  4760   0076E8  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4761   0076EA  6F86               	movwf	efgtoa@n& (0+255),b
  4762   0076EC  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4763   0076EE  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4764   0076F0  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4765   0076F2                     
  4766                           ; BSR set to: 0
  4767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4768   0076F2  5181               	movf	efgtoa@sign& (0+255),w,b
  4769   0076F4  A4D8               	btfss	status,2,c
  4770   0076F6  EF7F  F03B         	goto	u6601
  4771   0076FA  EF82  F03B         	goto	u6600
  4772   0076FE                     u6601:
  4773   0076FE  0E01               	movlw	1
  4774   007700  EF83  F03B         	goto	u6610
  4775   007704                     u6600:
  4776   007704  0E00               	movlw	0
  4777   007706                     u6610:
  4778   007706  6F7F               	movwf	efgtoa@i& (0+255),b
  4779   007708  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  4780   00770A                     
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 853:  if (flags &
      +                           (1 << 1)) {
  4783   00770A  A3B7               	btfss	_flags& (0+255),1,b
  4784   00770C  EF8A  F03B         	goto	u6621
  4785   007710  EF8C  F03B         	goto	u6620
  4786   007714                     u6621:
  4787   007714  EFBA  F03B         	goto	l5636
  4788   007718                     u6620:
  4789   007718  EF9C  F03B         	goto	l5632
  4790   00771C                     l5628:
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 855:    dbuf[--n]
      +                           = '0';
  4794   00771C  0786               	decf	efgtoa@n& (0+255),f,b
  4795   00771E  A0D8               	btfss	status,0,c
  4796   007720  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4797   007722  0E00               	movlw	low _dbuf
  4798   007724  2586               	addwf	efgtoa@n& (0+255),w,b
  4799   007726  6ED9               	movwf	fsr2l,c
  4800   007728  0E01               	movlw	high _dbuf
  4801   00772A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4802   00772C  6EDA               	movwf	fsr2h,c
  4803   00772E  0E30               	movlw	48
  4804   007730  6EDF               	movwf	indf2,c
  4805   007732                     
  4806                           ; BSR set to: 0
  4807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 856:    w--;
  4808   007732  0775               	decf	efgtoa@w& (0+255),f,b
  4809   007734  A0D8               	btfss	status,0,c
  4810   007736  0776               	decf	(efgtoa@w+1)& (0+255),f,b
  4811   007738                     l5632:
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 854:   while (w >
      +                           i && n > i) {
  4815   007738  5175               	movf	efgtoa@w& (0+255),w,b
  4816   00773A  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4817   00773C  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4818   00773E  0A80               	xorlw	128
  4819   007740  6E34               	movwf	??_efgtoa^0,c
  4820   007742  5176               	movf	(efgtoa@w+1)& (0+255),w,b
  4821   007744  0A80               	xorlw	128
  4822   007746  5834               	subwfb	??_efgtoa^0,w,c
  4823   007748  B0D8               	btfsc	status,0,c
  4824   00774A  EFA9  F03B         	goto	u6631
  4825   00774E  EFAB  F03B         	goto	u6630
  4826   007752                     u6631:
  4827   007752  EFBA  F03B         	goto	l5636
  4828   007756                     u6630:
  4829   007756                     
  4830                           ; BSR set to: 0
  4831   007756  5186               	movf	efgtoa@n& (0+255),w,b
  4832   007758  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4833   00775A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4834   00775C  0A80               	xorlw	128
  4835   00775E  6E34               	movwf	??_efgtoa^0,c
  4836   007760  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4837   007762  0A80               	xorlw	128
  4838   007764  5834               	subwfb	??_efgtoa^0,w,c
  4839   007766  A0D8               	btfss	status,0,c
  4840   007768  EFB8  F03B         	goto	u6641
  4841   00776C  EFBA  F03B         	goto	u6640
  4842   007770                     u6641:
  4843   007770  EF8E  F03B         	goto	l5628
  4844   007774                     u6640:
  4845   007774                     l5636:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4849   007774  5181               	movf	efgtoa@sign& (0+255),w,b
  4850   007776  B4D8               	btfsc	status,2,c
  4851   007778  EFC0  F03B         	goto	u6651
  4852   00777C  EFC2  F03B         	goto	u6650
  4853   007780                     u6651:
  4854   007780  EFCD  F03B         	goto	l5640
  4855   007784                     u6650:
  4856   007784                     
  4857                           ; BSR set to: 0
  4858                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4859   007784  0786               	decf	efgtoa@n& (0+255),f,b
  4860   007786  A0D8               	btfss	status,0,c
  4861   007788  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4862   00778A  0E00               	movlw	low _dbuf
  4863   00778C  2586               	addwf	efgtoa@n& (0+255),w,b
  4864   00778E  6ED9               	movwf	fsr2l,c
  4865   007790  0E01               	movlw	high _dbuf
  4866   007792  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4867   007794  6EDA               	movwf	fsr2h,c
  4868   007796  C081  FFDF         	movff	efgtoa@sign,indf2
  4869   00779A                     l5640:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4873   00779A  517F               	movf	efgtoa@i& (0+255),w,b
  4874   00779C  5F75               	subwf	efgtoa@w& (0+255),f,b
  4875   00779E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4876   0077A0  5B76               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4877   0077A2                     
  4878                           ; BSR set to: 0
  4879                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4880   0077A2  C02E  F00F         	movff	efgtoa@fp,pad@fp
  4881   0077A6  0E00               	movlw	low _dbuf
  4882   0077A8  2586               	addwf	efgtoa@n& (0+255),w,b
  4883   0077AA  6E10               	movwf	pad@buf^0,c
  4884   0077AC  0E01               	movlw	high _dbuf
  4885   0077AE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4886   0077B0  6E11               	movwf	(pad@buf+1)^0,c
  4887   0077B2  C075  F012         	movff	efgtoa@w,pad@p
  4888   0077B6  C076  F013         	movff	efgtoa@w+1,pad@p+1
  4889   0077BA  ECE3  F024         	call	_pad	;wreg free
  4890   0077BE                     l1225:
  4891   0077BE  0012               	return		;funcret
  4892   0077C0                     __end_of_efgtoa:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function _strcpy *****************
  4896 ;; Defined at:
  4897 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4900 ;;		 -> dbuf(80), 
  4901 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4902 ;;		 -> STR_6(4), STR_3(4), 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  d               2    4[COMRAM] PTR unsigned char 
  4905 ;;		 -> dbuf(80), 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  2    0[COMRAM] PTR unsigned char 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4915 ;;      Params:         4       0       0       0       0       0       0       0       0
  4916 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4918 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        6 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_efgtoa
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text7
  4929   0046E0                     __ptext7:
  4930                           	callstack 0
  4931   0046E0                     _strcpy:
  4932                           	callstack 26
  4933   0046E0  C001  F005         	movff	strcpy@dest,strcpy@d
  4934   0046E4  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4935   0046E8                     l5398:
  4936   0046E8  C003  FFF6         	movff	strcpy@src,tblptrl
  4937   0046EC  C004  FFF7         	movff	strcpy@src+1,tblptrh
  4938   0046F0  4A03               	infsnz	strcpy@src^0,f,c
  4939   0046F2  2A04               	incf	(strcpy@src+1)^0,f,c
  4940   0046F4                     	if	0	;tblptru may be non-zero
  4941   0046F4                     	endif
  4942   0046F4                     	if	0	;tblptru may be non-zero
  4943   0046F4                     	endif
  4944   0046F4  C005  FFD9         	movff	strcpy@d,fsr2l
  4945   0046F8  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4946   0046FC  4A05               	infsnz	strcpy@d^0,f,c
  4947   0046FE  2A06               	incf	(strcpy@d+1)^0,f,c
  4948   004700  0008               	tblrd		*
  4949   004702  CFF5 FFDF          	movff	tablat,indf2
  4950   004706  50DF               	movf	indf2,w,c
  4951   004708  A4D8               	btfss	status,2,c
  4952   00470A  EF89  F023         	goto	u6291
  4953   00470E  EF8B  F023         	goto	u6290
  4954   004712                     u6291:
  4955   004712  EF74  F023         	goto	l5398
  4956   004716                     u6290:
  4957   004716  0012               	return		;funcret
  4958   004718                     __end_of_strcpy:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function _pad *****************
  4962 ;; Defined at:
  4963 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4966 ;;		 -> sprintf@f(12), 
  4967 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4968 ;;		 -> dbuf(80), 
  4969 ;;  p               2   17[COMRAM] int 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  i               2   20[COMRAM] int 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4981 ;;      Params:         5       0       0       0       0       0       0       0       0
  4982 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4983 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4984 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4985 ;;Total ram usage:        8 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 3
  4988 ;; This function calls:
  4989 ;;		_fputc
  4990 ;;		_fputs
  4991 ;; This function is called by:
  4992 ;;		_efgtoa
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text8
  4997   0049C6                     __ptext8:
  4998                           	callstack 0
  4999   0049C6                     _pad:
  5000                           	callstack 23
  5001   0049C6                     
  5002                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  5003   0049C6  BE13               	btfsc	(pad@p+1)^0,7,c
  5004   0049C8  EFEA  F024         	goto	u6270
  5005   0049CC  EFE8  F024         	goto	u6271
  5006   0049D0                     u6271:
  5007   0049D0  EFEE  F024         	goto	l1210
  5008   0049D4                     u6270:
  5009   0049D4                     
  5010                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5011   0049D4  0E00               	movlw	0
  5012   0049D6  6E13               	movwf	(pad@p+1)^0,c
  5013   0049D8  0E00               	movlw	0
  5014   0049DA  6E12               	movwf	pad@p^0,c
  5015   0049DC                     l1210:
  5016                           
  5017                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5018   0049DC  0E00               	movlw	0
  5019   0049DE  6E16               	movwf	(pad@i+1)^0,c
  5020   0049E0  0E00               	movlw	0
  5021   0049E2  6E15               	movwf	pad@i^0,c
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5024   0049E4  EFFE  F024         	goto	l5392
  5025   0049E8                     l5388:
  5026                           
  5027                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  5028   0049E8  0E00               	movlw	0
  5029   0049EA  6E02               	movwf	(fputc@c+1)^0,c
  5030   0049EC  0E20               	movlw	32
  5031   0049EE  6E01               	movwf	fputc@c^0,c
  5032   0049F0  C00F  F003         	movff	pad@fp,fputc@fp
  5033   0049F4  ECAC  F025         	call	_fputc	;wreg free
  5034   0049F8                     
  5035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5036   0049F8  4A15               	infsnz	pad@i^0,f,c
  5037   0049FA  2A16               	incf	(pad@i+1)^0,f,c
  5038   0049FC                     l5392:
  5039                           
  5040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  5041   0049FC  5012               	movf	pad@p^0,w,c
  5042   0049FE  5C15               	subwf	pad@i^0,w,c
  5043   004A00  5016               	movf	(pad@i+1)^0,w,c
  5044   004A02  0A80               	xorlw	128
  5045   004A04  6E14               	movwf	??_pad^0,c
  5046   004A06  5013               	movf	(pad@p+1)^0,w,c
  5047   004A08  0A80               	xorlw	128
  5048   004A0A  5814               	subwfb	??_pad^0,w,c
  5049   004A0C  A0D8               	btfss	status,0,c
  5050   004A0E  EF0B  F025         	goto	u6281
  5051   004A12  EF0D  F025         	goto	u6280
  5052   004A16                     u6281:
  5053   004A16  EFF4  F024         	goto	l5388
  5054   004A1A                     u6280:
  5055   004A1A                     
  5056                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  5057   004A1A  C010  F009         	movff	pad@buf,fputs@s
  5058   004A1E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  5059   004A22  C00F  F00B         	movff	pad@fp,fputs@fp
  5060   004A26  ECA9  F023         	call	_fputs	;wreg free
  5061   004A2A  0012               	return		;funcret
  5062   004A2C                     __end_of_pad:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _fputs *****************
  5066 ;; Defined at:
  5067 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5070 ;;		 -> dbuf(80), 
  5071 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  5072 ;;		 -> sprintf@f(12), 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  i               2   12[COMRAM] int 
  5075 ;;  c               1   11[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  2    8[COMRAM] int 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5085 ;;      Params:         3       0       0       0       0       0       0       0       0
  5086 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5088 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5089 ;;Total ram usage:        6 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 2
  5092 ;; This function calls:
  5093 ;;		_fputc
  5094 ;; This function is called by:
  5095 ;;		_pad
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text9
  5100   004752                     __ptext9:
  5101                           	callstack 0
  5102   004752                     _fputs:
  5103                           	callstack 23
  5104   004752  0E00               	movlw	0
  5105   004754  6E0E               	movwf	(fputs@i+1)^0,c
  5106   004756  0E00               	movlw	0
  5107   004758  6E0D               	movwf	fputs@i^0,c
  5108   00475A  EFB8  F023         	goto	l5382
  5109   00475E                     l5378:
  5110   00475E  C00C  F001         	movff	fputs@c,fputc@c
  5111   004762  6A02               	clrf	(fputc@c+1)^0,c
  5112   004764  C00B  F003         	movff	fputs@fp,fputc@fp
  5113   004768  ECAC  F025         	call	_fputc	;wreg free
  5114   00476C  4A0D               	infsnz	fputs@i^0,f,c
  5115   00476E  2A0E               	incf	(fputs@i+1)^0,f,c
  5116   004770                     l5382:
  5117   004770  500D               	movf	fputs@i^0,w,c
  5118   004772  2409               	addwf	fputs@s^0,w,c
  5119   004774  6ED9               	movwf	fsr2l,c
  5120   004776  500E               	movf	(fputs@i+1)^0,w,c
  5121   004778  200A               	addwfc	(fputs@s+1)^0,w,c
  5122   00477A  6EDA               	movwf	fsr2h,c
  5123   00477C  50DF               	movf	indf2,w,c
  5124   00477E  6E0C               	movwf	fputs@c^0,c
  5125   004780  500C               	movf	fputs@c^0,w,c
  5126   004782  A4D8               	btfss	status,2,c
  5127   004784  EFC6  F023         	goto	u6261
  5128   004788  EFC8  F023         	goto	u6260
  5129   00478C                     u6261:
  5130   00478C  EFAF  F023         	goto	l5378
  5131   004790                     u6260:
  5132   004790  0012               	return		;funcret
  5133   004792                     __end_of_fputs:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _fputc *****************
  5137 ;; Defined at:
  5138 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;  c               2    0[COMRAM] int 
  5141 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  5142 ;;		 -> sprintf@f(12), 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    0[COMRAM] int 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5154 ;;      Params:         3       0       0       0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5156 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5157 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5158 ;;Total ram usage:        8 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 1
  5161 ;; This function calls:
  5162 ;;		_putch
  5163 ;; This function is called by:
  5164 ;;		_pad
  5165 ;;		_vfpfcnvrt
  5166 ;;		_fputs
  5167 ;; This function uses a non-reentrant model
  5168 ;;
  5169                           
  5170                           	psect	text10
  5171   004B58                     __ptext10:
  5172                           	callstack 0
  5173   004B58                     _fputc:
  5174                           	callstack 26
  5175   004B58  5003               	movf	fputc@fp^0,w,c
  5176   004B5A  B4D8               	btfsc	status,2,c
  5177   004B5C  EFB2  F025         	goto	u3161
  5178   004B60  EFB4  F025         	goto	u3160
  5179   004B64                     u3161:
  5180   004B64  EFBC  F025         	goto	l3400
  5181   004B68                     u3160:
  5182   004B68  5003               	movf	fputc@fp^0,w,c
  5183   004B6A  A4D8               	btfss	status,2,c
  5184   004B6C  EFBA  F025         	goto	u3171
  5185   004B70  EFBC  F025         	goto	u3170
  5186   004B74                     u3171:
  5187   004B74  EFC1  F025         	goto	l3402
  5188   004B78                     u3170:
  5189   004B78                     l3400:
  5190   004B78  5001               	movf	fputc@c^0,w,c
  5191   004B7A  ECF9  F022         	call	_putch
  5192   004B7E  EF00  F026         	goto	l1363
  5193   004B82                     l3402:
  5194   004B82  5003               	movf	fputc@fp^0,w,c
  5195   004B84  6ED9               	movwf	fsr2l,c
  5196   004B86  6ADA               	clrf	fsr2h,c
  5197   004B88  0E0A               	movlw	10
  5198   004B8A  26D9               	addwf	fsr2l,f,c
  5199   004B8C  50DE               	movf	postinc2,w,c
  5200   004B8E  10DE               	iorwf	postinc2,w,c
  5201   004B90  B4D8               	btfsc	status,2,c
  5202   004B92  EFCD  F025         	goto	u3181
  5203   004B96  EFCF  F025         	goto	u3180
  5204   004B9A                     u3181:
  5205   004B9A  EFE8  F025         	goto	l3406
  5206   004B9E                     u3180:
  5207   004B9E  5003               	movf	fputc@fp^0,w,c
  5208   004BA0  6ED9               	movwf	fsr2l,c
  5209   004BA2  6ADA               	clrf	fsr2h,c
  5210   004BA4  0E0A               	movlw	10
  5211   004BA6  26D9               	addwf	fsr2l,f,c
  5212   004BA8  5003               	movf	fputc@fp^0,w,c
  5213   004BAA  6EE1               	movwf	fsr1l,c
  5214   004BAC  6AE2               	clrf	fsr1h,c
  5215   004BAE  0E03               	movlw	3
  5216   004BB0  26E1               	addwf	fsr1l,f,c
  5217   004BB2  50DE               	movf	postinc2,w,c
  5218   004BB4  5CE6               	subwf	postinc1,w,c
  5219   004BB6  50E6               	movf	postinc1,w,c
  5220   004BB8  0A80               	xorlw	128
  5221   004BBA  6E08               	movwf	(??_fputc+4)^0,c
  5222   004BBC  50DE               	movf	postinc2,w,c
  5223   004BBE  0A80               	xorlw	128
  5224   004BC0  5808               	subwfb	(??_fputc+4)^0,w,c
  5225   004BC2  B0D8               	btfsc	status,0,c
  5226   004BC4  EFE6  F025         	goto	u3191
  5227   004BC8  EFE8  F025         	goto	u3190
  5228   004BCC                     u3191:
  5229   004BCC  EF00  F026         	goto	l1363
  5230   004BD0                     u3190:
  5231   004BD0                     l3406:
  5232   004BD0  5003               	movf	fputc@fp^0,w,c
  5233   004BD2  6ED9               	movwf	fsr2l,c
  5234   004BD4  6ADA               	clrf	fsr2h,c
  5235   004BD6  0E03               	movlw	3
  5236   004BD8  26D9               	addwf	fsr2l,f,c
  5237   004BDA  50DF               	movf	indf2,w,c
  5238   004BDC  6E04               	movwf	??_fputc^0,c
  5239   004BDE  5003               	movf	fputc@fp^0,w,c
  5240   004BE0  6ED9               	movwf	fsr2l,c
  5241   004BE2  6ADA               	clrf	fsr2h,c
  5242   004BE4  50DF               	movf	indf2,w,c
  5243   004BE6  2404               	addwf	??_fputc^0,w,c
  5244   004BE8  6ED9               	movwf	fsr2l,c
  5245   004BEA  6ADA               	clrf	fsr2h,c
  5246   004BEC  C001  FFDF         	movff	fputc@c,indf2
  5247   004BF0  5003               	movf	fputc@fp^0,w,c
  5248   004BF2  6ED9               	movwf	fsr2l,c
  5249   004BF4  6ADA               	clrf	fsr2h,c
  5250   004BF6  0E03               	movlw	3
  5251   004BF8  26D9               	addwf	fsr2l,f,c
  5252   004BFA  2ADE               	incf	postinc2,f,c
  5253   004BFC  0E00               	movlw	0
  5254   004BFE  22DD               	addwfc	postdec2,f,c
  5255   004C00                     l1363:
  5256   004C00  0012               	return		;funcret
  5257   004C02                     __end_of_fputc:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function _putch *****************
  5261 ;; Defined at:
  5262 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  c               1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  c               1    0[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_fputc
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text11
  5290   0045F2                     __ptext11:
  5291                           	callstack 0
  5292   0045F2                     _putch:
  5293                           	callstack 26
  5294   0045F2  0012               	return		;funcret
  5295   0045F4                     __end_of_putch:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _memcpy *****************
  5299 ;; Defined at:
  5300 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  d1              2    0[COMRAM] PTR void 
  5303 ;;		 -> dbuf(80), 
  5304 ;;  s1              2    2[COMRAM] PTR const void 
  5305 ;;		 -> dbuf(80), 
  5306 ;;  n               2    4[COMRAM] unsigned int 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5309 ;;		 -> dbuf(80), 
  5310 ;;  d               2    7[COMRAM] PTR unsigned char 
  5311 ;;		 -> dbuf(80), 
  5312 ;;  tmp             1    6[COMRAM] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    0[COMRAM] PTR void 
  5315 ;; Registers used:
  5316 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5322 ;;      Params:         6       0       0       0       0       0       0       0       0
  5323 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5325 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5326 ;;Total ram usage:       11 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_efgtoa
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text12
  5336   004864                     __ptext12:
  5337                           	callstack 0
  5338   004864                     _memcpy:
  5339                           	callstack 26
  5340   004864  C003  F00A         	movff	memcpy@s1,memcpy@s
  5341   004868  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5342   00486C  C001  F008         	movff	memcpy@d1,memcpy@d
  5343   004870  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5344   004874  EF4C  F024         	goto	l5410
  5345   004878                     l5402:
  5346   004878  C00A  FFD9         	movff	memcpy@s,fsr2l
  5347   00487C  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5348   004880  50DF               	movf	indf2,w,c
  5349   004882  6E07               	movwf	memcpy@tmp^0,c
  5350   004884  4A0A               	infsnz	memcpy@s^0,f,c
  5351   004886  2A0B               	incf	(memcpy@s+1)^0,f,c
  5352   004888  C008  FFD9         	movff	memcpy@d,fsr2l
  5353   00488C  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5354   004890  C007  FFDF         	movff	memcpy@tmp,indf2
  5355   004894  4A08               	infsnz	memcpy@d^0,f,c
  5356   004896  2A09               	incf	(memcpy@d+1)^0,f,c
  5357   004898                     l5410:
  5358   004898  0605               	decf	memcpy@n^0,f,c
  5359   00489A  A0D8               	btfss	status,0,c
  5360   00489C  0606               	decf	(memcpy@n+1)^0,f,c
  5361   00489E  2805               	incf	memcpy@n^0,w,c
  5362   0048A0  E106               	bnz	u6301
  5363   0048A2  2806               	incf	(memcpy@n+1)^0,w,c
  5364   0048A4  A4D8               	btfss	status,2,c
  5365   0048A6  EF57  F024         	goto	u6301
  5366   0048AA  EF59  F024         	goto	u6300
  5367   0048AE                     u6301:
  5368   0048AE  EF3C  F024         	goto	l5402
  5369   0048B2                     u6300:
  5370   0048B2  0012               	return		;funcret
  5371   0048B4                     __end_of_memcpy:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _labs *****************
  5375 ;; Defined at:
  5376 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  a               4    0[COMRAM] long 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  4    0[COMRAM] long 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5390 ;;      Params:         4       0       0       0       0       0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5392 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5393 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5394 ;;Total ram usage:        8 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_efgtoa
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text13
  5404   0048B4                     __ptext13:
  5405                           	callstack 0
  5406   0048B4                     _labs:
  5407                           	callstack 26
  5408   0048B4  BE04               	btfsc	(labs@a+3)^0,7,c
  5409   0048B6  EF5F  F024         	goto	u4301
  5410   0048BA  EF61  F024         	goto	u4300
  5411   0048BE                     u4301:
  5412   0048BE  EF6B  F024         	goto	l4040
  5413   0048C2                     u4300:
  5414   0048C2  C001  F001         	movff	labs@a,?_labs
  5415   0048C6  C002  F002         	movff	labs@a+1,?_labs+1
  5416   0048CA  C003  F003         	movff	labs@a+2,?_labs+2
  5417   0048CE  C004  F004         	movff	labs@a+3,?_labs+3
  5418   0048D2  EF84  F024         	goto	l1345
  5419   0048D6                     l4040:
  5420   0048D6  C001  F005         	movff	labs@a,??_labs
  5421   0048DA  C002  F006         	movff	labs@a+1,??_labs+1
  5422   0048DE  C003  F007         	movff	labs@a+2,??_labs+2
  5423   0048E2  C004  F008         	movff	labs@a+3,??_labs+3
  5424   0048E6  1E05               	comf	??_labs^0,f,c
  5425   0048E8  1E06               	comf	(??_labs+1)^0,f,c
  5426   0048EA  1E07               	comf	(??_labs+2)^0,f,c
  5427   0048EC  1E08               	comf	(??_labs+3)^0,f,c
  5428   0048EE  2A05               	incf	??_labs^0,f,c
  5429   0048F0  0E00               	movlw	0
  5430   0048F2  2206               	addwfc	(??_labs+1)^0,f,c
  5431   0048F4  2207               	addwfc	(??_labs+2)^0,f,c
  5432   0048F6  2208               	addwfc	(??_labs+3)^0,f,c
  5433   0048F8  C005  F001         	movff	??_labs,?_labs
  5434   0048FC  C006  F002         	movff	??_labs+1,?_labs+1
  5435   004900  C007  F003         	movff	??_labs+2,?_labs+2
  5436   004904  C008  F004         	movff	??_labs+3,?_labs+3
  5437   004908                     l1345:
  5438   004908  0012               	return		;funcret
  5439   00490A                     __end_of_labs:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function _floorf *****************
  5443 ;; Defined at:
  5444 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  x               4   25[COMRAM] float 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  u               4   41[COMRAM] struct .
  5449 ;;  m               4   35[COMRAM] unsigned long 
  5450 ;;  e               2   39[COMRAM] int 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  4   25[COMRAM] float 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5460 ;;      Params:         4       0       0       0       0       0       0       0       0
  5461 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5462 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5463 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5464 ;;Total ram usage:       20 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_efgtoa
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text14
  5474   0059E8                     __ptext14:
  5475                           	callstack 0
  5476   0059E8                     _floorf:
  5477                           	callstack 26
  5478   0059E8  C0AB  F02A         	movff	floorf@F521,floorf@u
  5479   0059EC  C0AC  F02B         	movff	floorf@F521+1,floorf@u+1
  5480   0059F0  C0AD  F02C         	movff	floorf@F521+2,floorf@u+2
  5481   0059F4  C0AE  F02D         	movff	floorf@F521+3,floorf@u+3
  5482   0059F8  C01A  F02A         	movff	floorf@x,floorf@u
  5483   0059FC  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5484   005A00  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5485   005A04  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5486   005A08  0E81               	movlw	129
  5487   005A0A  6E1E               	movwf	??_floorf^0,c
  5488   005A0C  0EFF               	movlw	255
  5489   005A0E  6E1F               	movwf	(??_floorf+1)^0,c
  5490   005A10  C02A  F020         	movff	floorf@u,??_floorf+2
  5491   005A14  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5492   005A18  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5493   005A1C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5494   005A20  0E18               	movlw	24
  5495   005A22  EF18  F02D         	goto	u4310
  5496   005A26                     u4315:
  5497   005A26  90D8               	bcf	status,0,c
  5498   005A28  3223               	rrcf	(??_floorf+5)^0,f,c
  5499   005A2A  3222               	rrcf	(??_floorf+4)^0,f,c
  5500   005A2C  3221               	rrcf	(??_floorf+3)^0,f,c
  5501   005A2E  3220               	rrcf	(??_floorf+2)^0,f,c
  5502   005A30                     u4310:
  5503   005A30  2EE8               	decfsz	wreg,f,c
  5504   005A32  EF13  F02D         	goto	u4315
  5505   005A36  5020               	movf	(??_floorf+2)^0,w,c
  5506   005A38  241E               	addwf	??_floorf^0,w,c
  5507   005A3A  6E28               	movwf	floorf@e^0,c
  5508   005A3C  0E00               	movlw	0
  5509   005A3E  201F               	addwfc	(??_floorf+1)^0,w,c
  5510   005A40  6E29               	movwf	(floorf@e+1)^0,c
  5511   005A42  BE29               	btfsc	(floorf@e+1)^0,7,c
  5512   005A44  EF2D  F02D         	goto	u4321
  5513   005A48  5029               	movf	(floorf@e+1)^0,w,c
  5514   005A4A  E109               	bnz	u4320
  5515   005A4C  0E17               	movlw	23
  5516   005A4E  5C28               	subwf	floorf@e^0,w,c
  5517   005A50  A0D8               	btfss	status,0,c
  5518   005A52  EF2D  F02D         	goto	u4321
  5519   005A56  EF2F  F02D         	goto	u4320
  5520   005A5A                     u4321:
  5521   005A5A  EF39  F02D         	goto	l4050
  5522   005A5E                     u4320:
  5523   005A5E                     l4048:
  5524   005A5E  C01A  F01A         	movff	floorf@x,?_floorf
  5525   005A62  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5526   005A66  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5527   005A6A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5528   005A6E  EFFC  F02D         	goto	l1331
  5529   005A72                     l4050:
  5530   005A72  BE29               	btfsc	(floorf@e+1)^0,7,c
  5531   005A74  EF3E  F02D         	goto	u4331
  5532   005A78  EF40  F02D         	goto	u4330
  5533   005A7C                     u4331:
  5534   005A7C  EFB0  F02D         	goto	l4060
  5535   005A80                     u4330:
  5536   005A80  C028  F01E         	movff	floorf@e,??_floorf
  5537   005A84  0EFF               	movlw	255
  5538   005A86  6E1F               	movwf	(??_floorf+1)^0,c
  5539   005A88  0EFF               	movlw	255
  5540   005A8A  6E20               	movwf	(??_floorf+2)^0,c
  5541   005A8C  0E7F               	movlw	127
  5542   005A8E  6E21               	movwf	(??_floorf+3)^0,c
  5543   005A90  0E00               	movlw	0
  5544   005A92  6E22               	movwf	(??_floorf+4)^0,c
  5545   005A94                     u4345:
  5546   005A94  661E               	tstfsz	??_floorf^0,c
  5547   005A96  EF4F  F02D         	goto	u4346
  5548   005A9A  EF57  F02D         	goto	u4347
  5549   005A9E                     u4346:
  5550   005A9E  3422               	rlcf	(??_floorf+4)^0,w,c
  5551   005AA0  3222               	rrcf	(??_floorf+4)^0,f,c
  5552   005AA2  3221               	rrcf	(??_floorf+3)^0,f,c
  5553   005AA4  3220               	rrcf	(??_floorf+2)^0,f,c
  5554   005AA6  321F               	rrcf	(??_floorf+1)^0,f,c
  5555   005AA8  2E1E               	decfsz	??_floorf^0,f,c
  5556   005AAA  EF4A  F02D         	goto	u4345
  5557   005AAE                     u4347:
  5558   005AAE  C01F  F024         	movff	??_floorf+1,floorf@m
  5559   005AB2  C020  F025         	movff	??_floorf+2,floorf@m+1
  5560   005AB6  C021  F026         	movff	??_floorf+3,floorf@m+2
  5561   005ABA  C022  F027         	movff	??_floorf+4,floorf@m+3
  5562   005ABE  5024               	movf	floorf@m^0,w,c
  5563   005AC0  142A               	andwf	floorf@u^0,w,c
  5564   005AC2  6E1E               	movwf	??_floorf^0,c
  5565   005AC4  5025               	movf	(floorf@m+1)^0,w,c
  5566   005AC6  142B               	andwf	(floorf@u+1)^0,w,c
  5567   005AC8  6E1F               	movwf	(??_floorf+1)^0,c
  5568   005ACA  5026               	movf	(floorf@m+2)^0,w,c
  5569   005ACC  142C               	andwf	(floorf@u+2)^0,w,c
  5570   005ACE  6E20               	movwf	(??_floorf+2)^0,c
  5571   005AD0  5027               	movf	(floorf@m+3)^0,w,c
  5572   005AD2  142D               	andwf	(floorf@u+3)^0,w,c
  5573   005AD4  6E21               	movwf	(??_floorf+3)^0,c
  5574   005AD6  501E               	movf	??_floorf^0,w,c
  5575   005AD8  101F               	iorwf	(??_floorf+1)^0,w,c
  5576   005ADA  1020               	iorwf	(??_floorf+2)^0,w,c
  5577   005ADC  1021               	iorwf	(??_floorf+3)^0,w,c
  5578   005ADE  A4D8               	btfss	status,2,c
  5579   005AE0  EF74  F02D         	goto	u4351
  5580   005AE4  EF76  F02D         	goto	u4350
  5581   005AE8                     u4351:
  5582   005AE8  EF78  F02D         	goto	l4056
  5583   005AEC                     u4350:
  5584   005AEC  EF2F  F02D         	goto	l4048
  5585   005AF0                     l4056:
  5586   005AF0  C02A  F01E         	movff	floorf@u,??_floorf
  5587   005AF4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5588   005AF8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5589   005AFC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5590   005B00  0E20               	movlw	32
  5591   005B02  EF88  F02D         	goto	u4360
  5592   005B06                     u4365:
  5593   005B06  90D8               	bcf	status,0,c
  5594   005B08  3221               	rrcf	(??_floorf+3)^0,f,c
  5595   005B0A  3220               	rrcf	(??_floorf+2)^0,f,c
  5596   005B0C  321F               	rrcf	(??_floorf+1)^0,f,c
  5597   005B0E  321E               	rrcf	??_floorf^0,f,c
  5598   005B10                     u4360:
  5599   005B10  2EE8               	decfsz	wreg,f,c
  5600   005B12  EF83  F02D         	goto	u4365
  5601   005B16  501E               	movf	??_floorf^0,w,c
  5602   005B18  101F               	iorwf	(??_floorf+1)^0,w,c
  5603   005B1A  1020               	iorwf	(??_floorf+2)^0,w,c
  5604   005B1C  1021               	iorwf	(??_floorf+3)^0,w,c
  5605   005B1E  B4D8               	btfsc	status,2,c
  5606   005B20  EF94  F02D         	goto	u4371
  5607   005B24  EF96  F02D         	goto	u4370
  5608   005B28                     u4371:
  5609   005B28  EF9E  F02D         	goto	l1334
  5610   005B2C                     u4370:
  5611   005B2C  5024               	movf	floorf@m^0,w,c
  5612   005B2E  262A               	addwf	floorf@u^0,f,c
  5613   005B30  5025               	movf	(floorf@m+1)^0,w,c
  5614   005B32  222B               	addwfc	(floorf@u+1)^0,f,c
  5615   005B34  5026               	movf	(floorf@m+2)^0,w,c
  5616   005B36  222C               	addwfc	(floorf@u+2)^0,f,c
  5617   005B38  5027               	movf	(floorf@m+3)^0,w,c
  5618   005B3A  222D               	addwfc	(floorf@u+3)^0,f,c
  5619   005B3C                     l1334:
  5620   005B3C  1C24               	comf	floorf@m^0,w,c
  5621   005B3E  6E1E               	movwf	??_floorf^0,c
  5622   005B40  1C25               	comf	(floorf@m+1)^0,w,c
  5623   005B42  6E1F               	movwf	(??_floorf+1)^0,c
  5624   005B44  1C26               	comf	(floorf@m+2)^0,w,c
  5625   005B46  6E20               	movwf	(??_floorf+2)^0,c
  5626   005B48  1C27               	comf	(floorf@m+3)^0,w,c
  5627   005B4A  6E21               	movwf	(??_floorf+3)^0,c
  5628   005B4C  501E               	movf	??_floorf^0,w,c
  5629   005B4E  162A               	andwf	floorf@u^0,f,c
  5630   005B50  501F               	movf	(??_floorf+1)^0,w,c
  5631   005B52  162B               	andwf	(floorf@u+1)^0,f,c
  5632   005B54  5020               	movf	(??_floorf+2)^0,w,c
  5633   005B56  162C               	andwf	(floorf@u+2)^0,f,c
  5634   005B58  5021               	movf	(??_floorf+3)^0,w,c
  5635   005B5A  162D               	andwf	(floorf@u+3)^0,f,c
  5636   005B5C  EFF4  F02D         	goto	l4068
  5637   005B60                     l4060:
  5638   005B60  C02A  F01E         	movff	floorf@u,??_floorf
  5639   005B64  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5640   005B68  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5641   005B6C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5642   005B70  0E20               	movlw	32
  5643   005B72  EFC0  F02D         	goto	u4380
  5644   005B76                     u4385:
  5645   005B76  90D8               	bcf	status,0,c
  5646   005B78  3221               	rrcf	(??_floorf+3)^0,f,c
  5647   005B7A  3220               	rrcf	(??_floorf+2)^0,f,c
  5648   005B7C  321F               	rrcf	(??_floorf+1)^0,f,c
  5649   005B7E  321E               	rrcf	??_floorf^0,f,c
  5650   005B80                     u4380:
  5651   005B80  2EE8               	decfsz	wreg,f,c
  5652   005B82  EFBB  F02D         	goto	u4385
  5653   005B86  501E               	movf	??_floorf^0,w,c
  5654   005B88  101F               	iorwf	(??_floorf+1)^0,w,c
  5655   005B8A  1020               	iorwf	(??_floorf+2)^0,w,c
  5656   005B8C  1021               	iorwf	(??_floorf+3)^0,w,c
  5657   005B8E  A4D8               	btfss	status,2,c
  5658   005B90  EFCC  F02D         	goto	u4391
  5659   005B94  EFCE  F02D         	goto	u4390
  5660   005B98                     u4391:
  5661   005B98  EFD8  F02D         	goto	l4064
  5662   005B9C                     u4390:
  5663   005B9C  0E00               	movlw	0
  5664   005B9E  6E2A               	movwf	floorf@u^0,c
  5665   005BA0  0E00               	movlw	0
  5666   005BA2  6E2B               	movwf	(floorf@u+1)^0,c
  5667   005BA4  0E00               	movlw	0
  5668   005BA6  6E2C               	movwf	(floorf@u+2)^0,c
  5669   005BA8  0E00               	movlw	0
  5670   005BAA  6E2D               	movwf	(floorf@u+3)^0,c
  5671   005BAC  EFF4  F02D         	goto	l4068
  5672   005BB0                     l4064:
  5673   005BB0  90D8               	bcf	status,0,c
  5674   005BB2  342A               	rlcf	floorf@u^0,w,c
  5675   005BB4  6E1E               	movwf	??_floorf^0,c
  5676   005BB6  342B               	rlcf	(floorf@u+1)^0,w,c
  5677   005BB8  6E1F               	movwf	(??_floorf+1)^0,c
  5678   005BBA  342C               	rlcf	(floorf@u+2)^0,w,c
  5679   005BBC  6E20               	movwf	(??_floorf+2)^0,c
  5680   005BBE  342D               	rlcf	(floorf@u+3)^0,w,c
  5681   005BC0  6E21               	movwf	(??_floorf+3)^0,c
  5682   005BC2  501E               	movf	??_floorf^0,w,c
  5683   005BC4  101F               	iorwf	(??_floorf+1)^0,w,c
  5684   005BC6  1020               	iorwf	(??_floorf+2)^0,w,c
  5685   005BC8  1021               	iorwf	(??_floorf+3)^0,w,c
  5686   005BCA  B4D8               	btfsc	status,2,c
  5687   005BCC  EFEA  F02D         	goto	u4401
  5688   005BD0  EFEC  F02D         	goto	u4400
  5689   005BD4                     u4401:
  5690   005BD4  EFF4  F02D         	goto	l4068
  5691   005BD8                     u4400:
  5692   005BD8  0E00               	movlw	0
  5693   005BDA  6E2A               	movwf	floorf@u^0,c
  5694   005BDC  0E00               	movlw	0
  5695   005BDE  6E2B               	movwf	(floorf@u+1)^0,c
  5696   005BE0  0E80               	movlw	128
  5697   005BE2  6E2C               	movwf	(floorf@u+2)^0,c
  5698   005BE4  0EBF               	movlw	191
  5699   005BE6  6E2D               	movwf	(floorf@u+3)^0,c
  5700   005BE8                     l4068:
  5701   005BE8  C02A  F01A         	movff	floorf@u,?_floorf
  5702   005BEC  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5703   005BF0  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5704   005BF4  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5705   005BF8                     l1331:
  5706   005BF8  0012               	return		;funcret
  5707   005BFA                     __end_of_floorf:
  5708                           	callstack 0
  5709                           
  5710 ;; *************** function ___fpclassifyf *****************
  5711 ;; Defined at:
  5712 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  x               4    0[COMRAM] float 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;  u               4   10[COMRAM] struct .
  5717 ;;  e               2    8[COMRAM] int 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[COMRAM] int 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5727 ;;      Params:         4       0       0       0       0       0       0       0       0
  5728 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5730 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5731 ;;Total ram usage:       14 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_efgtoa
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text15
  5741   004F0A                     __ptext15:
  5742                           	callstack 0
  5743   004F0A                     ___fpclassifyf:
  5744                           	callstack 26
  5745   004F0A  C0AF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5746   004F0E  C0B0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5747   004F12  C0B1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5748   004F16  C0B2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5749   004F1A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5750   004F1E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5751   004F22  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5752   004F26  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5753   004F2A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5754   004F2E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5755   004F32  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5756   004F36  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5757   004F3A  0E18               	movlw	24
  5758   004F3C  EFA5  F027         	goto	u4220
  5759   004F40                     u4225:
  5760   004F40  90D8               	bcf	status,0,c
  5761   004F42  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5762   004F44  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5763   004F46  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5764   004F48  3205               	rrcf	??___fpclassifyf^0,f,c
  5765   004F4A                     u4220:
  5766   004F4A  2EE8               	decfsz	wreg,f,c
  5767   004F4C  EFA0  F027         	goto	u4225
  5768   004F50  5005               	movf	??___fpclassifyf^0,w,c
  5769   004F52  6E09               	movwf	___fpclassifyf@e^0,c
  5770   004F54  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5771   004F56  5009               	movf	___fpclassifyf@e^0,w,c
  5772   004F58  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5773   004F5A  A4D8               	btfss	status,2,c
  5774   004F5C  EFB2  F027         	goto	u4231
  5775   004F60  EFB4  F027         	goto	u4230
  5776   004F64                     u4231:
  5777   004F64  EFD4  F027         	goto	l4022
  5778   004F68                     u4230:
  5779   004F68  90D8               	bcf	status,0,c
  5780   004F6A  340B               	rlcf	___fpclassifyf@u^0,w,c
  5781   004F6C  6E05               	movwf	??___fpclassifyf^0,c
  5782   004F6E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5783   004F70  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5784   004F72  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5785   004F74  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5786   004F76  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5787   004F78  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5788   004F7A  5005               	movf	??___fpclassifyf^0,w,c
  5789   004F7C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5790   004F7E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5791   004F80  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5792   004F82  A4D8               	btfss	status,2,c
  5793   004F84  EFC6  F027         	goto	u4241
  5794   004F88  EFC8  F027         	goto	u4240
  5795   004F8C                     u4241:
  5796   004F8C  EFCE  F027         	goto	l4018
  5797   004F90                     u4240:
  5798   004F90  0E00               	movlw	0
  5799   004F92  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5800   004F94  0E02               	movlw	2
  5801   004F96  6E01               	movwf	?___fpclassifyf^0,c
  5802   004F98  EF03  F028         	goto	l1324
  5803   004F9C                     l4018:
  5804   004F9C  0E00               	movlw	0
  5805   004F9E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5806   004FA0  0E03               	movlw	3
  5807   004FA2  6E01               	movwf	?___fpclassifyf^0,c
  5808   004FA4  EF03  F028         	goto	l1324
  5809   004FA8                     l4022:
  5810   004FA8  2809               	incf	___fpclassifyf@e^0,w,c
  5811   004FAA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5812   004FAC  A4D8               	btfss	status,2,c
  5813   004FAE  EFDB  F027         	goto	u4251
  5814   004FB2  EFDD  F027         	goto	u4250
  5815   004FB6                     u4251:
  5816   004FB6  EFFF  F027         	goto	l4028
  5817   004FBA                     u4250:
  5818   004FBA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5819   004FBE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5820   004FC2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5821   004FC6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5822   004FCA  0E09               	movlw	9
  5823   004FCC                     u4265:
  5824   004FCC  90D8               	bcf	status,0,c
  5825   004FCE  3605               	rlcf	??___fpclassifyf^0,f,c
  5826   004FD0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5827   004FD2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5828   004FD4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5829   004FD6  2EE8               	decfsz	wreg,f,c
  5830   004FD8  EFE6  F027         	goto	u4265
  5831   004FDC  5005               	movf	??___fpclassifyf^0,w,c
  5832   004FDE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5833   004FE0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5834   004FE2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5835   004FE4  B4D8               	btfsc	status,2,c
  5836   004FE6  EFF7  F027         	goto	u4271
  5837   004FEA  EFFA  F027         	goto	u4270
  5838   004FEE                     u4271:
  5839   004FEE  0E01               	movlw	1
  5840   004FF0  EFFB  F027         	goto	u4280
  5841   004FF4                     u4270:
  5842   004FF4  0E00               	movlw	0
  5843   004FF6                     u4280:
  5844   004FF6  6E01               	movwf	?___fpclassifyf^0,c
  5845   004FF8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5846   004FFA  EF03  F028         	goto	l1324
  5847   004FFE                     l4028:
  5848   004FFE  0E00               	movlw	0
  5849   005000  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5850   005002  0E04               	movlw	4
  5851   005004  6E01               	movwf	?___fpclassifyf^0,c
  5852   005006                     l1324:
  5853   005006  0012               	return		;funcret
  5854   005008                     __end_of___fpclassifyf:
  5855                           	callstack 0
  5856                           
  5857 ;; *************** function ___fltol *****************
  5858 ;; Defined at:
  5859 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  f1              4    0[COMRAM] int 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;  exp1            1    9[COMRAM] unsigned char 
  5864 ;;  sign1           1    8[COMRAM] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  4    0[COMRAM] long 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5874 ;;      Params:         4       0       0       0       0       0       0       0       0
  5875 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5876 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5877 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5878 ;;Total ram usage:       10 bytes
  5879 ;; Hardware stack levels used: 1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_efgtoa
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text16
  5888   00510C                     __ptext16:
  5889                           	callstack 0
  5890   00510C                     ___fltol:
  5891                           	callstack 26
  5892   00510C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5893   00510E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5894   005110  6E0A               	movwf	___fltol@exp1^0,c
  5895   005112  500A               	movf	___fltol@exp1^0,w,c
  5896   005114  A4D8               	btfss	status,2,c
  5897   005116  EF8F  F028         	goto	u4131
  5898   00511A  EF91  F028         	goto	u4130
  5899   00511E                     u4131:
  5900   00511E  EF9B  F028         	goto	l3960
  5901   005122                     u4130:
  5902   005122                     l3956:
  5903   005122  0E00               	movlw	0
  5904   005124  6E01               	movwf	?___fltol^0,c
  5905   005126  0E00               	movlw	0
  5906   005128  6E02               	movwf	(?___fltol+1)^0,c
  5907   00512A  0E00               	movlw	0
  5908   00512C  6E03               	movwf	(?___fltol+2)^0,c
  5909   00512E  0E00               	movlw	0
  5910   005130  6E04               	movwf	(?___fltol+3)^0,c
  5911   005132  EF08  F029         	goto	l795
  5912   005136                     l3960:
  5913   005136  C001  F005         	movff	___fltol@f1,??___fltol
  5914   00513A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5915   00513E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5916   005142  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5917   005146  0E20               	movlw	32
  5918   005148  EFAB  F028         	goto	u4140
  5919   00514C                     u4145:
  5920   00514C  90D8               	bcf	status,0,c
  5921   00514E  3208               	rrcf	(??___fltol+3)^0,f,c
  5922   005150  3207               	rrcf	(??___fltol+2)^0,f,c
  5923   005152  3206               	rrcf	(??___fltol+1)^0,f,c
  5924   005154  3205               	rrcf	??___fltol^0,f,c
  5925   005156                     u4140:
  5926   005156  2EE8               	decfsz	wreg,f,c
  5927   005158  EFA6  F028         	goto	u4145
  5928   00515C  5005               	movf	??___fltol^0,w,c
  5929   00515E  6E09               	movwf	___fltol@sign1^0,c
  5930   005160  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5931   005162  0EFF               	movlw	255
  5932   005164  1601               	andwf	___fltol@f1^0,f,c
  5933   005166  0EFF               	movlw	255
  5934   005168  1602               	andwf	(___fltol@f1+1)^0,f,c
  5935   00516A  0EFF               	movlw	255
  5936   00516C  1603               	andwf	(___fltol@f1+2)^0,f,c
  5937   00516E  0E00               	movlw	0
  5938   005170  1604               	andwf	(___fltol@f1+3)^0,f,c
  5939   005172  0E96               	movlw	150
  5940   005174  5E0A               	subwf	___fltol@exp1^0,f,c
  5941   005176  BE0A               	btfsc	___fltol@exp1^0,7,c
  5942   005178  EFC2  F028         	goto	u4150
  5943   00517C  EFC0  F028         	goto	u4151
  5944   005180                     u4151:
  5945   005180  EFD8  F028         	goto	l3980
  5946   005184                     u4150:
  5947   005184  500A               	movf	___fltol@exp1^0,w,c
  5948   005186  0A80               	xorlw	128
  5949   005188  0F97               	addlw	151
  5950   00518A  B0D8               	btfsc	status,0,c
  5951   00518C  EFCA  F028         	goto	u4161
  5952   005190  EFCC  F028         	goto	u4160
  5953   005194                     u4161:
  5954   005194  EFCE  F028         	goto	l3976
  5955   005198                     u4160:
  5956   005198  EF91  F028         	goto	l3956
  5957   00519C                     l3976:
  5958   00519C  90D8               	bcf	status,0,c
  5959   00519E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5960   0051A0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5961   0051A2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5962   0051A4  3201               	rrcf	___fltol@f1^0,f,c
  5963   0051A6  3E0A               	incfsz	___fltol@exp1^0,f,c
  5964   0051A8  EFCE  F028         	goto	l3976
  5965   0051AC  EFF0  F028         	goto	l3990
  5966   0051B0                     l3980:
  5967   0051B0  0E1F               	movlw	31
  5968   0051B2  640A               	cpfsgt	___fltol@exp1^0,c
  5969   0051B4  EFDE  F028         	goto	u4171
  5970   0051B8  EFE0  F028         	goto	u4170
  5971   0051BC                     u4171:
  5972   0051BC  EFE8  F028         	goto	l3988
  5973   0051C0                     u4170:
  5974   0051C0  EF91  F028         	goto	l3956
  5975   0051C4                     l3986:
  5976   0051C4  90D8               	bcf	status,0,c
  5977   0051C6  3601               	rlcf	___fltol@f1^0,f,c
  5978   0051C8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5979   0051CA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5980   0051CC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5981   0051CE  060A               	decf	___fltol@exp1^0,f,c
  5982   0051D0                     l3988:
  5983   0051D0  500A               	movf	___fltol@exp1^0,w,c
  5984   0051D2  A4D8               	btfss	status,2,c
  5985   0051D4  EFEE  F028         	goto	u4181
  5986   0051D8  EFF0  F028         	goto	u4180
  5987   0051DC                     u4181:
  5988   0051DC  EFE2  F028         	goto	l3986
  5989   0051E0                     u4180:
  5990   0051E0                     l3990:
  5991   0051E0  5009               	movf	___fltol@sign1^0,w,c
  5992   0051E2  B4D8               	btfsc	status,2,c
  5993   0051E4  EFF6  F028         	goto	u4191
  5994   0051E8  EFF8  F028         	goto	u4190
  5995   0051EC                     u4191:
  5996   0051EC  EF00  F029         	goto	l3994
  5997   0051F0                     u4190:
  5998   0051F0  1E04               	comf	(___fltol@f1+3)^0,f,c
  5999   0051F2  1E03               	comf	(___fltol@f1+2)^0,f,c
  6000   0051F4  1E02               	comf	(___fltol@f1+1)^0,f,c
  6001   0051F6  6C01               	negf	___fltol@f1^0,c
  6002   0051F8  0E00               	movlw	0
  6003   0051FA  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6004   0051FC  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6005   0051FE  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6006   005200                     l3994:
  6007   005200  C001  F001         	movff	___fltol@f1,?___fltol
  6008   005204  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6009   005208  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6010   00520C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6011   005210                     l795:
  6012   005210  0012               	return		;funcret
  6013   005212                     __end_of___fltol:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___flsub *****************
  6017 ;; Defined at:
  6018 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  b               4   25[COMRAM] long 
  6021 ;;  a               4   29[COMRAM] long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  4   25[COMRAM] long 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6033 ;;      Params:         8       0       0       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6036 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6037 ;;Total ram usage:        8 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; Hardware stack levels required when called: 1
  6040 ;; This function calls:
  6041 ;;		___fladd
  6042 ;; This function is called by:
  6043 ;;		_efgtoa
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text17
  6048   0047D4                     __ptext17:
  6049                           	callstack 0
  6050   0047D4                     ___flsub:
  6051                           	callstack 25
  6052   0047D4  0E00               	movlw	0
  6053   0047D6  1A1E               	xorwf	___flsub@a^0,f,c
  6054   0047D8  0E00               	movlw	0
  6055   0047DA  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  6056   0047DC  0E00               	movlw	0
  6057   0047DE  1A20               	xorwf	(___flsub@a+2)^0,f,c
  6058   0047E0  0E80               	movlw	128
  6059   0047E2  1A21               	xorwf	(___flsub@a+3)^0,f,c
  6060   0047E4  C01A  F001         	movff	___flsub@b,___fladd@b
  6061   0047E8  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  6062   0047EC  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  6063   0047F0  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  6064   0047F4  C01E  F005         	movff	___flsub@a,___fladd@a
  6065   0047F8  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  6066   0047FC  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  6067   004800  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  6068   004804  EC53  F034         	call	___fladd	;wreg free
  6069   004808  C001  F01A         	movff	?___fladd,?___flsub
  6070   00480C  C002  F01B         	movff	?___fladd+1,?___flsub+1
  6071   004810  C003  F01C         	movff	?___fladd+2,?___flsub+2
  6072   004814  C004  F01D         	movff	?___fladd+3,?___flsub+3
  6073   004818  0012               	return		;funcret
  6074   00481A                     __end_of___flsub:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function ___fladd *****************
  6078 ;; Defined at:
  6079 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  b               4    0[COMRAM] long 
  6082 ;;  a               4    4[COMRAM] long 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  grs             1   15[COMRAM] unsigned char 
  6085 ;;  bexp            1   14[COMRAM] unsigned char 
  6086 ;;  aexp            1   13[COMRAM] unsigned char 
  6087 ;;  signs           1   12[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  4    0[COMRAM] unsigned char 
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6097 ;;      Params:         8       0       0       0       0       0       0       0       0
  6098 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6099 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6100 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6101 ;;Total ram usage:       16 bytes
  6102 ;; Hardware stack levels used: 1
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		___flsub
  6107 ;;		_efgtoa
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text18
  6112   0068A6                     __ptext18:
  6113                           	callstack 0
  6114   0068A6                     ___fladd:
  6115                           	callstack 25
  6116   0068A6  5004               	movf	(___fladd@b+3)^0,w,c
  6117   0068A8  0B80               	andlw	128
  6118   0068AA  6E0D               	movwf	___fladd@signs^0,c
  6119   0068AC  5004               	movf	(___fladd@b+3)^0,w,c
  6120   0068AE  2404               	addwf	(___fladd@b+3)^0,w,c
  6121   0068B0  6E0F               	movwf	___fladd@bexp^0,c
  6122   0068B2  AE03               	btfss	(___fladd@b+2)^0,7,c
  6123   0068B4  EF5E  F034         	goto	u3221
  6124   0068B8  EF60  F034         	goto	u3220
  6125   0068BC                     u3221:
  6126   0068BC  EF61  F034         	goto	l3418
  6127   0068C0                     u3220:
  6128   0068C0  800F               	bsf	___fladd@bexp^0,0,c
  6129   0068C2                     l3418:
  6130   0068C2  500F               	movf	___fladd@bexp^0,w,c
  6131   0068C4  B4D8               	btfsc	status,2,c
  6132   0068C6  EF67  F034         	goto	u3231
  6133   0068CA  EF69  F034         	goto	u3230
  6134   0068CE                     u3231:
  6135   0068CE  EF7E  F034         	goto	l3428
  6136   0068D2                     u3230:
  6137   0068D2  280F               	incf	___fladd@bexp^0,w,c
  6138   0068D4  A4D8               	btfss	status,2,c
  6139   0068D6  EF6F  F034         	goto	u3241
  6140   0068DA  EF71  F034         	goto	u3240
  6141   0068DE                     u3241:
  6142   0068DE  EF79  F034         	goto	l3424
  6143   0068E2                     u3240:
  6144   0068E2  0E00               	movlw	0
  6145   0068E4  6E01               	movwf	___fladd@b^0,c
  6146   0068E6  0E00               	movlw	0
  6147   0068E8  6E02               	movwf	(___fladd@b+1)^0,c
  6148   0068EA  0E00               	movlw	0
  6149   0068EC  6E03               	movwf	(___fladd@b+2)^0,c
  6150   0068EE  0E00               	movlw	0
  6151   0068F0  6E04               	movwf	(___fladd@b+3)^0,c
  6152   0068F2                     l3424:
  6153   0068F2  8E03               	bsf	(___fladd@b+2)^0,7,c
  6154   0068F4  0E00               	movlw	0
  6155   0068F6  6E04               	movwf	(___fladd@b+3)^0,c
  6156   0068F8  EF86  F034         	goto	l3430
  6157   0068FC                     l3428:
  6158   0068FC  0E00               	movlw	0
  6159   0068FE  6E01               	movwf	___fladd@b^0,c
  6160   006900  0E00               	movlw	0
  6161   006902  6E02               	movwf	(___fladd@b+1)^0,c
  6162   006904  0E00               	movlw	0
  6163   006906  6E03               	movwf	(___fladd@b+2)^0,c
  6164   006908  0E00               	movlw	0
  6165   00690A  6E04               	movwf	(___fladd@b+3)^0,c
  6166   00690C                     l3430:
  6167   00690C  5008               	movf	(___fladd@a+3)^0,w,c
  6168   00690E  0B80               	andlw	128
  6169   006910  6E0E               	movwf	___fladd@aexp^0,c
  6170   006912  500D               	movf	___fladd@signs^0,w,c
  6171   006914  180E               	xorwf	___fladd@aexp^0,w,c
  6172   006916  B4D8               	btfsc	status,2,c
  6173   006918  EF90  F034         	goto	u3251
  6174   00691C  EF92  F034         	goto	u3250
  6175   006920                     u3251:
  6176   006920  EF93  F034         	goto	l3436
  6177   006924                     u3250:
  6178   006924  8C0D               	bsf	___fladd@signs^0,6,c
  6179   006926                     l3436:
  6180   006926  5008               	movf	(___fladd@a+3)^0,w,c
  6181   006928  2408               	addwf	(___fladd@a+3)^0,w,c
  6182   00692A  6E0E               	movwf	___fladd@aexp^0,c
  6183   00692C  AE07               	btfss	(___fladd@a+2)^0,7,c
  6184   00692E  EF9B  F034         	goto	u3261
  6185   006932  EF9D  F034         	goto	u3260
  6186   006936                     u3261:
  6187   006936  EF9E  F034         	goto	l3442
  6188   00693A                     u3260:
  6189   00693A  800E               	bsf	___fladd@aexp^0,0,c
  6190   00693C                     l3442:
  6191   00693C  500E               	movf	___fladd@aexp^0,w,c
  6192   00693E  B4D8               	btfsc	status,2,c
  6193   006940  EFA4  F034         	goto	u3271
  6194   006944  EFA6  F034         	goto	u3270
  6195   006948                     u3271:
  6196   006948  EFBB  F034         	goto	l3452
  6197   00694C                     u3270:
  6198   00694C  280E               	incf	___fladd@aexp^0,w,c
  6199   00694E  A4D8               	btfss	status,2,c
  6200   006950  EFAC  F034         	goto	u3281
  6201   006954  EFAE  F034         	goto	u3280
  6202   006958                     u3281:
  6203   006958  EFB6  F034         	goto	l3448
  6204   00695C                     u3280:
  6205   00695C  0E00               	movlw	0
  6206   00695E  6E05               	movwf	___fladd@a^0,c
  6207   006960  0E00               	movlw	0
  6208   006962  6E06               	movwf	(___fladd@a+1)^0,c
  6209   006964  0E00               	movlw	0
  6210   006966  6E07               	movwf	(___fladd@a+2)^0,c
  6211   006968  0E00               	movlw	0
  6212   00696A  6E08               	movwf	(___fladd@a+3)^0,c
  6213   00696C                     l3448:
  6214   00696C  8E07               	bsf	(___fladd@a+2)^0,7,c
  6215   00696E  0E00               	movlw	0
  6216   006970  6E08               	movwf	(___fladd@a+3)^0,c
  6217   006972  EFC3  F034         	goto	l3454
  6218   006976                     l3452:
  6219   006976  0E00               	movlw	0
  6220   006978  6E05               	movwf	___fladd@a^0,c
  6221   00697A  0E00               	movlw	0
  6222   00697C  6E06               	movwf	(___fladd@a+1)^0,c
  6223   00697E  0E00               	movlw	0
  6224   006980  6E07               	movwf	(___fladd@a+2)^0,c
  6225   006982  0E00               	movlw	0
  6226   006984  6E08               	movwf	(___fladd@a+3)^0,c
  6227   006986                     l3454:
  6228   006986  500F               	movf	___fladd@bexp^0,w,c
  6229   006988  5C0E               	subwf	___fladd@aexp^0,w,c
  6230   00698A  B0D8               	btfsc	status,0,c
  6231   00698C  EFCA  F034         	goto	u3291
  6232   006990  EFCC  F034         	goto	u3290
  6233   006994                     u3291:
  6234   006994  EFF3  F034         	goto	l3490
  6235   006998                     u3290:
  6236   006998  AC0D               	btfss	___fladd@signs^0,6,c
  6237   00699A  EFD1  F034         	goto	u3301
  6238   00699E  EFD3  F034         	goto	u3300
  6239   0069A2                     u3301:
  6240   0069A2  EFD5  F034         	goto	l3460
  6241   0069A6                     u3300:
  6242   0069A6  0E80               	movlw	128
  6243   0069A8  1A0D               	xorwf	___fladd@signs^0,f,c
  6244   0069AA                     l3460:
  6245   0069AA  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6246   0069AE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6247   0069B2  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6248   0069B6  C001  F010         	movff	___fladd@b,___fladd@grs
  6249   0069BA  C005  F001         	movff	___fladd@a,___fladd@b
  6250   0069BE  C010  F005         	movff	___fladd@grs,___fladd@a
  6251   0069C2  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6252   0069C6  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6253   0069CA  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6254   0069CE  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6255   0069D2  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6256   0069D6  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6257   0069DA  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6258   0069DE  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6259   0069E2  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6260   0069E6                     l3490:
  6261   0069E6  0E00               	movlw	0
  6262   0069E8  6E10               	movwf	___fladd@grs^0,c
  6263   0069EA  500F               	movf	___fladd@bexp^0,w,c
  6264   0069EC  C00E  F009         	movff	___fladd@aexp,??___fladd
  6265   0069F0  6A0A               	clrf	(??___fladd+1)^0,c
  6266   0069F2  5E09               	subwf	??___fladd^0,f,c
  6267   0069F4  0E00               	movlw	0
  6268   0069F6  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6269   0069F8  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6270   0069FA  EF08  F035         	goto	u3311
  6271   0069FE  500A               	movf	(??___fladd+1)^0,w,c
  6272   006A00  E109               	bnz	u3310
  6273   006A02  0E1A               	movlw	26
  6274   006A04  5C09               	subwf	??___fladd^0,w,c
  6275   006A06  A0D8               	btfss	status,0,c
  6276   006A08  EF08  F035         	goto	u3311
  6277   006A0C  EF0A  F035         	goto	u3310
  6278   006A10                     u3311:
  6279   006A10  EF41  F035         	goto	l1027
  6280   006A14                     u3310:
  6281   006A14  5001               	movf	___fladd@b^0,w,c
  6282   006A16  1002               	iorwf	(___fladd@b+1)^0,w,c
  6283   006A18  1003               	iorwf	(___fladd@b+2)^0,w,c
  6284   006A1A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6285   006A1C  A4D8               	btfss	status,2,c
  6286   006A1E  EF13  F035         	goto	u3321
  6287   006A22  EF16  F035         	goto	u3320
  6288   006A26                     u3321:
  6289   006A26  0E01               	movlw	1
  6290   006A28  EF17  F035         	goto	u3330
  6291   006A2C                     u3320:
  6292   006A2C  0E00               	movlw	0
  6293   006A2E                     u3330:
  6294   006A2E  6E10               	movwf	___fladd@grs^0,c
  6295   006A30  0E00               	movlw	0
  6296   006A32  6E01               	movwf	___fladd@b^0,c
  6297   006A34  0E00               	movlw	0
  6298   006A36  6E02               	movwf	(___fladd@b+1)^0,c
  6299   006A38  0E00               	movlw	0
  6300   006A3A  6E03               	movwf	(___fladd@b+2)^0,c
  6301   006A3C  0E00               	movlw	0
  6302   006A3E  6E04               	movwf	(___fladd@b+3)^0,c
  6303   006A40  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6304   006A44  EF4A  F035         	goto	l1026
  6305   006A48                     l1028:
  6306   006A48  A010               	btfss	___fladd@grs^0,0,c
  6307   006A4A  EF29  F035         	goto	u3341
  6308   006A4E  EF2B  F035         	goto	u3340
  6309   006A52                     u3341:
  6310   006A52  EF31  F035         	goto	l3502
  6311   006A56                     u3340:
  6312   006A56  90D8               	bcf	status,0,c
  6313   006A58  3010               	rrcf	___fladd@grs^0,w,c
  6314   006A5A  0901               	iorlw	1
  6315   006A5C  6E10               	movwf	___fladd@grs^0,c
  6316   006A5E  EF33  F035         	goto	l3504
  6317   006A62                     l3502:
  6318   006A62  90D8               	bcf	status,0,c
  6319   006A64  3210               	rrcf	___fladd@grs^0,f,c
  6320   006A66                     l3504:
  6321   006A66  A001               	btfss	___fladd@b^0,0,c
  6322   006A68  EF38  F035         	goto	u3351
  6323   006A6C  EF3A  F035         	goto	u3350
  6324   006A70                     u3351:
  6325   006A70  EF3B  F035         	goto	l3508
  6326   006A74                     u3350:
  6327   006A74  8E10               	bsf	___fladd@grs^0,7,c
  6328   006A76                     l3508:
  6329   006A76  3404               	rlcf	(___fladd@b+3)^0,w,c
  6330   006A78  3204               	rrcf	(___fladd@b+3)^0,f,c
  6331   006A7A  3203               	rrcf	(___fladd@b+2)^0,f,c
  6332   006A7C  3202               	rrcf	(___fladd@b+1)^0,f,c
  6333   006A7E  3201               	rrcf	___fladd@b^0,f,c
  6334   006A80  2A0F               	incf	___fladd@bexp^0,f,c
  6335   006A82                     l1027:
  6336   006A82  500E               	movf	___fladd@aexp^0,w,c
  6337   006A84  5C0F               	subwf	___fladd@bexp^0,w,c
  6338   006A86  A0D8               	btfss	status,0,c
  6339   006A88  EF48  F035         	goto	u3361
  6340   006A8C  EF4A  F035         	goto	u3360
  6341   006A90                     u3361:
  6342   006A90  EF24  F035         	goto	l1028
  6343   006A94                     u3360:
  6344   006A94                     l1026:
  6345   006A94  BC0D               	btfsc	___fladd@signs^0,6,c
  6346   006A96  EF4F  F035         	goto	u3371
  6347   006A9A  EF51  F035         	goto	u3370
  6348   006A9E                     u3371:
  6349   006A9E  EF91  F035         	goto	l3536
  6350   006AA2                     u3370:
  6351   006AA2  500F               	movf	___fladd@bexp^0,w,c
  6352   006AA4  A4D8               	btfss	status,2,c
  6353   006AA6  EF57  F035         	goto	u3381
  6354   006AAA  EF59  F035         	goto	u3380
  6355   006AAE                     u3381:
  6356   006AAE  EF63  F035         	goto	l3518
  6357   006AB2                     u3380:
  6358   006AB2  0E00               	movlw	0
  6359   006AB4  6E01               	movwf	?___fladd^0,c
  6360   006AB6  0E00               	movlw	0
  6361   006AB8  6E02               	movwf	(?___fladd+1)^0,c
  6362   006ABA  0E00               	movlw	0
  6363   006ABC  6E03               	movwf	(?___fladd+2)^0,c
  6364   006ABE  0E00               	movlw	0
  6365   006AC0  6E04               	movwf	(?___fladd+3)^0,c
  6366   006AC2  EFB2  F036         	goto	l1035
  6367   006AC6                     l3518:
  6368   006AC6  5005               	movf	___fladd@a^0,w,c
  6369   006AC8  2601               	addwf	___fladd@b^0,f,c
  6370   006ACA  5006               	movf	(___fladd@a+1)^0,w,c
  6371   006ACC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6372   006ACE  5007               	movf	(___fladd@a+2)^0,w,c
  6373   006AD0  2203               	addwfc	(___fladd@b+2)^0,f,c
  6374   006AD2  5008               	movf	(___fladd@a+3)^0,w,c
  6375   006AD4  2204               	addwfc	(___fladd@b+3)^0,f,c
  6376   006AD6  A004               	btfss	(___fladd@b+3)^0,0,c
  6377   006AD8  EF70  F035         	goto	u3391
  6378   006ADC  EF72  F035         	goto	u3390
  6379   006AE0                     u3391:
  6380   006AE0  EF1E  F036         	goto	l3572
  6381   006AE4                     u3390:
  6382   006AE4  A010               	btfss	___fladd@grs^0,0,c
  6383   006AE6  EF77  F035         	goto	u3401
  6384   006AEA  EF79  F035         	goto	u3400
  6385   006AEE                     u3401:
  6386   006AEE  EF7F  F035         	goto	l3526
  6387   006AF2                     u3400:
  6388   006AF2  90D8               	bcf	status,0,c
  6389   006AF4  3010               	rrcf	___fladd@grs^0,w,c
  6390   006AF6  0901               	iorlw	1
  6391   006AF8  6E10               	movwf	___fladd@grs^0,c
  6392   006AFA  EF81  F035         	goto	l3528
  6393   006AFE                     l3526:
  6394   006AFE  90D8               	bcf	status,0,c
  6395   006B00  3210               	rrcf	___fladd@grs^0,f,c
  6396   006B02                     l3528:
  6397   006B02  A001               	btfss	___fladd@b^0,0,c
  6398   006B04  EF86  F035         	goto	u3411
  6399   006B08  EF88  F035         	goto	u3410
  6400   006B0C                     u3411:
  6401   006B0C  EF89  F035         	goto	l3532
  6402   006B10                     u3410:
  6403   006B10  8E10               	bsf	___fladd@grs^0,7,c
  6404   006B12                     l3532:
  6405   006B12  3404               	rlcf	(___fladd@b+3)^0,w,c
  6406   006B14  3204               	rrcf	(___fladd@b+3)^0,f,c
  6407   006B16  3203               	rrcf	(___fladd@b+2)^0,f,c
  6408   006B18  3202               	rrcf	(___fladd@b+1)^0,f,c
  6409   006B1A  3201               	rrcf	___fladd@b^0,f,c
  6410   006B1C  2A0F               	incf	___fladd@bexp^0,f,c
  6411   006B1E  EF1E  F036         	goto	l3572
  6412   006B22                     l3536:
  6413   006B22  5005               	movf	___fladd@a^0,w,c
  6414   006B24  5C01               	subwf	___fladd@b^0,w,c
  6415   006B26  5006               	movf	(___fladd@a+1)^0,w,c
  6416   006B28  5802               	subwfb	(___fladd@b+1)^0,w,c
  6417   006B2A  5007               	movf	(___fladd@a+2)^0,w,c
  6418   006B2C  5803               	subwfb	(___fladd@b+2)^0,w,c
  6419   006B2E  5004               	movf	(___fladd@b+3)^0,w,c
  6420   006B30  0A80               	xorlw	128
  6421   006B32  6E09               	movwf	??___fladd^0,c
  6422   006B34  5008               	movf	(___fladd@a+3)^0,w,c
  6423   006B36  0A80               	xorlw	128
  6424   006B38  5809               	subwfb	??___fladd^0,w,c
  6425   006B3A  B0D8               	btfsc	status,0,c
  6426   006B3C  EFA2  F035         	goto	u3421
  6427   006B40  EFA4  F035         	goto	u3420
  6428   006B44                     u3421:
  6429   006B44  EFCF  F035         	goto	l3546
  6430   006B48                     u3420:
  6431   006B48  5001               	movf	___fladd@b^0,w,c
  6432   006B4A  5C05               	subwf	___fladd@a^0,w,c
  6433   006B4C  6E09               	movwf	??___fladd^0,c
  6434   006B4E  5002               	movf	(___fladd@b+1)^0,w,c
  6435   006B50  5806               	subwfb	(___fladd@a+1)^0,w,c
  6436   006B52  6E0A               	movwf	(??___fladd+1)^0,c
  6437   006B54  5003               	movf	(___fladd@b+2)^0,w,c
  6438   006B56  5807               	subwfb	(___fladd@a+2)^0,w,c
  6439   006B58  6E0B               	movwf	(??___fladd+2)^0,c
  6440   006B5A  5004               	movf	(___fladd@b+3)^0,w,c
  6441   006B5C  5808               	subwfb	(___fladd@a+3)^0,w,c
  6442   006B5E  6E0C               	movwf	(??___fladd+3)^0,c
  6443   006B60  0EFF               	movlw	255
  6444   006B62  2409               	addwf	??___fladd^0,w,c
  6445   006B64  6E01               	movwf	___fladd@b^0,c
  6446   006B66  0EFF               	movlw	255
  6447   006B68  200A               	addwfc	(??___fladd+1)^0,w,c
  6448   006B6A  6E02               	movwf	(___fladd@b+1)^0,c
  6449   006B6C  0EFF               	movlw	255
  6450   006B6E  200B               	addwfc	(??___fladd+2)^0,w,c
  6451   006B70  6E03               	movwf	(___fladd@b+2)^0,c
  6452   006B72  0EFF               	movlw	255
  6453   006B74  200C               	addwfc	(??___fladd+3)^0,w,c
  6454   006B76  6E04               	movwf	(___fladd@b+3)^0,c
  6455   006B78  0E80               	movlw	128
  6456   006B7A  1A0D               	xorwf	___fladd@signs^0,f,c
  6457   006B7C  6C10               	negf	___fladd@grs^0,c
  6458   006B7E  5010               	movf	___fladd@grs^0,w,c
  6459   006B80  A4D8               	btfss	status,2,c
  6460   006B82  EFC5  F035         	goto	u3431
  6461   006B86  EFC7  F035         	goto	u3430
  6462   006B8A                     u3431:
  6463   006B8A  EFD7  F035         	goto	l1043
  6464   006B8E                     u3430:
  6465   006B8E  0E01               	movlw	1
  6466   006B90  2601               	addwf	___fladd@b^0,f,c
  6467   006B92  0E00               	movlw	0
  6468   006B94  2202               	addwfc	(___fladd@b+1)^0,f,c
  6469   006B96  2203               	addwfc	(___fladd@b+2)^0,f,c
  6470   006B98  2204               	addwfc	(___fladd@b+3)^0,f,c
  6471   006B9A  EFD7  F035         	goto	l1043
  6472   006B9E                     l3546:
  6473   006B9E  5005               	movf	___fladd@a^0,w,c
  6474   006BA0  5E01               	subwf	___fladd@b^0,f,c
  6475   006BA2  5006               	movf	(___fladd@a+1)^0,w,c
  6476   006BA4  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6477   006BA6  5007               	movf	(___fladd@a+2)^0,w,c
  6478   006BA8  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6479   006BAA  5008               	movf	(___fladd@a+3)^0,w,c
  6480   006BAC  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6481   006BAE                     l1043:
  6482   006BAE  5001               	movf	___fladd@b^0,w,c
  6483   006BB0  1002               	iorwf	(___fladd@b+1)^0,w,c
  6484   006BB2  1003               	iorwf	(___fladd@b+2)^0,w,c
  6485   006BB4  1004               	iorwf	(___fladd@b+3)^0,w,c
  6486   006BB6  A4D8               	btfss	status,2,c
  6487   006BB8  EFE0  F035         	goto	u3441
  6488   006BBC  EFE2  F035         	goto	u3440
  6489   006BC0                     u3441:
  6490   006BC0  EF17  F036         	goto	l3570
  6491   006BC4                     u3440:
  6492   006BC4  5010               	movf	___fladd@grs^0,w,c
  6493   006BC6  A4D8               	btfss	status,2,c
  6494   006BC8  EFE8  F035         	goto	u3451
  6495   006BCC  EFEA  F035         	goto	u3450
  6496   006BD0                     u3451:
  6497   006BD0  EF17  F036         	goto	l3570
  6498   006BD4                     u3450:
  6499   006BD4  0E00               	movlw	0
  6500   006BD6  6E01               	movwf	?___fladd^0,c
  6501   006BD8  0E00               	movlw	0
  6502   006BDA  6E02               	movwf	(?___fladd+1)^0,c
  6503   006BDC  0E00               	movlw	0
  6504   006BDE  6E03               	movwf	(?___fladd+2)^0,c
  6505   006BE0  0E00               	movlw	0
  6506   006BE2  6E04               	movwf	(?___fladd+3)^0,c
  6507   006BE4  EFB2  F036         	goto	l1035
  6508   006BE8                     l3554:
  6509   006BE8  90D8               	bcf	status,0,c
  6510   006BEA  3601               	rlcf	___fladd@b^0,f,c
  6511   006BEC  3602               	rlcf	(___fladd@b+1)^0,f,c
  6512   006BEE  3603               	rlcf	(___fladd@b+2)^0,f,c
  6513   006BF0  3604               	rlcf	(___fladd@b+3)^0,f,c
  6514   006BF2  AE10               	btfss	___fladd@grs^0,7,c
  6515   006BF4  EFFE  F035         	goto	u3461
  6516   006BF8  EF00  F036         	goto	u3460
  6517   006BFC                     u3461:
  6518   006BFC  EF01  F036         	goto	l3560
  6519   006C00                     u3460:
  6520   006C00  8001               	bsf	___fladd@b^0,0,c
  6521   006C02                     l3560:
  6522   006C02  A010               	btfss	___fladd@grs^0,0,c
  6523   006C04  EF06  F036         	goto	u3471
  6524   006C08  EF08  F036         	goto	u3470
  6525   006C0C                     u3471:
  6526   006C0C  EF0C  F036         	goto	l3564
  6527   006C10                     u3470:
  6528   006C10  80D8               	bsf	status,0,c
  6529   006C12  3610               	rlcf	___fladd@grs^0,f,c
  6530   006C14  EF0E  F036         	goto	l3566
  6531   006C18                     l3564:
  6532   006C18  90D8               	bcf	status,0,c
  6533   006C1A  3610               	rlcf	___fladd@grs^0,f,c
  6534   006C1C                     l3566:
  6535   006C1C  500F               	movf	___fladd@bexp^0,w,c
  6536   006C1E  B4D8               	btfsc	status,2,c
  6537   006C20  EF14  F036         	goto	u3481
  6538   006C24  EF16  F036         	goto	u3480
  6539   006C28                     u3481:
  6540   006C28  EF17  F036         	goto	l3570
  6541   006C2C                     u3480:
  6542   006C2C  060F               	decf	___fladd@bexp^0,f,c
  6543   006C2E                     l3570:
  6544   006C2E  AE03               	btfss	(___fladd@b+2)^0,7,c
  6545   006C30  EF1C  F036         	goto	u3491
  6546   006C34  EF1E  F036         	goto	u3490
  6547   006C38                     u3491:
  6548   006C38  EFF4  F035         	goto	l3554
  6549   006C3C                     u3490:
  6550   006C3C                     l3572:
  6551   006C3C  0E00               	movlw	0
  6552   006C3E  6E0E               	movwf	___fladd@aexp^0,c
  6553   006C40  AE10               	btfss	___fladd@grs^0,7,c
  6554   006C42  EF25  F036         	goto	u3501
  6555   006C46  EF27  F036         	goto	u3500
  6556   006C4A                     u3501:
  6557   006C4A  EF3F  F036         	goto	l1052
  6558   006C4E                     u3500:
  6559   006C4E  C010  F009         	movff	___fladd@grs,??___fladd
  6560   006C52  0E7F               	movlw	127
  6561   006C54  1609               	andwf	??___fladd^0,f,c
  6562   006C56  B4D8               	btfsc	status,2,c
  6563   006C58  EF30  F036         	goto	u3511
  6564   006C5C  EF32  F036         	goto	u3510
  6565   006C60                     u3511:
  6566   006C60  EF36  F036         	goto	l1053
  6567   006C64                     u3510:
  6568   006C64                     l3578:
  6569   006C64  0E01               	movlw	1
  6570   006C66  6E0E               	movwf	___fladd@aexp^0,c
  6571   006C68  EF3F  F036         	goto	l1052
  6572   006C6C                     l1053:
  6573   006C6C  A001               	btfss	___fladd@b^0,0,c
  6574   006C6E  EF3B  F036         	goto	u3521
  6575   006C72  EF3D  F036         	goto	u3520
  6576   006C76                     u3521:
  6577   006C76  EF3F  F036         	goto	l1052
  6578   006C7A                     u3520:
  6579   006C7A  EF32  F036         	goto	l3578
  6580   006C7E                     l1052:
  6581   006C7E  500E               	movf	___fladd@aexp^0,w,c
  6582   006C80  B4D8               	btfsc	status,2,c
  6583   006C82  EF45  F036         	goto	u3531
  6584   006C86  EF47  F036         	goto	u3530
  6585   006C8A                     u3531:
  6586   006C8A  EF72  F036         	goto	l3590
  6587   006C8E                     u3530:
  6588   006C8E  0E01               	movlw	1
  6589   006C90  2601               	addwf	___fladd@b^0,f,c
  6590   006C92  0E00               	movlw	0
  6591   006C94  2202               	addwfc	(___fladd@b+1)^0,f,c
  6592   006C96  2203               	addwfc	(___fladd@b+2)^0,f,c
  6593   006C98  2204               	addwfc	(___fladd@b+3)^0,f,c
  6594   006C9A  A004               	btfss	(___fladd@b+3)^0,0,c
  6595   006C9C  EF52  F036         	goto	u3541
  6596   006CA0  EF54  F036         	goto	u3540
  6597   006CA4                     u3541:
  6598   006CA4  EF72  F036         	goto	l3590
  6599   006CA8                     u3540:
  6600   006CA8  C001  F009         	movff	___fladd@b,??___fladd
  6601   006CAC  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6602   006CB0  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6603   006CB4  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6604   006CB8  340C               	rlcf	(??___fladd+3)^0,w,c
  6605   006CBA  320C               	rrcf	(??___fladd+3)^0,f,c
  6606   006CBC  320B               	rrcf	(??___fladd+2)^0,f,c
  6607   006CBE  320A               	rrcf	(??___fladd+1)^0,f,c
  6608   006CC0  3209               	rrcf	??___fladd^0,f,c
  6609   006CC2  C009  F001         	movff	??___fladd,___fladd@b
  6610   006CC6  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6611   006CCA  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6612   006CCE  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6613   006CD2  280F               	incf	___fladd@bexp^0,w,c
  6614   006CD4  B4D8               	btfsc	status,2,c
  6615   006CD6  EF6F  F036         	goto	u3551
  6616   006CDA  EF71  F036         	goto	u3550
  6617   006CDE                     u3551:
  6618   006CDE  EF72  F036         	goto	l3590
  6619   006CE2                     u3550:
  6620   006CE2  2A0F               	incf	___fladd@bexp^0,f,c
  6621   006CE4                     l3590:
  6622   006CE4  280F               	incf	___fladd@bexp^0,w,c
  6623   006CE6  B4D8               	btfsc	status,2,c
  6624   006CE8  EF78  F036         	goto	u3561
  6625   006CEC  EF7A  F036         	goto	u3560
  6626   006CF0                     u3561:
  6627   006CF0  EF82  F036         	goto	l3594
  6628   006CF4                     u3560:
  6629   006CF4  500F               	movf	___fladd@bexp^0,w,c
  6630   006CF6  A4D8               	btfss	status,2,c
  6631   006CF8  EF80  F036         	goto	u3571
  6632   006CFC  EF82  F036         	goto	u3570
  6633   006D00                     u3571:
  6634   006D00  EF94  F036         	goto	l3598
  6635   006D04                     u3570:
  6636   006D04                     l3594:
  6637   006D04  0E00               	movlw	0
  6638   006D06  6E01               	movwf	___fladd@b^0,c
  6639   006D08  0E00               	movlw	0
  6640   006D0A  6E02               	movwf	(___fladd@b+1)^0,c
  6641   006D0C  0E00               	movlw	0
  6642   006D0E  6E03               	movwf	(___fladd@b+2)^0,c
  6643   006D10  0E00               	movlw	0
  6644   006D12  6E04               	movwf	(___fladd@b+3)^0,c
  6645   006D14  500F               	movf	___fladd@bexp^0,w,c
  6646   006D16  A4D8               	btfss	status,2,c
  6647   006D18  EF90  F036         	goto	u3581
  6648   006D1C  EF92  F036         	goto	u3580
  6649   006D20                     u3581:
  6650   006D20  EF94  F036         	goto	l3598
  6651   006D24                     u3580:
  6652   006D24  0E00               	movlw	0
  6653   006D26  6E0D               	movwf	___fladd@signs^0,c
  6654   006D28                     l3598:
  6655   006D28  A00F               	btfss	___fladd@bexp^0,0,c
  6656   006D2A  EF99  F036         	goto	u3591
  6657   006D2E  EF9B  F036         	goto	u3590
  6658   006D32                     u3591:
  6659   006D32  EF9E  F036         	goto	l3602
  6660   006D36                     u3590:
  6661   006D36  8E03               	bsf	(___fladd@b+2)^0,7,c
  6662   006D38  EF9F  F036         	goto	l3604
  6663   006D3C                     l3602:
  6664   006D3C  9E03               	bcf	(___fladd@b+2)^0,7,c
  6665   006D3E                     l3604:
  6666   006D3E  90D8               	bcf	status,0,c
  6667   006D40  300F               	rrcf	___fladd@bexp^0,w,c
  6668   006D42  6E04               	movwf	(___fladd@b+3)^0,c
  6669   006D44  AE0D               	btfss	___fladd@signs^0,7,c
  6670   006D46  EFA7  F036         	goto	u3601
  6671   006D4A  EFA9  F036         	goto	u3600
  6672   006D4E                     u3601:
  6673   006D4E  EFAA  F036         	goto	l3610
  6674   006D52                     u3600:
  6675   006D52  8E04               	bsf	(___fladd@b+3)^0,7,c
  6676   006D54                     l3610:
  6677   006D54  C001  F001         	movff	___fladd@b,?___fladd
  6678   006D58  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6679   006D5C  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6680   006D60  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6681   006D64                     l1035:
  6682   006D64  0012               	return		;funcret
  6683   006D66                     __end_of___fladd:
  6684                           	callstack 0
  6685                           
  6686 ;; *************** function ___flneg *****************
  6687 ;; Defined at:
  6688 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  f1              4    0[COMRAM] unsigned char 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  4    0[COMRAM] unsigned char 
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6702 ;;      Params:         4       0       0       0       0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6705 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_efgtoa
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text19
  6716   0046A8                     __ptext19:
  6717                           	callstack 0
  6718   0046A8                     ___flneg:
  6719                           	callstack 26
  6720   0046A8  5001               	movf	___flneg@f1^0,w,c
  6721   0046AA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6722   0046AC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6723   0046AE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6724   0046B0  B4D8               	btfsc	status,2,c
  6725   0046B2  EF5D  F023         	goto	u4121
  6726   0046B6  EF5F  F023         	goto	u4120
  6727   0046BA                     u4121:
  6728   0046BA  EF67  F023         	goto	l3950
  6729   0046BE                     u4120:
  6730   0046BE  0E00               	movlw	0
  6731   0046C0  1A01               	xorwf	___flneg@f1^0,f,c
  6732   0046C2  0E00               	movlw	0
  6733   0046C4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6734   0046C6  0E00               	movlw	0
  6735   0046C8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6736   0046CA  0E80               	movlw	128
  6737   0046CC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6738   0046CE                     l3950:
  6739   0046CE  C001  F001         	movff	___flneg@f1,?___flneg
  6740   0046D2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6741   0046D6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6742   0046DA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6743   0046DE  0012               	return		;funcret
  6744   0046E0                     __end_of___flneg:
  6745                           	callstack 0
  6746                           
  6747 ;; *************** function ___flmul *****************
  6748 ;; Defined at:
  6749 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;  b               4    0[COMRAM] unsigned char 
  6752 ;;  a               4    4[COMRAM] unsigned char 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  prod            4   19[COMRAM] struct .
  6755 ;;  grs             4   13[COMRAM] unsigned long 
  6756 ;;  temp            2   23[COMRAM] struct .
  6757 ;;  bexp            1   18[COMRAM] unsigned char 
  6758 ;;  aexp            1   17[COMRAM] unsigned char 
  6759 ;;  sign            1   12[COMRAM] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  4    0[COMRAM] unsigned char 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0, prodl, prodh
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6769 ;;      Params:         8       0       0       0       0       0       0       0       0
  6770 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6771 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6772 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6773 ;;Total ram usage:       25 bytes
  6774 ;; Hardware stack levels used: 1
  6775 ;; This function calls:
  6776 ;;		Nothing
  6777 ;; This function is called by:
  6778 ;;		_efgtoa
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text20
  6783   00647C                     __ptext20:
  6784                           	callstack 0
  6785   00647C                     ___flmul:
  6786                           	callstack 26
  6787   00647C  5004               	movf	(___flmul@b+3)^0,w,c
  6788   00647E  0B80               	andlw	128
  6789   006480  6E0D               	movwf	___flmul@sign^0,c
  6790   006482  5004               	movf	(___flmul@b+3)^0,w,c
  6791   006484  2404               	addwf	(___flmul@b+3)^0,w,c
  6792   006486  6E13               	movwf	___flmul@bexp^0,c
  6793   006488  AE03               	btfss	(___flmul@b+2)^0,7,c
  6794   00648A  EF49  F032         	goto	u3851
  6795   00648E  EF4B  F032         	goto	u3850
  6796   006492                     u3851:
  6797   006492  EF4C  F032         	goto	l3778
  6798   006496                     u3850:
  6799   006496  8013               	bsf	___flmul@bexp^0,0,c
  6800   006498                     l3778:
  6801   006498  5013               	movf	___flmul@bexp^0,w,c
  6802   00649A  B4D8               	btfsc	status,2,c
  6803   00649C  EF52  F032         	goto	u3861
  6804   0064A0  EF54  F032         	goto	u3860
  6805   0064A4                     u3861:
  6806   0064A4  EF67  F032         	goto	l3786
  6807   0064A8                     u3860:
  6808   0064A8  2813               	incf	___flmul@bexp^0,w,c
  6809   0064AA  A4D8               	btfss	status,2,c
  6810   0064AC  EF5A  F032         	goto	u3871
  6811   0064B0  EF5C  F032         	goto	u3870
  6812   0064B4                     u3871:
  6813   0064B4  EF64  F032         	goto	l3784
  6814   0064B8                     u3870:
  6815   0064B8  0E00               	movlw	0
  6816   0064BA  6E01               	movwf	___flmul@b^0,c
  6817   0064BC  0E00               	movlw	0
  6818   0064BE  6E02               	movwf	(___flmul@b+1)^0,c
  6819   0064C0  0E00               	movlw	0
  6820   0064C2  6E03               	movwf	(___flmul@b+2)^0,c
  6821   0064C4  0E00               	movlw	0
  6822   0064C6  6E04               	movwf	(___flmul@b+3)^0,c
  6823   0064C8                     l3784:
  6824   0064C8  8E03               	bsf	(___flmul@b+2)^0,7,c
  6825   0064CA  EF6F  F032         	goto	l3788
  6826   0064CE                     l3786:
  6827   0064CE  0E00               	movlw	0
  6828   0064D0  6E01               	movwf	___flmul@b^0,c
  6829   0064D2  0E00               	movlw	0
  6830   0064D4  6E02               	movwf	(___flmul@b+1)^0,c
  6831   0064D6  0E00               	movlw	0
  6832   0064D8  6E03               	movwf	(___flmul@b+2)^0,c
  6833   0064DA  0E00               	movlw	0
  6834   0064DC  6E04               	movwf	(___flmul@b+3)^0,c
  6835   0064DE                     l3788:
  6836   0064DE  5008               	movf	(___flmul@a+3)^0,w,c
  6837   0064E0  0B80               	andlw	128
  6838   0064E2  1A0D               	xorwf	___flmul@sign^0,f,c
  6839   0064E4  5008               	movf	(___flmul@a+3)^0,w,c
  6840   0064E6  2408               	addwf	(___flmul@a+3)^0,w,c
  6841   0064E8  6E12               	movwf	___flmul@aexp^0,c
  6842   0064EA  AE07               	btfss	(___flmul@a+2)^0,7,c
  6843   0064EC  EF7A  F032         	goto	u3881
  6844   0064F0  EF7C  F032         	goto	u3880
  6845   0064F4                     u3881:
  6846   0064F4  EF7D  F032         	goto	l3796
  6847   0064F8                     u3880:
  6848   0064F8  8012               	bsf	___flmul@aexp^0,0,c
  6849   0064FA                     l3796:
  6850   0064FA  5012               	movf	___flmul@aexp^0,w,c
  6851   0064FC  B4D8               	btfsc	status,2,c
  6852   0064FE  EF83  F032         	goto	u3891
  6853   006502  EF85  F032         	goto	u3890
  6854   006506                     u3891:
  6855   006506  EF98  F032         	goto	l3804
  6856   00650A                     u3890:
  6857   00650A  2812               	incf	___flmul@aexp^0,w,c
  6858   00650C  A4D8               	btfss	status,2,c
  6859   00650E  EF8B  F032         	goto	u3901
  6860   006512  EF8D  F032         	goto	u3900
  6861   006516                     u3901:
  6862   006516  EF95  F032         	goto	l3802
  6863   00651A                     u3900:
  6864   00651A  0E00               	movlw	0
  6865   00651C  6E05               	movwf	___flmul@a^0,c
  6866   00651E  0E00               	movlw	0
  6867   006520  6E06               	movwf	(___flmul@a+1)^0,c
  6868   006522  0E00               	movlw	0
  6869   006524  6E07               	movwf	(___flmul@a+2)^0,c
  6870   006526  0E00               	movlw	0
  6871   006528  6E08               	movwf	(___flmul@a+3)^0,c
  6872   00652A                     l3802:
  6873   00652A  8E07               	bsf	(___flmul@a+2)^0,7,c
  6874   00652C  EFA0  F032         	goto	l1112
  6875   006530                     l3804:
  6876   006530  0E00               	movlw	0
  6877   006532  6E05               	movwf	___flmul@a^0,c
  6878   006534  0E00               	movlw	0
  6879   006536  6E06               	movwf	(___flmul@a+1)^0,c
  6880   006538  0E00               	movlw	0
  6881   00653A  6E07               	movwf	(___flmul@a+2)^0,c
  6882   00653C  0E00               	movlw	0
  6883   00653E  6E08               	movwf	(___flmul@a+3)^0,c
  6884   006540                     l1112:
  6885   006540  5012               	movf	___flmul@aexp^0,w,c
  6886   006542  B4D8               	btfsc	status,2,c
  6887   006544  EFA6  F032         	goto	u3911
  6888   006548  EFA8  F032         	goto	u3910
  6889   00654C                     u3911:
  6890   00654C  EFB0  F032         	goto	l3808
  6891   006550                     u3910:
  6892   006550  5013               	movf	___flmul@bexp^0,w,c
  6893   006552  A4D8               	btfss	status,2,c
  6894   006554  EFAE  F032         	goto	u3921
  6895   006558  EFB0  F032         	goto	u3920
  6896   00655C                     u3921:
  6897   00655C  EFBA  F032         	goto	l3812
  6898   006560                     u3920:
  6899   006560                     l3808:
  6900   006560  0E00               	movlw	0
  6901   006562  6E01               	movwf	?___flmul^0,c
  6902   006564  0E00               	movlw	0
  6903   006566  6E02               	movwf	(?___flmul+1)^0,c
  6904   006568  0E00               	movlw	0
  6905   00656A  6E03               	movwf	(?___flmul+2)^0,c
  6906   00656C  0E00               	movlw	0
  6907   00656E  6E04               	movwf	(?___flmul+3)^0,c
  6908   006570  EF52  F034         	goto	l1116
  6909   006574                     l3812:
  6910   006574  5007               	movf	(___flmul@a+2)^0,w,c
  6911   006576  0201               	mulwf	___flmul@b^0,c
  6912   006578  CFF3 F018          	movff	prodl,___flmul@temp
  6913   00657C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6914   006580  5018               	movf	___flmul@temp^0,w,c
  6915   006582  6E0E               	movwf	___flmul@grs^0,c
  6916   006584  6A0F               	clrf	(___flmul@grs+1)^0,c
  6917   006586  6A10               	clrf	(___flmul@grs+2)^0,c
  6918   006588  6A11               	clrf	(___flmul@grs+3)^0,c
  6919   00658A  5019               	movf	(___flmul@temp+1)^0,w,c
  6920   00658C  6E14               	movwf	___flmul@prod^0,c
  6921   00658E  6A15               	clrf	(___flmul@prod+1)^0,c
  6922   006590  6A16               	clrf	(___flmul@prod+2)^0,c
  6923   006592  6A17               	clrf	(___flmul@prod+3)^0,c
  6924   006594  5006               	movf	(___flmul@a+1)^0,w,c
  6925   006596  0202               	mulwf	(___flmul@b+1)^0,c
  6926   006598  CFF3 F018          	movff	prodl,___flmul@temp
  6927   00659C  CFF4 F019          	movff	prodh,___flmul@temp+1
  6928   0065A0  5018               	movf	___flmul@temp^0,w,c
  6929   0065A2  260E               	addwf	___flmul@grs^0,f,c
  6930   0065A4  0E00               	movlw	0
  6931   0065A6  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6932   0065A8  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6933   0065AA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6934   0065AC  5019               	movf	(___flmul@temp+1)^0,w,c
  6935   0065AE  2614               	addwf	___flmul@prod^0,f,c
  6936   0065B0  0E00               	movlw	0
  6937   0065B2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6938   0065B4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6939   0065B6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6940   0065B8  5005               	movf	___flmul@a^0,w,c
  6941   0065BA  0203               	mulwf	(___flmul@b+2)^0,c
  6942   0065BC  CFF3 F018          	movff	prodl,___flmul@temp
  6943   0065C0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6944   0065C4  5018               	movf	___flmul@temp^0,w,c
  6945   0065C6  260E               	addwf	___flmul@grs^0,f,c
  6946   0065C8  0E00               	movlw	0
  6947   0065CA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6948   0065CC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6949   0065CE  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6950   0065D0  5019               	movf	(___flmul@temp+1)^0,w,c
  6951   0065D2  2614               	addwf	___flmul@prod^0,f,c
  6952   0065D4  0E00               	movlw	0
  6953   0065D6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6954   0065D8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6955   0065DA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6956   0065DC  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6957   0065E0  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6958   0065E4  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6959   0065E8  6A0E               	clrf	___flmul@grs^0,c
  6960   0065EA  5005               	movf	___flmul@a^0,w,c
  6961   0065EC  0202               	mulwf	(___flmul@b+1)^0,c
  6962   0065EE  CFF3 F018          	movff	prodl,___flmul@temp
  6963   0065F2  CFF4 F019          	movff	prodh,___flmul@temp+1
  6964   0065F6  5018               	movf	___flmul@temp^0,w,c
  6965   0065F8  260E               	addwf	___flmul@grs^0,f,c
  6966   0065FA  5019               	movf	(___flmul@temp+1)^0,w,c
  6967   0065FC  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6968   0065FE  0E00               	movlw	0
  6969   006600  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6970   006602  0E00               	movlw	0
  6971   006604  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6972   006606  5006               	movf	(___flmul@a+1)^0,w,c
  6973   006608  0201               	mulwf	___flmul@b^0,c
  6974   00660A  CFF3 F018          	movff	prodl,___flmul@temp
  6975   00660E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6976   006612  5018               	movf	___flmul@temp^0,w,c
  6977   006614  260E               	addwf	___flmul@grs^0,f,c
  6978   006616  5019               	movf	(___flmul@temp+1)^0,w,c
  6979   006618  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6980   00661A  0E00               	movlw	0
  6981   00661C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6982   00661E  0E00               	movlw	0
  6983   006620  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6984   006622  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6985   006626  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6986   00662A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6987   00662E  6A0E               	clrf	___flmul@grs^0,c
  6988   006630  5005               	movf	___flmul@a^0,w,c
  6989   006632  0201               	mulwf	___flmul@b^0,c
  6990   006634  CFF3 F018          	movff	prodl,___flmul@temp
  6991   006638  CFF4 F019          	movff	prodh,___flmul@temp+1
  6992   00663C  5018               	movf	___flmul@temp^0,w,c
  6993   00663E  260E               	addwf	___flmul@grs^0,f,c
  6994   006640  5019               	movf	(___flmul@temp+1)^0,w,c
  6995   006642  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6996   006644  0E00               	movlw	0
  6997   006646  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6998   006648  0E00               	movlw	0
  6999   00664A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7000   00664C  5007               	movf	(___flmul@a+2)^0,w,c
  7001   00664E  0202               	mulwf	(___flmul@b+1)^0,c
  7002   006650  CFF3 F018          	movff	prodl,___flmul@temp
  7003   006654  CFF4 F019          	movff	prodh,___flmul@temp+1
  7004   006658  5018               	movf	___flmul@temp^0,w,c
  7005   00665A  2614               	addwf	___flmul@prod^0,f,c
  7006   00665C  5019               	movf	(___flmul@temp+1)^0,w,c
  7007   00665E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7008   006660  0E00               	movlw	0
  7009   006662  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7010   006664  0E00               	movlw	0
  7011   006666  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7012   006668  5006               	movf	(___flmul@a+1)^0,w,c
  7013   00666A  0203               	mulwf	(___flmul@b+2)^0,c
  7014   00666C  CFF3 F018          	movff	prodl,___flmul@temp
  7015   006670  CFF4 F019          	movff	prodh,___flmul@temp+1
  7016   006674  5018               	movf	___flmul@temp^0,w,c
  7017   006676  2614               	addwf	___flmul@prod^0,f,c
  7018   006678  5019               	movf	(___flmul@temp+1)^0,w,c
  7019   00667A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7020   00667C  0E00               	movlw	0
  7021   00667E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7022   006680  0E00               	movlw	0
  7023   006682  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7024   006684  5007               	movf	(___flmul@a+2)^0,w,c
  7025   006686  0203               	mulwf	(___flmul@b+2)^0,c
  7026   006688  CFF3 F018          	movff	prodl,___flmul@temp
  7027   00668C  CFF4 F019          	movff	prodh,___flmul@temp+1
  7028   006690  5018               	movf	___flmul@temp^0,w,c
  7029   006692  6E09               	movwf	??___flmul^0,c
  7030   006694  5019               	movf	(___flmul@temp+1)^0,w,c
  7031   006696  6E0A               	movwf	(??___flmul+1)^0,c
  7032   006698  6A0B               	clrf	(??___flmul+2)^0,c
  7033   00669A  6A0C               	clrf	(??___flmul+3)^0,c
  7034   00669C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  7035   0066A0  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  7036   0066A4  C009  F00A         	movff	??___flmul,??___flmul+1
  7037   0066A8  6A09               	clrf	??___flmul^0,c
  7038   0066AA  5009               	movf	??___flmul^0,w,c
  7039   0066AC  2614               	addwf	___flmul@prod^0,f,c
  7040   0066AE  500A               	movf	(??___flmul+1)^0,w,c
  7041   0066B0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7042   0066B2  500B               	movf	(??___flmul+2)^0,w,c
  7043   0066B4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7044   0066B6  500C               	movf	(??___flmul+3)^0,w,c
  7045   0066B8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7046   0066BA  C00E  F009         	movff	___flmul@grs,??___flmul
  7047   0066BE  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  7048   0066C2  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  7049   0066C6  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  7050   0066CA  0E19               	movlw	25
  7051   0066CC  EF6D  F033         	goto	u3930
  7052   0066D0                     u3935:
  7053   0066D0  90D8               	bcf	status,0,c
  7054   0066D2  320C               	rrcf	(??___flmul+3)^0,f,c
  7055   0066D4  320B               	rrcf	(??___flmul+2)^0,f,c
  7056   0066D6  320A               	rrcf	(??___flmul+1)^0,f,c
  7057   0066D8  3209               	rrcf	??___flmul^0,f,c
  7058   0066DA                     u3930:
  7059   0066DA  2EE8               	decfsz	wreg,f,c
  7060   0066DC  EF68  F033         	goto	u3935
  7061   0066E0  5009               	movf	??___flmul^0,w,c
  7062   0066E2  2614               	addwf	___flmul@prod^0,f,c
  7063   0066E4  500A               	movf	(??___flmul+1)^0,w,c
  7064   0066E6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7065   0066E8  500B               	movf	(??___flmul+2)^0,w,c
  7066   0066EA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7067   0066EC  500C               	movf	(??___flmul+3)^0,w,c
  7068   0066EE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7069   0066F0  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7070   0066F4  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7071   0066F8  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7072   0066FC  6A0E               	clrf	___flmul@grs^0,c
  7073   0066FE  5012               	movf	___flmul@aexp^0,w,c
  7074   006700  C013  F009         	movff	___flmul@bexp,??___flmul
  7075   006704  6A0A               	clrf	(??___flmul+1)^0,c
  7076   006706  2609               	addwf	??___flmul^0,f,c
  7077   006708  0E00               	movlw	0
  7078   00670A  220A               	addwfc	(??___flmul+1)^0,f,c
  7079   00670C  0E82               	movlw	130
  7080   00670E  2409               	addwf	??___flmul^0,w,c
  7081   006710  6E18               	movwf	___flmul@temp^0,c
  7082   006712  0EFF               	movlw	255
  7083   006714  200A               	addwfc	(??___flmul+1)^0,w,c
  7084   006716  6E19               	movwf	(___flmul@temp+1)^0,c
  7085   006718  EFA3  F033         	goto	l3860
  7086   00671C                     l3854:
  7087   00671C  90D8               	bcf	status,0,c
  7088   00671E  3614               	rlcf	___flmul@prod^0,f,c
  7089   006720  3615               	rlcf	(___flmul@prod+1)^0,f,c
  7090   006722  3616               	rlcf	(___flmul@prod+2)^0,f,c
  7091   006724  3617               	rlcf	(___flmul@prod+3)^0,f,c
  7092   006726  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7093   006728  EF98  F033         	goto	u3941
  7094   00672C  EF9A  F033         	goto	u3940
  7095   006730                     u3941:
  7096   006730  EF9B  F033         	goto	l1119
  7097   006734                     u3940:
  7098   006734  8014               	bsf	___flmul@prod^0,0,c
  7099   006736                     l1119:
  7100   006736  90D8               	bcf	status,0,c
  7101   006738  360E               	rlcf	___flmul@grs^0,f,c
  7102   00673A  360F               	rlcf	(___flmul@grs+1)^0,f,c
  7103   00673C  3610               	rlcf	(___flmul@grs+2)^0,f,c
  7104   00673E  3611               	rlcf	(___flmul@grs+3)^0,f,c
  7105   006740  0618               	decf	___flmul@temp^0,f,c
  7106   006742  A0D8               	btfss	status,0,c
  7107   006744  0619               	decf	(___flmul@temp+1)^0,f,c
  7108   006746                     l3860:
  7109   006746  AE16               	btfss	(___flmul@prod+2)^0,7,c
  7110   006748  EFA8  F033         	goto	u3951
  7111   00674C  EFAA  F033         	goto	u3950
  7112   006750                     u3951:
  7113   006750  EF8E  F033         	goto	l3854
  7114   006754                     u3950:
  7115   006754  0E00               	movlw	0
  7116   006756  6E12               	movwf	___flmul@aexp^0,c
  7117   006758  AE11               	btfss	(___flmul@grs+3)^0,7,c
  7118   00675A  EFB1  F033         	goto	u3961
  7119   00675E  EFB3  F033         	goto	u3960
  7120   006762                     u3961:
  7121   006762  EFD7  F033         	goto	l1121
  7122   006766                     u3960:
  7123   006766  0EFF               	movlw	255
  7124   006768  140E               	andwf	___flmul@grs^0,w,c
  7125   00676A  6E09               	movwf	??___flmul^0,c
  7126   00676C  0EFF               	movlw	255
  7127   00676E  140F               	andwf	(___flmul@grs+1)^0,w,c
  7128   006770  6E0A               	movwf	(??___flmul+1)^0,c
  7129   006772  0EFF               	movlw	255
  7130   006774  1410               	andwf	(___flmul@grs+2)^0,w,c
  7131   006776  6E0B               	movwf	(??___flmul+2)^0,c
  7132   006778  0E7F               	movlw	127
  7133   00677A  1411               	andwf	(___flmul@grs+3)^0,w,c
  7134   00677C  6E0C               	movwf	(??___flmul+3)^0,c
  7135   00677E  5009               	movf	??___flmul^0,w,c
  7136   006780  100A               	iorwf	(??___flmul+1)^0,w,c
  7137   006782  100B               	iorwf	(??___flmul+2)^0,w,c
  7138   006784  100C               	iorwf	(??___flmul+3)^0,w,c
  7139   006786  B4D8               	btfsc	status,2,c
  7140   006788  EFC8  F033         	goto	u3971
  7141   00678C  EFCA  F033         	goto	u3970
  7142   006790                     u3971:
  7143   006790  EFCE  F033         	goto	l1122
  7144   006794                     u3970:
  7145   006794                     l3868:
  7146   006794  0E01               	movlw	1
  7147   006796  6E12               	movwf	___flmul@aexp^0,c
  7148   006798  EFD7  F033         	goto	l1121
  7149   00679C                     l1122:
  7150   00679C  A014               	btfss	___flmul@prod^0,0,c
  7151   00679E  EFD3  F033         	goto	u3981
  7152   0067A2  EFD5  F033         	goto	u3980
  7153   0067A6                     u3981:
  7154   0067A6  EFD7  F033         	goto	l1121
  7155   0067AA                     u3980:
  7156   0067AA  EFCA  F033         	goto	l3868
  7157   0067AE                     l1121:
  7158   0067AE  5012               	movf	___flmul@aexp^0,w,c
  7159   0067B0  B4D8               	btfsc	status,2,c
  7160   0067B2  EFDD  F033         	goto	u3991
  7161   0067B6  EFDF  F033         	goto	u3990
  7162   0067BA                     u3991:
  7163   0067BA  EF03  F034         	goto	l3880
  7164   0067BE                     u3990:
  7165   0067BE  0E01               	movlw	1
  7166   0067C0  2614               	addwf	___flmul@prod^0,f,c
  7167   0067C2  0E00               	movlw	0
  7168   0067C4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7169   0067C6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7170   0067C8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7171   0067CA  A017               	btfss	(___flmul@prod+3)^0,0,c
  7172   0067CC  EFEA  F033         	goto	u4001
  7173   0067D0  EFEC  F033         	goto	u4000
  7174   0067D4                     u4001:
  7175   0067D4  EF03  F034         	goto	l3880
  7176   0067D8                     u4000:
  7177   0067D8  C014  F009         	movff	___flmul@prod,??___flmul
  7178   0067DC  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  7179   0067E0  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  7180   0067E4  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  7181   0067E8  340C               	rlcf	(??___flmul+3)^0,w,c
  7182   0067EA  320C               	rrcf	(??___flmul+3)^0,f,c
  7183   0067EC  320B               	rrcf	(??___flmul+2)^0,f,c
  7184   0067EE  320A               	rrcf	(??___flmul+1)^0,f,c
  7185   0067F0  3209               	rrcf	??___flmul^0,f,c
  7186   0067F2  C009  F014         	movff	??___flmul,___flmul@prod
  7187   0067F6  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  7188   0067FA  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  7189   0067FE  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  7190   006802  4A18               	infsnz	___flmul@temp^0,f,c
  7191   006804  2A19               	incf	(___flmul@temp+1)^0,f,c
  7192   006806                     l3880:
  7193   006806  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7194   006808  EF0E  F034         	goto	u4011
  7195   00680C  5019               	movf	(___flmul@temp+1)^0,w,c
  7196   00680E  E108               	bnz	u4010
  7197   006810  2818               	incf	___flmul@temp^0,w,c
  7198   006812  A0D8               	btfss	status,0,c
  7199   006814  EF0E  F034         	goto	u4011
  7200   006818  EF10  F034         	goto	u4010
  7201   00681C                     u4011:
  7202   00681C  EF1A  F034         	goto	l3884
  7203   006820                     u4010:
  7204   006820  0E00               	movlw	0
  7205   006822  6E14               	movwf	___flmul@prod^0,c
  7206   006824  0E00               	movlw	0
  7207   006826  6E15               	movwf	(___flmul@prod+1)^0,c
  7208   006828  0E80               	movlw	128
  7209   00682A  6E16               	movwf	(___flmul@prod+2)^0,c
  7210   00682C  0E7F               	movlw	127
  7211   00682E  6E17               	movwf	(___flmul@prod+3)^0,c
  7212   006830  EF48  F034         	goto	l3896
  7213   006834                     l3884:
  7214   006834  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  7215   006836  EF27  F034         	goto	u4020
  7216   00683A  5019               	movf	(___flmul@temp+1)^0,w,c
  7217   00683C  E106               	bnz	u4021
  7218   00683E  0418               	decf	___flmul@temp^0,w,c
  7219   006840  B0D8               	btfsc	status,0,c
  7220   006842  EF25  F034         	goto	u4021
  7221   006846  EF27  F034         	goto	u4020
  7222   00684A                     u4021:
  7223   00684A  EF33  F034         	goto	l1129
  7224   00684E                     u4020:
  7225   00684E  0E00               	movlw	0
  7226   006850  6E14               	movwf	___flmul@prod^0,c
  7227   006852  0E00               	movlw	0
  7228   006854  6E15               	movwf	(___flmul@prod+1)^0,c
  7229   006856  0E00               	movlw	0
  7230   006858  6E16               	movwf	(___flmul@prod+2)^0,c
  7231   00685A  0E00               	movlw	0
  7232   00685C  6E17               	movwf	(___flmul@prod+3)^0,c
  7233   00685E  0E00               	movlw	0
  7234   006860  6E0D               	movwf	___flmul@sign^0,c
  7235   006862  EF48  F034         	goto	l3896
  7236   006866                     l1129:
  7237   006866  C018  F013         	movff	___flmul@temp,___flmul@bexp
  7238   00686A  0EFF               	movlw	255
  7239   00686C  1614               	andwf	___flmul@prod^0,f,c
  7240   00686E  0EFF               	movlw	255
  7241   006870  1615               	andwf	(___flmul@prod+1)^0,f,c
  7242   006872  0E7F               	movlw	127
  7243   006874  1616               	andwf	(___flmul@prod+2)^0,f,c
  7244   006876  0E00               	movlw	0
  7245   006878  1617               	andwf	(___flmul@prod+3)^0,f,c
  7246   00687A  A013               	btfss	___flmul@bexp^0,0,c
  7247   00687C  EF42  F034         	goto	u4031
  7248   006880  EF44  F034         	goto	u4030
  7249   006884                     u4031:
  7250   006884  EF45  F034         	goto	l3894
  7251   006888                     u4030:
  7252   006888  8E16               	bsf	(___flmul@prod+2)^0,7,c
  7253   00688A                     l3894:
  7254   00688A  90D8               	bcf	status,0,c
  7255   00688C  3013               	rrcf	___flmul@bexp^0,w,c
  7256   00688E  6E17               	movwf	(___flmul@prod+3)^0,c
  7257   006890                     l3896:
  7258   006890  500D               	movf	___flmul@sign^0,w,c
  7259   006892  1217               	iorwf	(___flmul@prod+3)^0,f,c
  7260   006894  C014  F001         	movff	___flmul@prod,?___flmul
  7261   006898  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  7262   00689C  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  7263   0068A0  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  7264   0068A4                     l1116:
  7265   0068A4  0012               	return		;funcret
  7266   0068A6                     __end_of___flmul:
  7267                           	callstack 0
  7268                           
  7269 ;; *************** function ___flge *****************
  7270 ;; Defined at:
  7271 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  ff1             4   25[COMRAM] unsigned char 
  7274 ;;  ff2             4   29[COMRAM] unsigned char 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;		None               void
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7286 ;;      Params:         8       0       0       0       0       0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7288 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7289 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7290 ;;Total ram usage:       12 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_efgtoa
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text21
  7300   005008                     __ptext21:
  7301                           	callstack 0
  7302   005008                     ___flge:
  7303                           	callstack 26
  7304   005008  0E00               	movlw	0
  7305   00500A  141A               	andwf	___flge@ff1^0,w,c
  7306   00500C  6E22               	movwf	??___flge^0,c
  7307   00500E  0E00               	movlw	0
  7308   005010  141B               	andwf	(___flge@ff1+1)^0,w,c
  7309   005012  6E23               	movwf	(??___flge+1)^0,c
  7310   005014  0E80               	movlw	128
  7311   005016  141C               	andwf	(___flge@ff1+2)^0,w,c
  7312   005018  6E24               	movwf	(??___flge+2)^0,c
  7313   00501A  0E7F               	movlw	127
  7314   00501C  141D               	andwf	(___flge@ff1+3)^0,w,c
  7315   00501E  6E25               	movwf	(??___flge+3)^0,c
  7316   005020  5022               	movf	??___flge^0,w,c
  7317   005022  1023               	iorwf	(??___flge+1)^0,w,c
  7318   005024  1024               	iorwf	(??___flge+2)^0,w,c
  7319   005026  1025               	iorwf	(??___flge+3)^0,w,c
  7320   005028  A4D8               	btfss	status,2,c
  7321   00502A  EF19  F028         	goto	u4071
  7322   00502E  EF1B  F028         	goto	u4070
  7323   005032                     u4071:
  7324   005032  EF23  F028         	goto	l3928
  7325   005036                     u4070:
  7326   005036  0E00               	movlw	0
  7327   005038  6E1A               	movwf	___flge@ff1^0,c
  7328   00503A  0E00               	movlw	0
  7329   00503C  6E1B               	movwf	(___flge@ff1+1)^0,c
  7330   00503E  0E00               	movlw	0
  7331   005040  6E1C               	movwf	(___flge@ff1+2)^0,c
  7332   005042  0E00               	movlw	0
  7333   005044  6E1D               	movwf	(___flge@ff1+3)^0,c
  7334   005046                     l3928:
  7335   005046  0E00               	movlw	0
  7336   005048  141E               	andwf	___flge@ff2^0,w,c
  7337   00504A  6E22               	movwf	??___flge^0,c
  7338   00504C  0E00               	movlw	0
  7339   00504E  141F               	andwf	(___flge@ff2+1)^0,w,c
  7340   005050  6E23               	movwf	(??___flge+1)^0,c
  7341   005052  0E80               	movlw	128
  7342   005054  1420               	andwf	(___flge@ff2+2)^0,w,c
  7343   005056  6E24               	movwf	(??___flge+2)^0,c
  7344   005058  0E7F               	movlw	127
  7345   00505A  1421               	andwf	(___flge@ff2+3)^0,w,c
  7346   00505C  6E25               	movwf	(??___flge+3)^0,c
  7347   00505E  5022               	movf	??___flge^0,w,c
  7348   005060  1023               	iorwf	(??___flge+1)^0,w,c
  7349   005062  1024               	iorwf	(??___flge+2)^0,w,c
  7350   005064  1025               	iorwf	(??___flge+3)^0,w,c
  7351   005066  A4D8               	btfss	status,2,c
  7352   005068  EF38  F028         	goto	u4081
  7353   00506C  EF3A  F028         	goto	u4080
  7354   005070                     u4081:
  7355   005070  EF42  F028         	goto	l3932
  7356   005074                     u4080:
  7357   005074  0E00               	movlw	0
  7358   005076  6E1E               	movwf	___flge@ff2^0,c
  7359   005078  0E00               	movlw	0
  7360   00507A  6E1F               	movwf	(___flge@ff2+1)^0,c
  7361   00507C  0E00               	movlw	0
  7362   00507E  6E20               	movwf	(___flge@ff2+2)^0,c
  7363   005080  0E00               	movlw	0
  7364   005082  6E21               	movwf	(___flge@ff2+3)^0,c
  7365   005084                     l3932:
  7366   005084  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  7367   005086  EF47  F028         	goto	u4091
  7368   00508A  EF49  F028         	goto	u4090
  7369   00508E                     u4091:
  7370   00508E  EF52  F028         	goto	l3936
  7371   005092                     u4090:
  7372   005092  6C1A               	negf	___flge@ff1^0,c
  7373   005094  1E1B               	comf	(___flge@ff1+1)^0,f,c
  7374   005096  B0D8               	btfsc	status,0,c
  7375   005098  2A1B               	incf	(___flge@ff1+1)^0,f,c
  7376   00509A  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7377   00509C  B0D8               	btfsc	status,0,c
  7378   00509E  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7379   0050A0  0E80               	movlw	128
  7380   0050A2  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7381   0050A4                     l3936:
  7382   0050A4  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7383   0050A6  EF57  F028         	goto	u4101
  7384   0050AA  EF59  F028         	goto	u4100
  7385   0050AE                     u4101:
  7386   0050AE  EF62  F028         	goto	l763
  7387   0050B2                     u4100:
  7388   0050B2  6C1E               	negf	___flge@ff2^0,c
  7389   0050B4  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7390   0050B6  B0D8               	btfsc	status,0,c
  7391   0050B8  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7392   0050BA  1E20               	comf	(___flge@ff2+2)^0,f,c
  7393   0050BC  B0D8               	btfsc	status,0,c
  7394   0050BE  2A20               	incf	(___flge@ff2+2)^0,f,c
  7395   0050C0  0E80               	movlw	128
  7396   0050C2  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7397   0050C4                     l763:
  7398   0050C4  0E00               	movlw	0
  7399   0050C6  1A1A               	xorwf	___flge@ff1^0,f,c
  7400   0050C8  0E00               	movlw	0
  7401   0050CA  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7402   0050CC  0E00               	movlw	0
  7403   0050CE  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7404   0050D0  0E80               	movlw	128
  7405   0050D2  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7406   0050D4  0E00               	movlw	0
  7407   0050D6  1A1E               	xorwf	___flge@ff2^0,f,c
  7408   0050D8  0E00               	movlw	0
  7409   0050DA  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7410   0050DC  0E00               	movlw	0
  7411   0050DE  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7412   0050E0  0E80               	movlw	128
  7413   0050E2  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7414   0050E4  501E               	movf	___flge@ff2^0,w,c
  7415   0050E6  5C1A               	subwf	___flge@ff1^0,w,c
  7416   0050E8  501F               	movf	(___flge@ff2+1)^0,w,c
  7417   0050EA  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7418   0050EC  5020               	movf	(___flge@ff2+2)^0,w,c
  7419   0050EE  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7420   0050F0  5021               	movf	(___flge@ff2+3)^0,w,c
  7421   0050F2  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7422   0050F4  B0D8               	btfsc	status,0,c
  7423   0050F6  EF7F  F028         	goto	u4111
  7424   0050FA  EF81  F028         	goto	u4110
  7425   0050FE                     u4111:
  7426   0050FE  EF84  F028         	goto	l3942
  7427   005102                     u4110:
  7428   005102  90D8               	bcf	status,0,c
  7429   005104  EF85  F028         	goto	l768
  7430   005108                     l3942:
  7431   005108  80D8               	bsf	status,0,c
  7432   00510A                     l768:
  7433   00510A  0012               	return		;funcret
  7434   00510C                     __end_of___flge:
  7435                           	callstack 0
  7436                           
  7437 ;; *************** function ___fleq *****************
  7438 ;; Defined at:
  7439 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  ff1             4    0[COMRAM] unsigned char 
  7442 ;;  ff2             4    4[COMRAM] unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;		None               void
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7454 ;;      Params:         8       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7457 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:       12 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; This function calls:
  7461 ;;		Nothing
  7462 ;; This function is called by:
  7463 ;;		_efgtoa
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text22
  7468   004AAE                     __ptext22:
  7469                           	callstack 0
  7470   004AAE                     ___fleq:
  7471                           	callstack 26
  7472   004AAE  0E00               	movlw	0
  7473   004AB0  1401               	andwf	___fleq@ff1^0,w,c
  7474   004AB2  6E09               	movwf	??___fleq^0,c
  7475   004AB4  0E00               	movlw	0
  7476   004AB6  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7477   004AB8  6E0A               	movwf	(??___fleq+1)^0,c
  7478   004ABA  0E80               	movlw	128
  7479   004ABC  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7480   004ABE  6E0B               	movwf	(??___fleq+2)^0,c
  7481   004AC0  0E7F               	movlw	127
  7482   004AC2  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7483   004AC4  6E0C               	movwf	(??___fleq+3)^0,c
  7484   004AC6  5009               	movf	??___fleq^0,w,c
  7485   004AC8  100A               	iorwf	(??___fleq+1)^0,w,c
  7486   004ACA  100B               	iorwf	(??___fleq+2)^0,w,c
  7487   004ACC  100C               	iorwf	(??___fleq+3)^0,w,c
  7488   004ACE  A4D8               	btfss	status,2,c
  7489   004AD0  EF6C  F025         	goto	u4041
  7490   004AD4  EF6E  F025         	goto	u4040
  7491   004AD8                     u4041:
  7492   004AD8  EF76  F025         	goto	l3912
  7493   004ADC                     u4040:
  7494   004ADC  0E00               	movlw	0
  7495   004ADE  6E01               	movwf	___fleq@ff1^0,c
  7496   004AE0  0E00               	movlw	0
  7497   004AE2  6E02               	movwf	(___fleq@ff1+1)^0,c
  7498   004AE4  0E00               	movlw	0
  7499   004AE6  6E03               	movwf	(___fleq@ff1+2)^0,c
  7500   004AE8  0E00               	movlw	0
  7501   004AEA  6E04               	movwf	(___fleq@ff1+3)^0,c
  7502   004AEC                     l3912:
  7503   004AEC  0E00               	movlw	0
  7504   004AEE  1405               	andwf	___fleq@ff2^0,w,c
  7505   004AF0  6E09               	movwf	??___fleq^0,c
  7506   004AF2  0E00               	movlw	0
  7507   004AF4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7508   004AF6  6E0A               	movwf	(??___fleq+1)^0,c
  7509   004AF8  0E80               	movlw	128
  7510   004AFA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7511   004AFC  6E0B               	movwf	(??___fleq+2)^0,c
  7512   004AFE  0E7F               	movlw	127
  7513   004B00  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7514   004B02  6E0C               	movwf	(??___fleq+3)^0,c
  7515   004B04  5009               	movf	??___fleq^0,w,c
  7516   004B06  100A               	iorwf	(??___fleq+1)^0,w,c
  7517   004B08  100B               	iorwf	(??___fleq+2)^0,w,c
  7518   004B0A  100C               	iorwf	(??___fleq+3)^0,w,c
  7519   004B0C  A4D8               	btfss	status,2,c
  7520   004B0E  EF8B  F025         	goto	u4051
  7521   004B12  EF8D  F025         	goto	u4050
  7522   004B16                     u4051:
  7523   004B16  EF95  F025         	goto	l3916
  7524   004B1A                     u4050:
  7525   004B1A  0E00               	movlw	0
  7526   004B1C  6E05               	movwf	___fleq@ff2^0,c
  7527   004B1E  0E00               	movlw	0
  7528   004B20  6E06               	movwf	(___fleq@ff2+1)^0,c
  7529   004B22  0E00               	movlw	0
  7530   004B24  6E07               	movwf	(___fleq@ff2+2)^0,c
  7531   004B26  0E00               	movlw	0
  7532   004B28  6E08               	movwf	(___fleq@ff2+3)^0,c
  7533   004B2A                     l3916:
  7534   004B2A  5005               	movf	___fleq@ff2^0,w,c
  7535   004B2C  1801               	xorwf	___fleq@ff1^0,w,c
  7536   004B2E  E10F               	bnz	u4060
  7537   004B30  5006               	movf	(___fleq@ff2+1)^0,w,c
  7538   004B32  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7539   004B34  E10C               	bnz	u4060
  7540   004B36  5007               	movf	(___fleq@ff2+2)^0,w,c
  7541   004B38  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7542   004B3A  E109               	bnz	u4060
  7543   004B3C  5008               	movf	(___fleq@ff2+3)^0,w,c
  7544   004B3E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7545   004B40  B4D8               	btfsc	status,2,c
  7546   004B42  EFA5  F025         	goto	u4061
  7547   004B46  EFA7  F025         	goto	u4060
  7548   004B4A                     u4061:
  7549   004B4A  EFAA  F025         	goto	l3920
  7550   004B4E                     u4060:
  7551   004B4E  90D8               	bcf	status,0,c
  7552   004B50  EFAB  F025         	goto	l757
  7553   004B54                     l3920:
  7554   004B54  80D8               	bsf	status,0,c
  7555   004B56                     l757:
  7556   004B56  0012               	return		;funcret
  7557   004B58                     __end_of___fleq:
  7558                           	callstack 0
  7559                           
  7560 ;; *************** function ___fldiv *****************
  7561 ;; Defined at:
  7562 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  b               4    0[COMRAM] unsigned char 
  7565 ;;  a               4    4[COMRAM] unsigned char 
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  grs             4   19[COMRAM] unsigned long 
  7568 ;;  rem             4   12[COMRAM] unsigned long 
  7569 ;;  new_exp         2   17[COMRAM] short 
  7570 ;;  aexp            1   24[COMRAM] unsigned char 
  7571 ;;  bexp            1   23[COMRAM] unsigned char 
  7572 ;;  sign            1   16[COMRAM] unsigned char 
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  4    0[COMRAM] unsigned char 
  7575 ;; Registers used:
  7576 ;;		wreg, status,2, status,0
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7582 ;;      Params:         8       0       0       0       0       0       0       0       0
  7583 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7584 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7585 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7586 ;;Total ram usage:       25 bytes
  7587 ;; Hardware stack levels used: 1
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_efgtoa
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text23
  7596   0060E2                     __ptext23:
  7597                           	callstack 0
  7598   0060E2                     ___fldiv:
  7599                           	callstack 26
  7600   0060E2  5004               	movf	(___fldiv@b+3)^0,w,c
  7601   0060E4  0B80               	andlw	128
  7602   0060E6  6E11               	movwf	___fldiv@sign^0,c
  7603   0060E8  5004               	movf	(___fldiv@b+3)^0,w,c
  7604   0060EA  2404               	addwf	(___fldiv@b+3)^0,w,c
  7605   0060EC  6E18               	movwf	___fldiv@bexp^0,c
  7606   0060EE  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7607   0060F0  EF7C  F030         	goto	u3621
  7608   0060F4  EF7E  F030         	goto	u3620
  7609   0060F8                     u3621:
  7610   0060F8  EF7F  F030         	goto	l3640
  7611   0060FC                     u3620:
  7612   0060FC  8018               	bsf	___fldiv@bexp^0,0,c
  7613   0060FE                     l3640:
  7614   0060FE  5018               	movf	___fldiv@bexp^0,w,c
  7615   006100  B4D8               	btfsc	status,2,c
  7616   006102  EF85  F030         	goto	u3631
  7617   006106  EF87  F030         	goto	u3630
  7618   00610A                     u3631:
  7619   00610A  EF9C  F030         	goto	l3650
  7620   00610E                     u3630:
  7621   00610E  2818               	incf	___fldiv@bexp^0,w,c
  7622   006110  A4D8               	btfss	status,2,c
  7623   006112  EF8D  F030         	goto	u3641
  7624   006116  EF8F  F030         	goto	u3640
  7625   00611A                     u3641:
  7626   00611A  EF97  F030         	goto	l3646
  7627   00611E                     u3640:
  7628   00611E  0E00               	movlw	0
  7629   006120  6E01               	movwf	___fldiv@b^0,c
  7630   006122  0E00               	movlw	0
  7631   006124  6E02               	movwf	(___fldiv@b+1)^0,c
  7632   006126  0E00               	movlw	0
  7633   006128  6E03               	movwf	(___fldiv@b+2)^0,c
  7634   00612A  0E00               	movlw	0
  7635   00612C  6E04               	movwf	(___fldiv@b+3)^0,c
  7636   00612E                     l3646:
  7637   00612E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7638   006130  0E00               	movlw	0
  7639   006132  6E04               	movwf	(___fldiv@b+3)^0,c
  7640   006134  EFA4  F030         	goto	l3652
  7641   006138                     l3650:
  7642   006138  0E00               	movlw	0
  7643   00613A  6E01               	movwf	___fldiv@b^0,c
  7644   00613C  0E00               	movlw	0
  7645   00613E  6E02               	movwf	(___fldiv@b+1)^0,c
  7646   006140  0E00               	movlw	0
  7647   006142  6E03               	movwf	(___fldiv@b+2)^0,c
  7648   006144  0E00               	movlw	0
  7649   006146  6E04               	movwf	(___fldiv@b+3)^0,c
  7650   006148                     l3652:
  7651   006148  5008               	movf	(___fldiv@a+3)^0,w,c
  7652   00614A  0B80               	andlw	128
  7653   00614C  1A11               	xorwf	___fldiv@sign^0,f,c
  7654   00614E  5008               	movf	(___fldiv@a+3)^0,w,c
  7655   006150  2408               	addwf	(___fldiv@a+3)^0,w,c
  7656   006152  6E19               	movwf	___fldiv@aexp^0,c
  7657   006154  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7658   006156  EFAF  F030         	goto	u3651
  7659   00615A  EFB1  F030         	goto	u3650
  7660   00615E                     u3651:
  7661   00615E  EFB2  F030         	goto	l3660
  7662   006162                     u3650:
  7663   006162  8019               	bsf	___fldiv@aexp^0,0,c
  7664   006164                     l3660:
  7665   006164  5019               	movf	___fldiv@aexp^0,w,c
  7666   006166  B4D8               	btfsc	status,2,c
  7667   006168  EFB8  F030         	goto	u3661
  7668   00616C  EFBA  F030         	goto	u3660
  7669   006170                     u3661:
  7670   006170  EFCF  F030         	goto	l3670
  7671   006174                     u3660:
  7672   006174  2819               	incf	___fldiv@aexp^0,w,c
  7673   006176  A4D8               	btfss	status,2,c
  7674   006178  EFC0  F030         	goto	u3671
  7675   00617C  EFC2  F030         	goto	u3670
  7676   006180                     u3671:
  7677   006180  EFCA  F030         	goto	l3666
  7678   006184                     u3670:
  7679   006184  0E00               	movlw	0
  7680   006186  6E05               	movwf	___fldiv@a^0,c
  7681   006188  0E00               	movlw	0
  7682   00618A  6E06               	movwf	(___fldiv@a+1)^0,c
  7683   00618C  0E00               	movlw	0
  7684   00618E  6E07               	movwf	(___fldiv@a+2)^0,c
  7685   006190  0E00               	movlw	0
  7686   006192  6E08               	movwf	(___fldiv@a+3)^0,c
  7687   006194                     l3666:
  7688   006194  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7689   006196  0E00               	movlw	0
  7690   006198  6E08               	movwf	(___fldiv@a+3)^0,c
  7691   00619A  EFD7  F030         	goto	l3672
  7692   00619E                     l3670:
  7693   00619E  0E00               	movlw	0
  7694   0061A0  6E05               	movwf	___fldiv@a^0,c
  7695   0061A2  0E00               	movlw	0
  7696   0061A4  6E06               	movwf	(___fldiv@a+1)^0,c
  7697   0061A6  0E00               	movlw	0
  7698   0061A8  6E07               	movwf	(___fldiv@a+2)^0,c
  7699   0061AA  0E00               	movlw	0
  7700   0061AC  6E08               	movwf	(___fldiv@a+3)^0,c
  7701   0061AE                     l3672:
  7702   0061AE  5005               	movf	___fldiv@a^0,w,c
  7703   0061B0  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7704   0061B2  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7705   0061B4  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7706   0061B6  A4D8               	btfss	status,2,c
  7707   0061B8  EFE0  F030         	goto	u3681
  7708   0061BC  EFE2  F030         	goto	u3680
  7709   0061C0                     u3681:
  7710   0061C0  EFFA  F030         	goto	l3684
  7711   0061C4                     u3680:
  7712   0061C4  0E00               	movlw	0
  7713   0061C6  6E01               	movwf	___fldiv@b^0,c
  7714   0061C8  0E00               	movlw	0
  7715   0061CA  6E02               	movwf	(___fldiv@b+1)^0,c
  7716   0061CC  0E00               	movlw	0
  7717   0061CE  6E03               	movwf	(___fldiv@b+2)^0,c
  7718   0061D0  0E00               	movlw	0
  7719   0061D2  6E04               	movwf	(___fldiv@b+3)^0,c
  7720   0061D4  0E80               	movlw	128
  7721   0061D6  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7722   0061D8  0E7F               	movlw	127
  7723   0061DA  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7724   0061DC                     l3678:
  7725   0061DC  5011               	movf	___fldiv@sign^0,w,c
  7726   0061DE  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7727   0061E0  C001  F001         	movff	___fldiv@b,?___fldiv
  7728   0061E4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7729   0061E8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7730   0061EC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7731   0061F0  EF3D  F032         	goto	l1080
  7732   0061F4                     l3684:
  7733   0061F4  5018               	movf	___fldiv@bexp^0,w,c
  7734   0061F6  A4D8               	btfss	status,2,c
  7735   0061F8  EF00  F031         	goto	u3691
  7736   0061FC  EF02  F031         	goto	u3690
  7737   006200                     u3691:
  7738   006200  EF0C  F031         	goto	l3692
  7739   006204                     u3690:
  7740   006204  0E00               	movlw	0
  7741   006206  6E01               	movwf	?___fldiv^0,c
  7742   006208  0E00               	movlw	0
  7743   00620A  6E02               	movwf	(?___fldiv+1)^0,c
  7744   00620C  0E00               	movlw	0
  7745   00620E  6E03               	movwf	(?___fldiv+2)^0,c
  7746   006210  0E00               	movlw	0
  7747   006212  6E04               	movwf	(?___fldiv+3)^0,c
  7748   006214  EF3D  F032         	goto	l1080
  7749   006218                     l3692:
  7750   006218  5019               	movf	___fldiv@aexp^0,w,c
  7751   00621A  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7752   00621E  6A0A               	clrf	(??___fldiv+1)^0,c
  7753   006220  5E09               	subwf	??___fldiv^0,f,c
  7754   006222  0E00               	movlw	0
  7755   006224  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7756   006226  0E7F               	movlw	127
  7757   006228  2409               	addwf	??___fldiv^0,w,c
  7758   00622A  6E12               	movwf	___fldiv@new_exp^0,c
  7759   00622C  0E00               	movlw	0
  7760   00622E  200A               	addwfc	(??___fldiv+1)^0,w,c
  7761   006230  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7762   006232  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7763   006236  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7764   00623A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7765   00623E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7766   006242  0E00               	movlw	0
  7767   006244  6E01               	movwf	___fldiv@b^0,c
  7768   006246  0E00               	movlw	0
  7769   006248  6E02               	movwf	(___fldiv@b+1)^0,c
  7770   00624A  0E00               	movlw	0
  7771   00624C  6E03               	movwf	(___fldiv@b+2)^0,c
  7772   00624E  0E00               	movlw	0
  7773   006250  6E04               	movwf	(___fldiv@b+3)^0,c
  7774   006252  0E00               	movlw	0
  7775   006254  6E14               	movwf	___fldiv@grs^0,c
  7776   006256  0E00               	movlw	0
  7777   006258  6E15               	movwf	(___fldiv@grs+1)^0,c
  7778   00625A  0E00               	movlw	0
  7779   00625C  6E16               	movwf	(___fldiv@grs+2)^0,c
  7780   00625E  0E00               	movlw	0
  7781   006260  6E17               	movwf	(___fldiv@grs+3)^0,c
  7782   006262  0E00               	movlw	0
  7783   006264  6E19               	movwf	___fldiv@aexp^0,c
  7784   006266  EF6D  F031         	goto	l1082
  7785   00626A                     l3702:
  7786   00626A  5019               	movf	___fldiv@aexp^0,w,c
  7787   00626C  B4D8               	btfsc	status,2,c
  7788   00626E  EF3B  F031         	goto	u3701
  7789   006272  EF3D  F031         	goto	u3700
  7790   006276                     u3701:
  7791   006276  EF54  F031         	goto	l3710
  7792   00627A                     u3700:
  7793   00627A  90D8               	bcf	status,0,c
  7794   00627C  360D               	rlcf	___fldiv@rem^0,f,c
  7795   00627E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7796   006280  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7797   006282  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7798   006284  90D8               	bcf	status,0,c
  7799   006286  3601               	rlcf	___fldiv@b^0,f,c
  7800   006288  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7801   00628A  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7802   00628C  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7803   00628E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7804   006290  EF4C  F031         	goto	u3711
  7805   006294  EF4E  F031         	goto	u3710
  7806   006298                     u3711:
  7807   006298  EF4F  F031         	goto	l1085
  7808   00629C                     u3710:
  7809   00629C  8001               	bsf	___fldiv@b^0,0,c
  7810   00629E                     l1085:
  7811   00629E  90D8               	bcf	status,0,c
  7812   0062A0  3614               	rlcf	___fldiv@grs^0,f,c
  7813   0062A2  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7814   0062A4  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7815   0062A6  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7816   0062A8                     l3710:
  7817   0062A8  5005               	movf	___fldiv@a^0,w,c
  7818   0062AA  5C0D               	subwf	___fldiv@rem^0,w,c
  7819   0062AC  5006               	movf	(___fldiv@a+1)^0,w,c
  7820   0062AE  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7821   0062B0  5007               	movf	(___fldiv@a+2)^0,w,c
  7822   0062B2  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7823   0062B4  5008               	movf	(___fldiv@a+3)^0,w,c
  7824   0062B6  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7825   0062B8  A0D8               	btfss	status,0,c
  7826   0062BA  EF61  F031         	goto	u3721
  7827   0062BE  EF63  F031         	goto	u3720
  7828   0062C2                     u3721:
  7829   0062C2  EF6C  F031         	goto	l3716
  7830   0062C6                     u3720:
  7831   0062C6  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7832   0062C8  5005               	movf	___fldiv@a^0,w,c
  7833   0062CA  5E0D               	subwf	___fldiv@rem^0,f,c
  7834   0062CC  5006               	movf	(___fldiv@a+1)^0,w,c
  7835   0062CE  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7836   0062D0  5007               	movf	(___fldiv@a+2)^0,w,c
  7837   0062D2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7838   0062D4  5008               	movf	(___fldiv@a+3)^0,w,c
  7839   0062D6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7840   0062D8                     l3716:
  7841   0062D8  2A19               	incf	___fldiv@aexp^0,f,c
  7842   0062DA                     l1082:
  7843   0062DA  0E19               	movlw	25
  7844   0062DC  6419               	cpfsgt	___fldiv@aexp^0,c
  7845   0062DE  EF73  F031         	goto	u3731
  7846   0062E2  EF75  F031         	goto	u3730
  7847   0062E6                     u3731:
  7848   0062E6  EF35  F031         	goto	l3702
  7849   0062EA                     u3730:
  7850   0062EA  500D               	movf	___fldiv@rem^0,w,c
  7851   0062EC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7852   0062EE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7853   0062F0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7854   0062F2  B4D8               	btfsc	status,2,c
  7855   0062F4  EF7E  F031         	goto	u3741
  7856   0062F8  EF80  F031         	goto	u3740
  7857   0062FC                     u3741:
  7858   0062FC  EF98  F031         	goto	l3728
  7859   006300                     u3740:
  7860   006300  8014               	bsf	___fldiv@grs^0,0,c
  7861   006302  EF98  F031         	goto	l3728
  7862   006306                     l3722:
  7863   006306  90D8               	bcf	status,0,c
  7864   006308  3601               	rlcf	___fldiv@b^0,f,c
  7865   00630A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7866   00630C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7867   00630E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7868   006310  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7869   006312  EF8D  F031         	goto	u3751
  7870   006316  EF8F  F031         	goto	u3750
  7871   00631A                     u3751:
  7872   00631A  EF90  F031         	goto	l1091
  7873   00631E                     u3750:
  7874   00631E  8001               	bsf	___fldiv@b^0,0,c
  7875   006320                     l1091:
  7876   006320  90D8               	bcf	status,0,c
  7877   006322  3614               	rlcf	___fldiv@grs^0,f,c
  7878   006324  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7879   006326  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7880   006328  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7881   00632A  0612               	decf	___fldiv@new_exp^0,f,c
  7882   00632C  A0D8               	btfss	status,0,c
  7883   00632E  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7884   006330                     l3728:
  7885   006330  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7886   006332  EF9D  F031         	goto	u3761
  7887   006336  EF9F  F031         	goto	u3760
  7888   00633A                     u3761:
  7889   00633A  EF83  F031         	goto	l3722
  7890   00633E                     u3760:
  7891   00633E  0E00               	movlw	0
  7892   006340  6E19               	movwf	___fldiv@aexp^0,c
  7893   006342  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7894   006344  EFA6  F031         	goto	u3771
  7895   006348  EFA8  F031         	goto	u3770
  7896   00634C                     u3771:
  7897   00634C  EFCC  F031         	goto	l1093
  7898   006350                     u3770:
  7899   006350  0EFF               	movlw	255
  7900   006352  1414               	andwf	___fldiv@grs^0,w,c
  7901   006354  6E09               	movwf	??___fldiv^0,c
  7902   006356  0EFF               	movlw	255
  7903   006358  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7904   00635A  6E0A               	movwf	(??___fldiv+1)^0,c
  7905   00635C  0EFF               	movlw	255
  7906   00635E  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7907   006360  6E0B               	movwf	(??___fldiv+2)^0,c
  7908   006362  0E7F               	movlw	127
  7909   006364  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7910   006366  6E0C               	movwf	(??___fldiv+3)^0,c
  7911   006368  5009               	movf	??___fldiv^0,w,c
  7912   00636A  100A               	iorwf	(??___fldiv+1)^0,w,c
  7913   00636C  100B               	iorwf	(??___fldiv+2)^0,w,c
  7914   00636E  100C               	iorwf	(??___fldiv+3)^0,w,c
  7915   006370  B4D8               	btfsc	status,2,c
  7916   006372  EFBD  F031         	goto	u3781
  7917   006376  EFBF  F031         	goto	u3780
  7918   00637A                     u3781:
  7919   00637A  EFC3  F031         	goto	l1094
  7920   00637E                     u3780:
  7921   00637E                     l3736:
  7922   00637E  0E01               	movlw	1
  7923   006380  6E19               	movwf	___fldiv@aexp^0,c
  7924   006382  EFCC  F031         	goto	l1093
  7925   006386                     l1094:
  7926   006386  A001               	btfss	___fldiv@b^0,0,c
  7927   006388  EFC8  F031         	goto	u3791
  7928   00638C  EFCA  F031         	goto	u3790
  7929   006390                     u3791:
  7930   006390  EFCC  F031         	goto	l1093
  7931   006394                     u3790:
  7932   006394  EFBF  F031         	goto	l3736
  7933   006398                     l1093:
  7934   006398  5019               	movf	___fldiv@aexp^0,w,c
  7935   00639A  B4D8               	btfsc	status,2,c
  7936   00639C  EFD2  F031         	goto	u3801
  7937   0063A0  EFD4  F031         	goto	u3800
  7938   0063A4                     u3801:
  7939   0063A4  EFF8  F031         	goto	l3748
  7940   0063A8                     u3800:
  7941   0063A8  0E01               	movlw	1
  7942   0063AA  2601               	addwf	___fldiv@b^0,f,c
  7943   0063AC  0E00               	movlw	0
  7944   0063AE  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7945   0063B0  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7946   0063B2  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7947   0063B4  A004               	btfss	(___fldiv@b+3)^0,0,c
  7948   0063B6  EFDF  F031         	goto	u3811
  7949   0063BA  EFE1  F031         	goto	u3810
  7950   0063BE                     u3811:
  7951   0063BE  EFF8  F031         	goto	l3748
  7952   0063C2                     u3810:
  7953   0063C2  C001  F009         	movff	___fldiv@b,??___fldiv
  7954   0063C6  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7955   0063CA  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7956   0063CE  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7957   0063D2  340C               	rlcf	(??___fldiv+3)^0,w,c
  7958   0063D4  320C               	rrcf	(??___fldiv+3)^0,f,c
  7959   0063D6  320B               	rrcf	(??___fldiv+2)^0,f,c
  7960   0063D8  320A               	rrcf	(??___fldiv+1)^0,f,c
  7961   0063DA  3209               	rrcf	??___fldiv^0,f,c
  7962   0063DC  C009  F001         	movff	??___fldiv,___fldiv@b
  7963   0063E0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7964   0063E4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7965   0063E8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7966   0063EC  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7967   0063EE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7968   0063F0                     l3748:
  7969   0063F0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7970   0063F2  EF03  F032         	goto	u3821
  7971   0063F6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7972   0063F8  E108               	bnz	u3820
  7973   0063FA  2812               	incf	___fldiv@new_exp^0,w,c
  7974   0063FC  A0D8               	btfss	status,0,c
  7975   0063FE  EF03  F032         	goto	u3821
  7976   006402  EF05  F032         	goto	u3820
  7977   006406                     u3821:
  7978   006406  EF10  F032         	goto	l3752
  7979   00640A                     u3820:
  7980   00640A  0E00               	movlw	0
  7981   00640C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7982   00640E  6812               	setf	___fldiv@new_exp^0,c
  7983   006410  0E00               	movlw	0
  7984   006412  6E01               	movwf	___fldiv@b^0,c
  7985   006414  0E00               	movlw	0
  7986   006416  6E02               	movwf	(___fldiv@b+1)^0,c
  7987   006418  0E00               	movlw	0
  7988   00641A  6E03               	movwf	(___fldiv@b+2)^0,c
  7989   00641C  0E00               	movlw	0
  7990   00641E  6E04               	movwf	(___fldiv@b+3)^0,c
  7991   006420                     l3752:
  7992   006420  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7993   006422  EF1D  F032         	goto	u3830
  7994   006426  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7995   006428  E106               	bnz	u3831
  7996   00642A  0412               	decf	___fldiv@new_exp^0,w,c
  7997   00642C  B0D8               	btfsc	status,0,c
  7998   00642E  EF1B  F032         	goto	u3831
  7999   006432  EF1D  F032         	goto	u3830
  8000   006436                     u3831:
  8001   006436  EF2B  F032         	goto	l3756
  8002   00643A                     u3830:
  8003   00643A  0E00               	movlw	0
  8004   00643C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8005   00643E  0E00               	movlw	0
  8006   006440  6E12               	movwf	___fldiv@new_exp^0,c
  8007   006442  0E00               	movlw	0
  8008   006444  6E01               	movwf	___fldiv@b^0,c
  8009   006446  0E00               	movlw	0
  8010   006448  6E02               	movwf	(___fldiv@b+1)^0,c
  8011   00644A  0E00               	movlw	0
  8012   00644C  6E03               	movwf	(___fldiv@b+2)^0,c
  8013   00644E  0E00               	movlw	0
  8014   006450  6E04               	movwf	(___fldiv@b+3)^0,c
  8015   006452  0E00               	movlw	0
  8016   006454  6E11               	movwf	___fldiv@sign^0,c
  8017   006456                     l3756:
  8018   006456  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  8019   00645A  A018               	btfss	___fldiv@bexp^0,0,c
  8020   00645C  EF32  F032         	goto	u3841
  8021   006460  EF34  F032         	goto	u3840
  8022   006464                     u3841:
  8023   006464  EF37  F032         	goto	l3762
  8024   006468                     u3840:
  8025   006468  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8026   00646A  EF38  F032         	goto	l3764
  8027   00646E                     l3762:
  8028   00646E  9E03               	bcf	(___fldiv@b+2)^0,7,c
  8029   006470                     l3764:
  8030   006470  90D8               	bcf	status,0,c
  8031   006472  3018               	rrcf	___fldiv@bexp^0,w,c
  8032   006474  6E04               	movwf	(___fldiv@b+3)^0,c
  8033   006476  EFEE  F030         	goto	l3678
  8034   00647A                     l1080:
  8035   00647A  0012               	return		;funcret
  8036   00647C                     __end_of___fldiv:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function ___xxtofl *****************
  8040 ;; Defined at:
  8041 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;  sign            1    wreg     unsigned char 
  8044 ;;  val             4    0[COMRAM] long 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  sign            1    8[COMRAM] unsigned char 
  8047 ;;  arg             4   10[COMRAM] unsigned long 
  8048 ;;  exp             1    9[COMRAM] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  4    0[COMRAM] unsigned char 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8058 ;;      Params:         4       0       0       0       0       0       0       0       0
  8059 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8060 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8061 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8062 ;;Total ram usage:       14 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_main
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text24
  8072   00563A                     __ptext24:
  8073                           	callstack 0
  8074   00563A                     ___xxtofl:
  8075                           	callstack 30
  8076                           
  8077                           ;incstack = 0
  8078                           ;___xxtofl@sign stored from wreg
  8079   00563A  6E09               	movwf	___xxtofl@sign^0,c
  8080   00563C  5009               	movf	___xxtofl@sign^0,w,c
  8081   00563E  B4D8               	btfsc	status,2,c
  8082   005640  EF24  F02B         	goto	u5821
  8083   005644  EF26  F02B         	goto	u5820
  8084   005648                     u5821:
  8085   005648  EF48  F02B         	goto	l1153
  8086   00564C                     u5820:
  8087   00564C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8088   00564E  EF2D  F02B         	goto	u5830
  8089   005652  EF2B  F02B         	goto	u5831
  8090   005656                     u5831:
  8091   005656  EF48  F02B         	goto	l1153
  8092   00565A                     u5830:
  8093   00565A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8094   00565E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8095   005662  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8096   005666  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8097   00566A  1E05               	comf	??___xxtofl^0,f,c
  8098   00566C  1E06               	comf	(??___xxtofl+1)^0,f,c
  8099   00566E  1E07               	comf	(??___xxtofl+2)^0,f,c
  8100   005670  1E08               	comf	(??___xxtofl+3)^0,f,c
  8101   005672  2A05               	incf	??___xxtofl^0,f,c
  8102   005674  0E00               	movlw	0
  8103   005676  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8104   005678  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8105   00567A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8106   00567C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8107   005680  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8108   005684  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8109   005688  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8110   00568C  EF50  F02B         	goto	l5008
  8111   005690                     l1153:
  8112   005690  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8113   005694  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8114   005698  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8115   00569C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8116   0056A0                     l5008:
  8117   0056A0  5001               	movf	___xxtofl@val^0,w,c
  8118   0056A2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8119   0056A4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8120   0056A6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8121   0056A8  A4D8               	btfss	status,2,c
  8122   0056AA  EF59  F02B         	goto	u5841
  8123   0056AE  EF5B  F02B         	goto	u5840
  8124   0056B2                     u5841:
  8125   0056B2  EF65  F02B         	goto	l5014
  8126   0056B6                     u5840:
  8127   0056B6  0E00               	movlw	0
  8128   0056B8  6E01               	movwf	?___xxtofl^0,c
  8129   0056BA  0E00               	movlw	0
  8130   0056BC  6E02               	movwf	(?___xxtofl+1)^0,c
  8131   0056BE  0E00               	movlw	0
  8132   0056C0  6E03               	movwf	(?___xxtofl+2)^0,c
  8133   0056C2  0E00               	movlw	0
  8134   0056C4  6E04               	movwf	(?___xxtofl+3)^0,c
  8135   0056C6  EFF6  F02B         	goto	l1156
  8136   0056CA                     l5014:
  8137   0056CA  0E96               	movlw	150
  8138   0056CC  6E0A               	movwf	___xxtofl@exp^0,c
  8139   0056CE  EF6F  F02B         	goto	l5018
  8140   0056D2                     l5016:
  8141   0056D2  2A0A               	incf	___xxtofl@exp^0,f,c
  8142   0056D4  90D8               	bcf	status,0,c
  8143   0056D6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8144   0056D8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8145   0056DA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8146   0056DC  320B               	rrcf	___xxtofl@arg^0,f,c
  8147   0056DE                     l5018:
  8148   0056DE  0E00               	movlw	0
  8149   0056E0  140B               	andwf	___xxtofl@arg^0,w,c
  8150   0056E2  6E05               	movwf	??___xxtofl^0,c
  8151   0056E4  0E00               	movlw	0
  8152   0056E6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8153   0056E8  6E06               	movwf	(??___xxtofl+1)^0,c
  8154   0056EA  0E00               	movlw	0
  8155   0056EC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8156   0056EE  6E07               	movwf	(??___xxtofl+2)^0,c
  8157   0056F0  0EFE               	movlw	254
  8158   0056F2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8159   0056F4  6E08               	movwf	(??___xxtofl+3)^0,c
  8160   0056F6  5005               	movf	??___xxtofl^0,w,c
  8161   0056F8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8162   0056FA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8163   0056FC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8164   0056FE  A4D8               	btfss	status,2,c
  8165   005700  EF84  F02B         	goto	u5851
  8166   005704  EF86  F02B         	goto	u5850
  8167   005708                     u5851:
  8168   005708  EF69  F02B         	goto	l5016
  8169   00570C                     u5850:
  8170   00570C  EF94  F02B         	goto	l1160
  8171   005710                     l5020:
  8172   005710  2A0A               	incf	___xxtofl@exp^0,f,c
  8173   005712  0E01               	movlw	1
  8174   005714  260B               	addwf	___xxtofl@arg^0,f,c
  8175   005716  0E00               	movlw	0
  8176   005718  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8177   00571A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8178   00571C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8179   00571E  90D8               	bcf	status,0,c
  8180   005720  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8181   005722  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8182   005724  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8183   005726  320B               	rrcf	___xxtofl@arg^0,f,c
  8184   005728                     l1160:
  8185   005728  0E00               	movlw	0
  8186   00572A  140B               	andwf	___xxtofl@arg^0,w,c
  8187   00572C  6E05               	movwf	??___xxtofl^0,c
  8188   00572E  0E00               	movlw	0
  8189   005730  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8190   005732  6E06               	movwf	(??___xxtofl+1)^0,c
  8191   005734  0E00               	movlw	0
  8192   005736  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8193   005738  6E07               	movwf	(??___xxtofl+2)^0,c
  8194   00573A  0EFF               	movlw	255
  8195   00573C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8196   00573E  6E08               	movwf	(??___xxtofl+3)^0,c
  8197   005740  5005               	movf	??___xxtofl^0,w,c
  8198   005742  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8199   005744  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8200   005746  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8201   005748  A4D8               	btfss	status,2,c
  8202   00574A  EFA9  F02B         	goto	u5861
  8203   00574E  EFAB  F02B         	goto	u5860
  8204   005752                     u5861:
  8205   005752  EF88  F02B         	goto	l5020
  8206   005756                     u5860:
  8207   005756  EFB3  F02B         	goto	l5028
  8208   00575A                     l5026:
  8209   00575A  060A               	decf	___xxtofl@exp^0,f,c
  8210   00575C  90D8               	bcf	status,0,c
  8211   00575E  360B               	rlcf	___xxtofl@arg^0,f,c
  8212   005760  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8213   005762  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8214   005764  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8215   005766                     l5028:
  8216   005766  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8217   005768  EFB8  F02B         	goto	u5871
  8218   00576C  EFBA  F02B         	goto	u5870
  8219   005770                     u5871:
  8220   005770  EFC2  F02B         	goto	l1167
  8221   005774                     u5870:
  8222   005774  0E02               	movlw	2
  8223   005776  600A               	cpfslt	___xxtofl@exp^0,c
  8224   005778  EFC0  F02B         	goto	u5881
  8225   00577C  EFC2  F02B         	goto	u5880
  8226   005780                     u5881:
  8227   005780  EFAD  F02B         	goto	l5026
  8228   005784                     u5880:
  8229   005784                     l1167:
  8230   005784  B00A               	btfsc	___xxtofl@exp^0,0,c
  8231   005786  EFC7  F02B         	goto	u5891
  8232   00578A  EFC9  F02B         	goto	u5890
  8233   00578E                     u5891:
  8234   00578E  EFCA  F02B         	goto	l5034
  8235   005792                     u5890:
  8236   005792  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8237   005794                     l5034:
  8238   005794  90D8               	bcf	status,0,c
  8239   005796  320A               	rrcf	___xxtofl@exp^0,f,c
  8240   005798  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8241   00579C  6A06               	clrf	(??___xxtofl+1)^0,c
  8242   00579E  6A07               	clrf	(??___xxtofl+2)^0,c
  8243   0057A0  6A08               	clrf	(??___xxtofl+3)^0,c
  8244   0057A2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8245   0057A6  6A07               	clrf	(??___xxtofl+2)^0,c
  8246   0057A8  6A06               	clrf	(??___xxtofl+1)^0,c
  8247   0057AA  6A05               	clrf	??___xxtofl^0,c
  8248   0057AC  5005               	movf	??___xxtofl^0,w,c
  8249   0057AE  120B               	iorwf	___xxtofl@arg^0,f,c
  8250   0057B0  5006               	movf	(??___xxtofl+1)^0,w,c
  8251   0057B2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8252   0057B4  5007               	movf	(??___xxtofl+2)^0,w,c
  8253   0057B6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8254   0057B8  5008               	movf	(??___xxtofl+3)^0,w,c
  8255   0057BA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8256   0057BC  5009               	movf	___xxtofl@sign^0,w,c
  8257   0057BE  B4D8               	btfsc	status,2,c
  8258   0057C0  EFE4  F02B         	goto	u5901
  8259   0057C4  EFE6  F02B         	goto	u5900
  8260   0057C8                     u5901:
  8261   0057C8  EFEE  F02B         	goto	l5044
  8262   0057CC                     u5900:
  8263   0057CC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8264   0057CE  EFED  F02B         	goto	u5910
  8265   0057D2  EFEB  F02B         	goto	u5911
  8266   0057D6                     u5911:
  8267   0057D6  EFEE  F02B         	goto	l5044
  8268   0057DA                     u5910:
  8269   0057DA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8270   0057DC                     l5044:
  8271   0057DC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8272   0057E0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8273   0057E4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8274   0057E8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8275   0057EC                     l1156:
  8276   0057EC  0012               	return		;funcret
  8277   0057EE                     __end_of___xxtofl:
  8278                           	callstack 0
  8279                           
  8280 ;; *************** function _TFT_WriteString *****************
  8281 ;; Defined at:
  8282 ;;		line 1049 in file "tft_st7735.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  x               2   33[COMRAM] unsigned short 
  8285 ;;  y               2   35[COMRAM] unsigned short 
  8286 ;;  str             2   37[COMRAM] PTR const unsigned char 
  8287 ;;		 -> STR_2(21), main@cadena(16), 
  8288 ;;  color           2   39[COMRAM] unsigned short 
  8289 ;;  bg              2   41[COMRAM] unsigned short 
  8290 ;;  size            1   43[COMRAM] unsigned char 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  x_prev          1   46[COMRAM] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8302 ;;      Params:        11       0       0       0       0       0       0       0       0
  8303 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8305 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8306 ;;Total ram usage:       14 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 5
  8309 ;; This function calls:
  8310 ;;		_TFT_Print
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text25
  8317   0054A4                     __ptext25:
  8318                           	callstack 0
  8319   0054A4                     _TFT_WriteString:
  8320                           	callstack 25
  8321   0054A4                     
  8322                           ;tft_st7735.c: 1049: void TFT_WriteString(uint16_t x, uint16_t y, const char* str, uint1
      +                          6_t color, uint16_t bg, uint8_t size);tft_st7735.c: 1050: {;tft_st7735.c: 1051:     uint
      +                          8_t x_prev = x;
  8323   0054A4  C022  F02F         	movff	TFT_WriteString@x,TFT_WriteString@x_prev
  8324   0054A8                     
  8325                           ;tft_st7735.c: 1052:     textsize = (size > 0) ? size : 1;
  8326   0054A8  502C               	movf	TFT_WriteString@size^0,w,c
  8327   0054AA  A4D8               	btfss	status,2,c
  8328   0054AC  EF5A  F02A         	goto	u5501
  8329   0054B0  EF5C  F02A         	goto	u5500
  8330   0054B4                     u5501:
  8331   0054B4  EF62  F02A         	goto	l462
  8332   0054B8                     u5500:
  8333   0054B8  0E00               	movlw	0
  8334   0054BA  6E2E               	movwf	(_TFT_WriteString$914+1)^0,c
  8335   0054BC  0E01               	movlw	1
  8336   0054BE  6E2D               	movwf	_TFT_WriteString$914^0,c
  8337   0054C0  EF65  F02A         	goto	l464
  8338   0054C4                     l462:
  8339   0054C4  C02C  F02D         	movff	TFT_WriteString@size,_TFT_WriteString$914
  8340   0054C8  6A2E               	clrf	(_TFT_WriteString$914+1)^0,c
  8341   0054CA                     l464:
  8342   0054CA  C02D  F05E         	movff	_TFT_WriteString$914,_textsize
  8343                           
  8344                           ;tft_st7735.c: 1053:     textcolor = color;
  8345   0054CE  C028  F0BE         	movff	TFT_WriteString@color,_textcolor
  8346   0054D2  C029  F0BF         	movff	TFT_WriteString@color+1,_textcolor+1
  8347                           
  8348                           ;tft_st7735.c: 1054:     textbgcolor = bg;
  8349   0054D6  C02A  F0BC         	movff	TFT_WriteString@bg,_textbgcolor
  8350   0054DA  C02B  F0BD         	movff	TFT_WriteString@bg+1,_textbgcolor+1
  8351                           
  8352                           ;tft_st7735.c: 1055:     while(*str != '\0')
  8353   0054DE  EF04  F02B         	goto	l4862
  8354   0054E2                     l468:
  8355                           
  8356                           ;tft_st7735.c: 1060:                 cursor_x = x_prev;
  8357   0054E2  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8358   0054E6  6A59               	clrf	(_cursor_x+1)^0,c
  8359                           
  8360                           ;tft_st7735.c: 1061:                 cursor_y = y;
  8361   0054E8  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8362   0054EC  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8363   0054F0                     
  8364                           ;tft_st7735.c: 1062:                 TFT_Print(*str++);
  8365   0054F0  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8366   0054F4  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8367   0054F8  6AF8               	clrf	tblptru,c
  8368   0054FA  0E07               	movlw	(high __ramtop+-1)
  8369   0054FC  64F7               	cpfsgt	tblptrh,c
  8370   0054FE  D003               	bra	u5517
  8371   005500  0008               	tblrd		*
  8372   005502  50F5               	movf	tablat,w,c
  8373   005504  D005               	bra	u5510
  8374   005506                     u5517:
  8375   005506  CFF6 FFE9          	movff	tblptrl,fsr0l
  8376   00550A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8377   00550E  50EF               	movf	indf0,w,c
  8378   005510                     u5510:
  8379   005510  EC1F  F02F         	call	_TFT_Print
  8380   005514  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8381   005516  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8382   005518                     
  8383                           ;tft_st7735.c: 1063:                 x_prev = x_prev + 6;
  8384   005518  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8385   00551A  0F06               	addlw	6
  8386   00551C  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8387                           
  8388                           ;tft_st7735.c: 1064:                 break;
  8389   00551E  EF04  F02B         	goto	l4862
  8390   005522                     l470:
  8391                           
  8392                           ;tft_st7735.c: 1066:                 cursor_x = x_prev;
  8393   005522  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8394   005526  6A59               	clrf	(_cursor_x+1)^0,c
  8395                           
  8396                           ;tft_st7735.c: 1067:                 cursor_y = y;
  8397   005528  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8398   00552C  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8399   005530                     
  8400                           ;tft_st7735.c: 1068:                 TFT_Print(*str++);
  8401   005530  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8402   005534  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8403   005538  6AF8               	clrf	tblptru,c
  8404   00553A  0E07               	movlw	(high __ramtop+-1)
  8405   00553C  64F7               	cpfsgt	tblptrh,c
  8406   00553E  D003               	bra	u5527
  8407   005540  0008               	tblrd		*
  8408   005542  50F5               	movf	tablat,w,c
  8409   005544  D005               	bra	u5520
  8410   005546                     u5527:
  8411   005546  CFF6 FFE9          	movff	tblptrl,fsr0l
  8412   00554A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8413   00554E  50EF               	movf	indf0,w,c
  8414   005550                     u5520:
  8415   005550  EC1F  F02F         	call	_TFT_Print
  8416   005554  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8417   005556  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8418   005558                     
  8419                           ;tft_st7735.c: 1069:                 x_prev = x_prev + 12;
  8420   005558  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8421   00555A  0F0C               	addlw	12
  8422   00555C  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8423                           
  8424                           ;tft_st7735.c: 1070:                 break;
  8425   00555E  EF04  F02B         	goto	l4862
  8426   005562                     l471:
  8427                           
  8428                           ;tft_st7735.c: 1073:                 cursor_x = x_prev;
  8429   005562  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8430   005566  6A59               	clrf	(_cursor_x+1)^0,c
  8431                           
  8432                           ;tft_st7735.c: 1074:                 cursor_y = y;
  8433   005568  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8434   00556C  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8435   005570                     
  8436                           ;tft_st7735.c: 1075:                 TFT_Print(*str++);
  8437   005570  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8438   005574  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8439   005578  6AF8               	clrf	tblptru,c
  8440   00557A  0E07               	movlw	(high __ramtop+-1)
  8441   00557C  64F7               	cpfsgt	tblptrh,c
  8442   00557E  D003               	bra	u5537
  8443   005580  0008               	tblrd		*
  8444   005582  50F5               	movf	tablat,w,c
  8445   005584  D005               	bra	u5530
  8446   005586                     u5537:
  8447   005586  CFF6 FFE9          	movff	tblptrl,fsr0l
  8448   00558A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8449   00558E  50EF               	movf	indf0,w,c
  8450   005590                     u5530:
  8451   005590  EC1F  F02F         	call	_TFT_Print
  8452   005594  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8453   005596  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8454   005598                     
  8455                           ;tft_st7735.c: 1076:                 x_prev = x_prev + 18;
  8456   005598  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8457   00559A  0F12               	addlw	18
  8458   00559C  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8459                           
  8460                           ;tft_st7735.c: 1077:                 break;
  8461   00559E  EF04  F02B         	goto	l4862
  8462   0055A2                     l472:
  8463                           
  8464                           ;tft_st7735.c: 1080:                 cursor_x = x_prev;
  8465   0055A2  C02F  F058         	movff	TFT_WriteString@x_prev,_cursor_x
  8466   0055A6  6A59               	clrf	(_cursor_x+1)^0,c
  8467                           
  8468                           ;tft_st7735.c: 1081:                 cursor_y = y;
  8469   0055A8  C024  F056         	movff	TFT_WriteString@y,_cursor_y
  8470   0055AC  C025  F057         	movff	TFT_WriteString@y+1,_cursor_y+1
  8471   0055B0                     
  8472                           ;tft_st7735.c: 1082:                 TFT_Print(*str++);
  8473   0055B0  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8474   0055B4  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8475   0055B8  6AF8               	clrf	tblptru,c
  8476   0055BA  0E07               	movlw	(high __ramtop+-1)
  8477   0055BC  64F7               	cpfsgt	tblptrh,c
  8478   0055BE  D003               	bra	u5547
  8479   0055C0  0008               	tblrd		*
  8480   0055C2  50F5               	movf	tablat,w,c
  8481   0055C4  D005               	bra	u5540
  8482   0055C6                     u5547:
  8483   0055C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  8484   0055CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  8485   0055CE  50EF               	movf	indf0,w,c
  8486   0055D0                     u5540:
  8487   0055D0  EC1F  F02F         	call	_TFT_Print
  8488   0055D4  4A26               	infsnz	TFT_WriteString@str^0,f,c
  8489   0055D6  2A27               	incf	(TFT_WriteString@str+1)^0,f,c
  8490   0055D8                     
  8491                           ;tft_st7735.c: 1083:                 x_prev = x_prev + 24;
  8492   0055D8  502F               	movf	TFT_WriteString@x_prev^0,w,c
  8493   0055DA  0F18               	addlw	24
  8494   0055DC  6E2F               	movwf	TFT_WriteString@x_prev^0,c
  8495                           
  8496                           ;tft_st7735.c: 1084:                 break;
  8497   0055DE  EF04  F02B         	goto	l4862
  8498   0055E2                     l4860:
  8499   0055E2  505E               	movf	_textsize^0,w,c
  8500                           
  8501                           ; Switch size 1, requested type "simple"
  8502                           ; Number of cases is 4, Range of values is 1 to 4
  8503                           ; switch strategies available:
  8504                           ; Name         Instructions Cycles
  8505                           ; simple_byte           13     7 (average)
  8506                           ;	Chosen strategy is simple_byte
  8507   0055E4  0A01               	xorlw	1	; case 1
  8508   0055E6  B4D8               	btfsc	status,2,c
  8509   0055E8  EF71  F02A         	goto	l468
  8510   0055EC  0A03               	xorlw	3	; case 2
  8511   0055EE  B4D8               	btfsc	status,2,c
  8512   0055F0  EF91  F02A         	goto	l470
  8513   0055F4  0A01               	xorlw	1	; case 3
  8514   0055F6  B4D8               	btfsc	status,2,c
  8515   0055F8  EFB1  F02A         	goto	l471
  8516   0055FC  0A07               	xorlw	7	; case 4
  8517   0055FE  B4D8               	btfsc	status,2,c
  8518   005600  EFD1  F02A         	goto	l472
  8519   005604  EF04  F02B         	goto	l4862
  8520   005608                     l4862:
  8521                           
  8522                           ;tft_st7735.c: 1055:     while(*str != '\0')
  8523   005608  C026  FFF6         	movff	TFT_WriteString@str,tblptrl
  8524   00560C  C027  FFF7         	movff	TFT_WriteString@str+1,tblptrh
  8525   005610  6AF8               	clrf	tblptru,c
  8526   005612  0E07               	movlw	(high __ramtop+-1)
  8527   005614  64F7               	cpfsgt	tblptrh,c
  8528   005616  D003               	bra	u5557
  8529   005618  0008               	tblrd		*
  8530   00561A  50F5               	movf	tablat,w,c
  8531   00561C  D005               	bra	u5550
  8532   00561E                     u5557:
  8533   00561E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8534   005622  CFF7 FFEA          	movff	tblptrh,fsr0h
  8535   005626  50EF               	movf	indf0,w,c
  8536   005628                     u5550:
  8537   005628  0900               	iorlw	0
  8538   00562A  A4D8               	btfss	status,2,c
  8539   00562C  EF1A  F02B         	goto	u5561
  8540   005630  EF1C  F02B         	goto	u5560
  8541   005634                     u5561:
  8542   005634  EFF1  F02A         	goto	l4860
  8543   005638                     u5560:
  8544   005638  0012               	return		;funcret
  8545   00563A                     __end_of_TFT_WriteString:
  8546                           	callstack 0
  8547                           
  8548 ;; *************** function _TFT_Print *****************
  8549 ;; Defined at:
  8550 ;;		line 950 in file "tft_st7735.c"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;  c               1    wreg     unsigned char 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  c               1   30[COMRAM] unsigned char 
  8555 ;;  j               1   31[COMRAM] unsigned char 
  8556 ;;  line            1   29[COMRAM] unsigned char 
  8557 ;;  i               1   32[COMRAM] unsigned char 
  8558 ;; Return value:  Size  Location     Type
  8559 ;;                  1    wreg      void 
  8560 ;; Registers used:
  8561 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8562 ;; Tracked objects:
  8563 ;;		On entry : 0/0
  8564 ;;		On exit  : 0/0
  8565 ;;		Unchanged: 0/0
  8566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8567 ;;      Params:         0       0       0       0       0       0       0       0       0
  8568 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8569 ;;      Temps:          5       0       0       0       0       0       0       0       0
  8570 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8571 ;;Total ram usage:        9 bytes
  8572 ;; Hardware stack levels used: 1
  8573 ;; Hardware stack levels required when called: 4
  8574 ;; This function calls:
  8575 ;;		_TFT_DrawPixel
  8576 ;;		_TFT_DrawVLine
  8577 ;;		_TFT_FillRect
  8578 ;; This function is called by:
  8579 ;;		_TFT_WriteString
  8580 ;;		_TFT_DrawChar
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text26
  8585   005E3E                     __ptext26:
  8586                           	callstack 0
  8587   005E3E                     _TFT_Print:
  8588                           	callstack 25
  8589                           
  8590                           ;incstack = 0
  8591                           ;TFT_Print@c stored from wreg
  8592   005E3E  6E1F               	movwf	TFT_Print@c^0,c
  8593   005E40                     
  8594                           ;tft_st7735.c: 950: void TFT_Print(uint8_t c);tft_st7735.c: 951: {;tft_st7735.c: 952:   
      +                            if(c == ' ' && cursor_x == 0 && wrap)
  8595   005E40  0E20               	movlw	32
  8596   005E42  181F               	xorwf	TFT_Print@c^0,w,c
  8597   005E44  A4D8               	btfss	status,2,c
  8598   005E46  EF27  F02F         	goto	u5311
  8599   005E4A  EF29  F02F         	goto	u5310
  8600   005E4E                     u5311:
  8601   005E4E  EF3D  F02F         	goto	l4696
  8602   005E52                     u5310:
  8603   005E52  5058               	movf	_cursor_x^0,w,c
  8604   005E54  1059               	iorwf	(_cursor_x+1)^0,w,c
  8605   005E56  A4D8               	btfss	status,2,c
  8606   005E58  EF30  F02F         	goto	u5321
  8607   005E5C  EF32  F02F         	goto	u5320
  8608   005E60                     u5321:
  8609   005E60  EF3D  F02F         	goto	l4696
  8610   005E64                     u5320:
  8611   005E64  0100               	movlb	0	; () banked
  8612   005E66  51C0               	movf	_wrap& (0+255),w,b
  8613   005E68  B4D8               	btfsc	status,2,c
  8614   005E6A  EF39  F02F         	goto	u5331
  8615   005E6E  EF3B  F02F         	goto	u5330
  8616   005E72                     u5331:
  8617   005E72  EF3D  F02F         	goto	l4696
  8618   005E76                     u5330:
  8619   005E76  EF70  F030         	goto	l414
  8620   005E7A                     l4696:
  8621                           
  8622                           ;tft_st7735.c: 954:     for(uint8_t i = 0; i < 5; i++ ){
  8623   005E7A  0E00               	movlw	0
  8624   005E7C  6E21               	movwf	TFT_Print@i^0,c
  8625   005E7E                     l4702:
  8626                           
  8627                           ;tft_st7735.c: 955:         uint8_t line = font[c][i];
  8628   005E7E  501F               	movf	TFT_Print@c^0,w,c
  8629   005E80  0D05               	mullw	5
  8630   005E82  0EC1               	movlw	low _font
  8631   005E84  24F3               	addwf	243,w,c
  8632   005E86  6E19               	movwf	??_TFT_Print^0,c
  8633   005E88  0E77               	movlw	high _font
  8634   005E8A  20F4               	addwfc	prodh,w,c
  8635   005E8C  6E1A               	movwf	(??_TFT_Print+1)^0,c
  8636   005E8E  5021               	movf	TFT_Print@i^0,w,c
  8637   005E90  2619               	addwf	??_TFT_Print^0,f,c
  8638   005E92  0E00               	movlw	0
  8639   005E94  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8640   005E96  C019  FFF6         	movff	??_TFT_Print,tblptrl
  8641   005E9A  C01A  FFF7         	movff	??_TFT_Print+1,tblptrh
  8642   005E9E                     	if	0	;tblptru may be non-zero
  8643   005E9E                     	endif
  8644   005E9E                     	if	0	;tblptru may be non-zero
  8645   005E9E                     	endif
  8646   005E9E  0008               	tblrd		*
  8647   005EA0  CFF5 F01E          	movff	tablat,TFT_Print@line
  8648   005EA4                     
  8649                           ;tft_st7735.c: 956:         for(uint8_t j = 0; j < 8; j++, line >>= 1){
  8650   005EA4  0E00               	movlw	0
  8651   005EA6  6E20               	movwf	TFT_Print@j^0,c
  8652   005EA8                     l417:
  8653                           
  8654                           ;tft_st7735.c: 957:             if(line & 1) {
  8655   005EA8  A01E               	btfss	TFT_Print@line^0,0,c
  8656   005EAA  EF59  F02F         	goto	u5341
  8657   005EAE  EF5B  F02F         	goto	u5340
  8658   005EB2                     u5341:
  8659   005EB2  EF85  F02F         	goto	l4716
  8660   005EB6                     u5340:
  8661   005EB6                     
  8662                           ;tft_st7735.c: 958:                 if(textsize == 1)
  8663   005EB6  045E               	decf	_textsize^0,w,c
  8664   005EB8  A4D8               	btfss	status,2,c
  8665   005EBA  EF61  F02F         	goto	u5351
  8666   005EBE  EF63  F02F         	goto	u5350
  8667   005EC2                     u5351:
  8668   005EC2  EF70  F02F         	goto	l4714
  8669   005EC6                     u5350:
  8670   005EC6                     
  8671                           ;tft_st7735.c: 959:                     TFT_DrawPixel(cursor_x + i, cursor_y + j, textco
      +                          lor);
  8672   005EC6  5020               	movf	TFT_Print@j^0,w,c
  8673   005EC8  2456               	addwf	_cursor_y^0,w,c
  8674   005ECA  6E08               	movwf	TFT_DrawPixel@y^0,c
  8675   005ECC  C0BE  F009         	movff	_textcolor,TFT_DrawPixel@color
  8676   005ED0  C0BF  F00A         	movff	_textcolor+1,TFT_DrawPixel@color+1
  8677   005ED4  5021               	movf	TFT_Print@i^0,w,c
  8678   005ED6  2458               	addwf	_cursor_x^0,w,c
  8679   005ED8  EC0D  F024         	call	_TFT_DrawPixel
  8680   005EDC  EFBA  F02F         	goto	l4724
  8681   005EE0                     l4714:
  8682                           
  8683                           ;tft_st7735.c: 961:                     TFT_FillRect(cursor_x + i * textsize, cursor_y +
      +                           j * textsize, textsize, textsize, textcolor);
  8684   005EE0  5020               	movf	TFT_Print@j^0,w,c
  8685   005EE2  025E               	mulwf	_textsize^0,c
  8686   005EE4  50F3               	movf	243,w,c
  8687   005EE6  2456               	addwf	_cursor_y^0,w,c
  8688   005EE8  6E08               	movwf	TFT_FillRect@y^0,c
  8689   005EEA  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8690   005EEE  C05E  F00A         	movff	_textsize,TFT_FillRect@h
  8691   005EF2  C0BE  F00B         	movff	_textcolor,TFT_FillRect@color
  8692   005EF6  C0BF  F00C         	movff	_textcolor+1,TFT_FillRect@color+1
  8693   005EFA  5021               	movf	TFT_Print@i^0,w,c
  8694   005EFC  025E               	mulwf	_textsize^0,c
  8695   005EFE  50F3               	movf	243,w,c
  8696   005F00  2458               	addwf	_cursor_x^0,w,c
  8697   005F02  EC09  F029         	call	_TFT_FillRect
  8698   005F06  EFBA  F02F         	goto	l4724
  8699   005F0A                     l4716:
  8700                           
  8701                           ;tft_st7735.c: 964:                 if(textbgcolor != textcolor) {
  8702   005F0A  0100               	movlb	0	; () banked
  8703   005F0C  51BE               	movf	_textcolor& (0+255),w,b
  8704   005F0E  19BC               	xorwf	_textbgcolor& (0+255),w,b
  8705   005F10  E109               	bnz	u5360
  8706   005F12  51BF               	movf	(_textcolor+1)& (0+255),w,b
  8707   005F14  19BD               	xorwf	(_textbgcolor+1)& (0+255),w,b
  8708   005F16  B4D8               	btfsc	status,2,c
  8709   005F18  EF90  F02F         	goto	u5361
  8710   005F1C  EF92  F02F         	goto	u5360
  8711   005F20                     u5361:
  8712   005F20  EFBA  F02F         	goto	l4724
  8713   005F24                     u5360:
  8714   005F24                     
  8715                           ; BSR set to: 0
  8716                           ;tft_st7735.c: 965:                     if(textsize == 1)
  8717   005F24  045E               	decf	_textsize^0,w,c
  8718   005F26  A4D8               	btfss	status,2,c
  8719   005F28  EF98  F02F         	goto	u5371
  8720   005F2C  EF9A  F02F         	goto	u5370
  8721   005F30                     u5371:
  8722   005F30  EFA7  F02F         	goto	l4722
  8723   005F34                     u5370:
  8724   005F34                     
  8725                           ; BSR set to: 0
  8726                           ;tft_st7735.c: 966:                         TFT_DrawPixel(cursor_x + i, cursor_y + j, te
      +                          xtbgcolor);
  8727   005F34  5020               	movf	TFT_Print@j^0,w,c
  8728   005F36  2456               	addwf	_cursor_y^0,w,c
  8729   005F38  6E08               	movwf	TFT_DrawPixel@y^0,c
  8730   005F3A  C0BC  F009         	movff	_textbgcolor,TFT_DrawPixel@color
  8731   005F3E  C0BD  F00A         	movff	_textbgcolor+1,TFT_DrawPixel@color+1
  8732   005F42  5021               	movf	TFT_Print@i^0,w,c
  8733   005F44  2458               	addwf	_cursor_x^0,w,c
  8734   005F46  EC0D  F024         	call	_TFT_DrawPixel
  8735   005F4A  EFBA  F02F         	goto	l4724
  8736   005F4E                     l4722:
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;tft_st7735.c: 968:                         TFT_FillRect(cursor_x + i * textsize, cursor
      +                          _y + j * textsize, textsize, textsize, textbgcolor);
  8740   005F4E  5020               	movf	TFT_Print@j^0,w,c
  8741   005F50  025E               	mulwf	_textsize^0,c
  8742   005F52  50F3               	movf	243,w,c
  8743   005F54  2456               	addwf	_cursor_y^0,w,c
  8744   005F56  6E08               	movwf	TFT_FillRect@y^0,c
  8745   005F58  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8746   005F5C  C05E  F00A         	movff	_textsize,TFT_FillRect@h
  8747   005F60  C0BC  F00B         	movff	_textbgcolor,TFT_FillRect@color
  8748   005F64  C0BD  F00C         	movff	_textbgcolor+1,TFT_FillRect@color+1
  8749   005F68  5021               	movf	TFT_Print@i^0,w,c
  8750   005F6A  025E               	mulwf	_textsize^0,c
  8751   005F6C  50F3               	movf	243,w,c
  8752   005F6E  2458               	addwf	_cursor_x^0,w,c
  8753   005F70  EC09  F029         	call	_TFT_FillRect
  8754   005F74                     l4724:
  8755                           
  8756                           ;tft_st7735.c: 971:         }
  8757   005F74  2A20               	incf	TFT_Print@j^0,f,c
  8758   005F76  90D8               	bcf	status,0,c
  8759   005F78  321E               	rrcf	TFT_Print@line^0,f,c
  8760   005F7A  0E07               	movlw	7
  8761   005F7C  6420               	cpfsgt	TFT_Print@j^0,c
  8762   005F7E  EFC3  F02F         	goto	u5381
  8763   005F82  EFC5  F02F         	goto	u5380
  8764   005F86                     u5381:
  8765   005F86  EF54  F02F         	goto	l417
  8766   005F8A                     u5380:
  8767   005F8A                     
  8768                           ;tft_st7735.c: 972:     }
  8769   005F8A  2A21               	incf	TFT_Print@i^0,f,c
  8770   005F8C  0E04               	movlw	4
  8771   005F8E  6421               	cpfsgt	TFT_Print@i^0,c
  8772   005F90  EFCC  F02F         	goto	u5391
  8773   005F94  EFCE  F02F         	goto	u5390
  8774   005F98                     u5391:
  8775   005F98  EF3F  F02F         	goto	l4702
  8776   005F9C                     u5390:
  8777   005F9C                     
  8778                           ;tft_st7735.c: 973:     if(textbgcolor != textcolor){
  8779   005F9C  0100               	movlb	0	; () banked
  8780   005F9E  51BE               	movf	_textcolor& (0+255),w,b
  8781   005FA0  19BC               	xorwf	_textbgcolor& (0+255),w,b
  8782   005FA2  E109               	bnz	u5400
  8783   005FA4  51BF               	movf	(_textcolor+1)& (0+255),w,b
  8784   005FA6  19BD               	xorwf	(_textbgcolor+1)& (0+255),w,b
  8785   005FA8  B4D8               	btfsc	status,2,c
  8786   005FAA  EFD9  F02F         	goto	u5401
  8787   005FAE  EFDB  F02F         	goto	u5400
  8788   005FB2                     u5401:
  8789   005FB2  EF03  F030         	goto	l4742
  8790   005FB6                     u5400:
  8791   005FB6                     
  8792                           ; BSR set to: 0
  8793                           ;tft_st7735.c: 974:         if(textsize == 1) TFT_DrawVLine(cursor_x + 5, cursor_y, 8, t
      +                          extbgcolor);
  8794   005FB6  045E               	decf	_textsize^0,w,c
  8795   005FB8  A4D8               	btfss	status,2,c
  8796   005FBA  EFE1  F02F         	goto	u5411
  8797   005FBE  EFE3  F02F         	goto	u5410
  8798   005FC2                     u5411:
  8799   005FC2  EFF1  F02F         	goto	l4740
  8800   005FC6                     u5410:
  8801   005FC6                     
  8802                           ; BSR set to: 0
  8803   005FC6  C056  F008         	movff	_cursor_y,TFT_DrawVLine@y
  8804   005FCA  0E08               	movlw	8
  8805   005FCC  6E09               	movwf	TFT_DrawVLine@h^0,c
  8806   005FCE  C0BC  F00A         	movff	_textbgcolor,TFT_DrawVLine@color
  8807   005FD2  C0BD  F00B         	movff	_textbgcolor+1,TFT_DrawVLine@color+1
  8808   005FD6  5058               	movf	_cursor_x^0,w,c
  8809   005FD8  0F05               	addlw	5
  8810   005FDA  EC58  F026         	call	_TFT_DrawVLine
  8811   005FDE  EF03  F030         	goto	l4742
  8812   005FE2                     l4740:
  8813                           
  8814                           ; BSR set to: 0
  8815   005FE2  C056  F008         	movff	_cursor_y,TFT_FillRect@y
  8816   005FE6  C05E  F009         	movff	_textsize,TFT_FillRect@w
  8817   005FEA  505E               	movf	_textsize^0,w,c
  8818   005FEC  0D08               	mullw	8
  8819   005FEE  CFF3 F00A          	movff	prodl,TFT_FillRect@h
  8820   005FF2  C0BC  F00B         	movff	_textbgcolor,TFT_FillRect@color
  8821   005FF6  C0BD  F00C         	movff	_textbgcolor+1,TFT_FillRect@color+1
  8822   005FFA  505E               	movf	_textsize^0,w,c
  8823   005FFC  0D05               	mullw	5
  8824   005FFE  50F3               	movf	243,w,c
  8825   006000  2458               	addwf	_cursor_x^0,w,c
  8826   006002  EC09  F029         	call	_TFT_FillRect
  8827   006006                     l4742:
  8828                           
  8829                           ;tft_st7735.c: 977:     cursor_x += textsize * 6;
  8830   006006  505E               	movf	_textsize^0,w,c
  8831   006008  0D06               	mullw	6
  8832   00600A  50F3               	movf	243,w,c
  8833   00600C  2658               	addwf	_cursor_x^0,f,c
  8834   00600E  50F4               	movf	244,w,c
  8835   006010  2259               	addwfc	(_cursor_x+1)^0,f,c
  8836   006012                     
  8837                           ;tft_st7735.c: 978:     if(cursor_x > ((uint16_t)_width + textsize * 6))
  8838   006012  505E               	movf	_textsize^0,w,c
  8839   006014  0D06               	mullw	6
  8840   006016  CFF3 F019          	movff	prodl,??_TFT_Print
  8841   00601A  CFF4 F01A          	movff	prodh,??_TFT_Print+1
  8842   00601E  505D               	movf	__width^0,w,c
  8843   006020  2619               	addwf	??_TFT_Print^0,f,c
  8844   006022  0E00               	movlw	0
  8845   006024  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8846   006026  5058               	movf	_cursor_x^0,w,c
  8847   006028  5C19               	subwf	??_TFT_Print^0,w,c
  8848   00602A  5059               	movf	(_cursor_x+1)^0,w,c
  8849   00602C  581A               	subwfb	(??_TFT_Print+1)^0,w,c
  8850   00602E  B0D8               	btfsc	status,0,c
  8851   006030  EF1C  F030         	goto	u5421
  8852   006034  EF1E  F030         	goto	u5420
  8853   006038                     u5421:
  8854   006038  EF21  F030         	goto	l4748
  8855   00603C                     u5420:
  8856   00603C                     
  8857                           ;tft_st7735.c: 979:         cursor_x = _width;
  8858   00603C  C05D  F058         	movff	__width,_cursor_x
  8859   006040  6A59               	clrf	(_cursor_x+1)^0,c
  8860   006042                     l4748:
  8861                           
  8862                           ;tft_st7735.c: 980:     if(wrap && (cursor_x + (textsize * 5)) > _width)
  8863   006042  0100               	movlb	0	; () banked
  8864   006044  51C0               	movf	_wrap& (0+255),w,b
  8865   006046  B4D8               	btfsc	status,2,c
  8866   006048  EF28  F030         	goto	u5431
  8867   00604C  EF2A  F030         	goto	u5430
  8868   006050                     u5431:
  8869   006050  EF70  F030         	goto	l414
  8870   006054                     u5430:
  8871   006054                     
  8872                           ; BSR set to: 0
  8873   006054  505E               	movf	_textsize^0,w,c
  8874   006056  0D05               	mullw	5
  8875   006058  CFF3 F019          	movff	prodl,??_TFT_Print
  8876   00605C  CFF4 F01A          	movff	prodh,??_TFT_Print+1
  8877   006060  5058               	movf	_cursor_x^0,w,c
  8878   006062  2619               	addwf	??_TFT_Print^0,f,c
  8879   006064  5059               	movf	(_cursor_x+1)^0,w,c
  8880   006066  221A               	addwfc	(??_TFT_Print+1)^0,f,c
  8881   006068  505D               	movf	__width^0,w,c
  8882   00606A  6E1B               	movwf	(??_TFT_Print+2)^0,c
  8883   00606C  6A1C               	clrf	(??_TFT_Print+3)^0,c
  8884   00606E  5019               	movf	??_TFT_Print^0,w,c
  8885   006070  5C1B               	subwf	(??_TFT_Print+2)^0,w,c
  8886   006072  501C               	movf	(??_TFT_Print+3)^0,w,c
  8887   006074  0A80               	xorlw	128
  8888   006076  6E1D               	movwf	(??_TFT_Print+4)^0,c
  8889   006078  501A               	movf	(??_TFT_Print+1)^0,w,c
  8890   00607A  0A80               	xorlw	128
  8891   00607C  581D               	subwfb	(??_TFT_Print+4)^0,w,c
  8892   00607E  B0D8               	btfsc	status,0,c
  8893   006080  EF44  F030         	goto	u5441
  8894   006084  EF46  F030         	goto	u5440
  8895   006088                     u5441:
  8896   006088  EF70  F030         	goto	l414
  8897   00608C                     u5440:
  8898   00608C                     
  8899                           ; BSR set to: 0
  8900                           ;tft_st7735.c: 981:     {;tft_st7735.c: 982:         cursor_x = 0;
  8901   00608C  0E00               	movlw	0
  8902   00608E  6E59               	movwf	(_cursor_x+1)^0,c
  8903   006090  0E00               	movlw	0
  8904   006092  6E58               	movwf	_cursor_x^0,c
  8905   006094                     
  8906                           ; BSR set to: 0
  8907                           ;tft_st7735.c: 983:         cursor_y += textsize * 8;
  8908   006094  505E               	movf	_textsize^0,w,c
  8909   006096  0D08               	mullw	8
  8910   006098  50F3               	movf	243,w,c
  8911   00609A  2656               	addwf	_cursor_y^0,f,c
  8912   00609C  50F4               	movf	244,w,c
  8913   00609E  2257               	addwfc	(_cursor_y+1)^0,f,c
  8914   0060A0                     
  8915                           ; BSR set to: 0
  8916                           ;tft_st7735.c: 984:         if(cursor_y > ((uint16_t)_height + textsize * 8))
  8917   0060A0  505E               	movf	_textsize^0,w,c
  8918   0060A2  6E19               	movwf	??_TFT_Print^0,c
  8919   0060A4  6A1A               	clrf	(??_TFT_Print+1)^0,c
  8920   0060A6  90D8               	bcf	status,0,c
  8921   0060A8  3619               	rlcf	??_TFT_Print^0,f,c
  8922   0060AA  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8923   0060AC  90D8               	bcf	status,0,c
  8924   0060AE  3619               	rlcf	??_TFT_Print^0,f,c
  8925   0060B0  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8926   0060B2  90D8               	bcf	status,0,c
  8927   0060B4  3619               	rlcf	??_TFT_Print^0,f,c
  8928   0060B6  361A               	rlcf	(??_TFT_Print+1)^0,f,c
  8929   0060B8  505C               	movf	__height^0,w,c
  8930   0060BA  2419               	addwf	??_TFT_Print^0,w,c
  8931   0060BC  6E1B               	movwf	(??_TFT_Print+2)^0,c
  8932   0060BE  0E00               	movlw	0
  8933   0060C0  201A               	addwfc	(??_TFT_Print+1)^0,w,c
  8934   0060C2  6E1C               	movwf	(??_TFT_Print+3)^0,c
  8935   0060C4  5056               	movf	_cursor_y^0,w,c
  8936   0060C6  5C1B               	subwf	(??_TFT_Print+2)^0,w,c
  8937   0060C8  5057               	movf	(_cursor_y+1)^0,w,c
  8938   0060CA  581C               	subwfb	(??_TFT_Print+3)^0,w,c
  8939   0060CC  B0D8               	btfsc	status,0,c
  8940   0060CE  EF6B  F030         	goto	u5451
  8941   0060D2  EF6D  F030         	goto	u5450
  8942   0060D6                     u5451:
  8943   0060D6  EF70  F030         	goto	l414
  8944   0060DA                     u5450:
  8945   0060DA                     
  8946                           ; BSR set to: 0
  8947                           ;tft_st7735.c: 985:             cursor_y = _height;
  8948   0060DA  C05C  F056         	movff	__height,_cursor_y
  8949   0060DE  6A57               	clrf	(_cursor_y+1)^0,c
  8950   0060E0                     l414:
  8951                           
  8952                           ; BSR set to: 0
  8953   0060E0  0012               	return		;funcret
  8954   0060E2                     __end_of_TFT_Print:
  8955                           	callstack 0
  8956                           
  8957 ;; *************** function _TFT_DrawVLine *****************
  8958 ;; Defined at:
  8959 ;;		line 625 in file "tft_st7735.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  x               1    wreg     unsigned char 
  8962 ;;  y               1    7[COMRAM] unsigned char 
  8963 ;;  h               1    8[COMRAM] unsigned char 
  8964 ;;  color           2    9[COMRAM] unsigned short 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;  x               1   20[COMRAM] unsigned char 
  8967 ;;  lo              1   19[COMRAM] unsigned char 
  8968 ;;  hi              1   18[COMRAM] unsigned char 
  8969 ;; Return value:  Size  Location     Type
  8970 ;;                  1    wreg      void 
  8971 ;; Registers used:
  8972 ;;		wreg, status,2, status,0, cstack
  8973 ;; Tracked objects:
  8974 ;;		On entry : 0/0
  8975 ;;		On exit  : 0/0
  8976 ;;		Unchanged: 0/0
  8977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8978 ;;      Params:         4       0       0       0       0       0       0       0       0
  8979 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8980 ;;      Temps:          7       0       0       0       0       0       0       0       0
  8981 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8982 ;;Total ram usage:       14 bytes
  8983 ;; Hardware stack levels used: 1
  8984 ;; Hardware stack levels required when called: 3
  8985 ;; This function calls:
  8986 ;;		_SPI_Write
  8987 ;;		_SetAddrWindow
  8988 ;; This function is called by:
  8989 ;;		_TFT_Print
  8990 ;;		_TFT_DrawLine
  8991 ;;		_TFT_FillCircle
  8992 ;;		_TFT_FillCircleHelper
  8993 ;;		_TFT_DrawRect
  8994 ;;		_TFT_DrawRoundRect
  8995 ;;		_TFT_CustomChar
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text27
  9000   004CB0                     __ptext27:
  9001                           	callstack 0
  9002   004CB0                     _TFT_DrawVLine:
  9003                           	callstack 25
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;incstack = 0
  9007                           ;TFT_DrawVLine@x stored from wreg
  9008   004CB0  6E15               	movwf	TFT_DrawVLine@x^0,c
  9009   004CB2                     
  9010                           ;tft_st7735.c: 625: void TFT_DrawVLine(uint8_t x, uint8_t y, uint8_t h, uint16_t color);
      +                          tft_st7735.c: 626: {;tft_st7735.c: 627:     if((x < _width) && (y < _height) && h)
  9011   004CB2  505D               	movf	__width^0,w,c
  9012   004CB4  5C15               	subwf	TFT_DrawVLine@x^0,w,c
  9013   004CB6  B0D8               	btfsc	status,0,c
  9014   004CB8  EF60  F026         	goto	u4891
  9015   004CBC  EF62  F026         	goto	u4890
  9016   004CC0                     u4891:
  9017   004CC0  EFB5  F026         	goto	l278
  9018   004CC4                     u4890:
  9019   004CC4  505C               	movf	__height^0,w,c
  9020   004CC6  5C08               	subwf	TFT_DrawVLine@y^0,w,c
  9021   004CC8  B0D8               	btfsc	status,0,c
  9022   004CCA  EF69  F026         	goto	u4901
  9023   004CCE  EF6B  F026         	goto	u4900
  9024   004CD2                     u4901:
  9025   004CD2  EFB5  F026         	goto	l278
  9026   004CD6                     u4900:
  9027   004CD6  5009               	movf	TFT_DrawVLine@h^0,w,c
  9028   004CD8  B4D8               	btfsc	status,2,c
  9029   004CDA  EF71  F026         	goto	u4911
  9030   004CDE  EF73  F026         	goto	u4910
  9031   004CE2                     u4911:
  9032   004CE2  EFB5  F026         	goto	l278
  9033   004CE6                     u4910:
  9034   004CE6                     
  9035                           ;tft_st7735.c: 628:     {;tft_st7735.c: 629:         uint8_t hi = color >> 8, lo = color
      +                          ;
  9036   004CE6  500B               	movf	(TFT_DrawVLine@color+1)^0,w,c
  9037   004CE8  6E13               	movwf	TFT_DrawVLine@hi^0,c
  9038   004CEA  C00A  F014         	movff	TFT_DrawVLine@color,TFT_DrawVLine@lo
  9039   004CEE                     
  9040                           ;tft_st7735.c: 630:         if((y + h - 1) >= _height)
  9041   004CEE  505C               	movf	__height^0,w,c
  9042   004CF0  6E0C               	movwf	??_TFT_DrawVLine^0,c
  9043   004CF2  6A0D               	clrf	(??_TFT_DrawVLine+1)^0,c
  9044   004CF4  5009               	movf	TFT_DrawVLine@h^0,w,c
  9045   004CF6  C008  F00E         	movff	TFT_DrawVLine@y,??_TFT_DrawVLine+2
  9046   004CFA  6A0F               	clrf	(??_TFT_DrawVLine+3)^0,c
  9047   004CFC  260E               	addwf	(??_TFT_DrawVLine+2)^0,f,c
  9048   004CFE  0E00               	movlw	0
  9049   004D00  220F               	addwfc	(??_TFT_DrawVLine+3)^0,f,c
  9050   004D02  0EFF               	movlw	255
  9051   004D04  240E               	addwf	(??_TFT_DrawVLine+2)^0,w,c
  9052   004D06  6E10               	movwf	(??_TFT_DrawVLine+4)^0,c
  9053   004D08  0EFF               	movlw	255
  9054   004D0A  200F               	addwfc	(??_TFT_DrawVLine+3)^0,w,c
  9055   004D0C  6E11               	movwf	(??_TFT_DrawVLine+5)^0,c
  9056   004D0E  500C               	movf	??_TFT_DrawVLine^0,w,c
  9057   004D10  5C10               	subwf	(??_TFT_DrawVLine+4)^0,w,c
  9058   004D12  5011               	movf	(??_TFT_DrawVLine+5)^0,w,c
  9059   004D14  0A80               	xorlw	128
  9060   004D16  6E12               	movwf	(??_TFT_DrawVLine+6)^0,c
  9061   004D18  500D               	movf	(??_TFT_DrawVLine+1)^0,w,c
  9062   004D1A  0A80               	xorlw	128
  9063   004D1C  5812               	subwfb	(??_TFT_DrawVLine+6)^0,w,c
  9064   004D1E  A0D8               	btfss	status,0,c
  9065   004D20  EF94  F026         	goto	u4921
  9066   004D24  EF96  F026         	goto	u4920
  9067   004D28                     u4921:
  9068   004D28  EF99  F026         	goto	l4418
  9069   004D2C                     u4920:
  9070   004D2C                     
  9071                           ;tft_st7735.c: 631:             h = _height - y;
  9072   004D2C  5008               	movf	TFT_DrawVLine@y^0,w,c
  9073   004D2E  5C5C               	subwf	__height^0,w,c
  9074   004D30  6E09               	movwf	TFT_DrawVLine@h^0,c
  9075   004D32                     l4418:
  9076                           
  9077                           ;tft_st7735.c: 632:         LATDbits.LD0 = 0;
  9078   004D32  908C               	bcf	140,0,c	;volatile
  9079   004D34                     
  9080                           ;tft_st7735.c: 633:         SetAddrWindow(x, y, 1, h);
  9081   004D34  C008  F003         	movff	TFT_DrawVLine@y,SetAddrWindow@y
  9082   004D38  0E01               	movlw	1
  9083   004D3A  6E04               	movwf	SetAddrWindow@w^0,c
  9084   004D3C  C009  F005         	movff	TFT_DrawVLine@h,SetAddrWindow@h
  9085   004D40  5015               	movf	TFT_DrawVLine@x^0,w,c
  9086   004D42  EC85  F024         	call	_SetAddrWindow
  9087                           
  9088                           ;tft_st7735.c: 634:         while(h--){
  9089   004D46  EFAB  F026         	goto	l4424
  9090   004D4A                     l4422:
  9091                           
  9092                           ;tft_st7735.c: 635:             SPI_Write(hi);
  9093   004D4A  5013               	movf	TFT_DrawVLine@hi^0,w,c
  9094   004D4C  EC12  F023         	call	_SPI_Write
  9095                           
  9096                           ;tft_st7735.c: 636:             SPI_Write(lo);
  9097   004D50  5014               	movf	TFT_DrawVLine@lo^0,w,c
  9098   004D52  EC12  F023         	call	_SPI_Write
  9099   004D56                     l4424:
  9100                           
  9101                           ;tft_st7735.c: 634:         while(h--){
  9102   004D56  0609               	decf	TFT_DrawVLine@h^0,f,c
  9103   004D58  2809               	incf	TFT_DrawVLine@h^0,w,c
  9104   004D5A  A4D8               	btfss	status,2,c
  9105   004D5C  EFB2  F026         	goto	u4931
  9106   004D60  EFB4  F026         	goto	u4930
  9107   004D64                     u4931:
  9108   004D64  EFA5  F026         	goto	l4422
  9109   004D68                     u4930:
  9110   004D68                     
  9111                           ;tft_st7735.c: 638:         LATDbits.LD0 = 1;
  9112   004D68  808C               	bsf	140,0,c	;volatile
  9113   004D6A                     l278:
  9114   004D6A  0012               	return		;funcret
  9115   004D6C                     __end_of_TFT_DrawVLine:
  9116                           	callstack 0
  9117                           
  9118 ;; *************** function _TFT_DrawPixel *****************
  9119 ;; Defined at:
  9120 ;;		line 480 in file "tft_st7735.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  x               1    wreg     unsigned char 
  9123 ;;  y               1    7[COMRAM] unsigned char 
  9124 ;;  color           2    8[COMRAM] unsigned short 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  x               1   10[COMRAM] unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9136 ;;      Params:         3       0       0       0       0       0       0       0       0
  9137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9139 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9140 ;;Total ram usage:        4 bytes
  9141 ;; Hardware stack levels used: 1
  9142 ;; Hardware stack levels required when called: 3
  9143 ;; This function calls:
  9144 ;;		_SPI_Write
  9145 ;;		_SetAddrWindow
  9146 ;; This function is called by:
  9147 ;;		_TFT_Print
  9148 ;;		_WriteLine
  9149 ;;		_TFT_DrawCircle
  9150 ;;		_TFT_DrawCircleHelper
  9151 ;;		_TFT_CustomChar
  9152 ;; This function uses a non-reentrant model
  9153 ;;
  9154                           
  9155                           	psect	text28
  9156   00481A                     __ptext28:
  9157                           	callstack 0
  9158   00481A                     _TFT_DrawPixel:
  9159                           	callstack 25
  9160                           
  9161                           ;incstack = 0
  9162                           ;TFT_DrawPixel@x stored from wreg
  9163   00481A  6E0B               	movwf	TFT_DrawPixel@x^0,c
  9164   00481C                     
  9165                           ;tft_st7735.c: 480: void TFT_DrawPixel(uint8_t x, uint8_t y, uint16_t color);tft_st7735.
      +                          c: 481: {;tft_st7735.c: 482:     if((x < _width) && (y < _height))
  9166   00481C  505D               	movf	__width^0,w,c
  9167   00481E  5C0B               	subwf	TFT_DrawPixel@x^0,w,c
  9168   004820  B0D8               	btfsc	status,0,c
  9169   004822  EF15  F024         	goto	u4871
  9170   004826  EF17  F024         	goto	u4870
  9171   00482A                     u4871:
  9172   00482A  EF31  F024         	goto	l215
  9173   00482E                     u4870:
  9174   00482E  505C               	movf	__height^0,w,c
  9175   004830  5C08               	subwf	TFT_DrawPixel@y^0,w,c
  9176   004832  B0D8               	btfsc	status,0,c
  9177   004834  EF1E  F024         	goto	u4881
  9178   004838  EF20  F024         	goto	u4880
  9179   00483C                     u4881:
  9180   00483C  EF31  F024         	goto	l215
  9181   004840                     u4880:
  9182   004840                     
  9183                           ;tft_st7735.c: 483:     {;tft_st7735.c: 484:         LATDbits.LD0 = 0;
  9184   004840  908C               	bcf	140,0,c	;volatile
  9185   004842                     
  9186                           ;tft_st7735.c: 485:         SetAddrWindow(x, y, 1, 1);
  9187   004842  C008  F003         	movff	TFT_DrawPixel@y,SetAddrWindow@y
  9188   004846  0E01               	movlw	1
  9189   004848  6E04               	movwf	SetAddrWindow@w^0,c
  9190   00484A  0E01               	movlw	1
  9191   00484C  6E05               	movwf	SetAddrWindow@h^0,c
  9192   00484E  500B               	movf	TFT_DrawPixel@x^0,w,c
  9193   004850  EC85  F024         	call	_SetAddrWindow
  9194   004854                     
  9195                           ;tft_st7735.c: 486:         SPI_Write(color >> 8);
  9196   004854  500A               	movf	(TFT_DrawPixel@color+1)^0,w,c
  9197   004856  EC12  F023         	call	_SPI_Write
  9198   00485A                     
  9199                           ;tft_st7735.c: 487:         SPI_Write(color & 0xFF);
  9200   00485A  5009               	movf	TFT_DrawPixel@color^0,w,c
  9201   00485C  EC12  F023         	call	_SPI_Write
  9202   004860                     
  9203                           ;tft_st7735.c: 488:         LATDbits.LD0 = 1;
  9204   004860  808C               	bsf	140,0,c	;volatile
  9205   004862                     l215:
  9206   004862  0012               	return		;funcret
  9207   004864                     __end_of_TFT_DrawPixel:
  9208                           	callstack 0
  9209                           
  9210 ;; *************** function _TFT_ST7735_Init *****************
  9211 ;; Defined at:
  9212 ;;		line 443 in file "tft_st7735.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  options         1    wreg     unsigned char 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  options         1   13[COMRAM] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0
  9227 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9228 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9229 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9230 ;;Total ram usage:        2 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; Hardware stack levels required when called: 3
  9233 ;; This function calls:
  9234 ;;		_DisplayInit
  9235 ;;		_SPI_Init_Master
  9236 ;;		_SPI_Write
  9237 ;;		_TFT_SetRotation
  9238 ;;		_WriteCommand
  9239 ;; This function is called by:
  9240 ;;		_main
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text29
  9245   004D6C                     __ptext29:
  9246                           	callstack 0
  9247   004D6C                     _TFT_ST7735_Init:
  9248                           	callstack 27
  9249                           
  9250                           ;incstack = 0
  9251                           ;TFT_ST7735_Init@options stored from wreg
  9252   004D6C  6E0E               	movwf	TFT_ST7735_Init@options^0,c
  9253   004D6E                     
  9254                           ;tft_st7735.c: 443: void TFT_ST7735_Init(uint8_t options);tft_st7735.c: 444: {;tft_st773
      +                          5.c: 445:     TRISDbits.RD0 = 0;
  9255   004D6E  9095               	bcf	149,0,c	;volatile
  9256                           
  9257                           ;tft_st7735.c: 446:     TRISDbits.RD2 = 0;
  9258   004D70  9495               	bcf	149,2,c	;volatile
  9259                           
  9260                           ;tft_st7735.c: 447:     TRISDbits.RD1 = 0;
  9261   004D72  9295               	bcf	149,1,c	;volatile
  9262                           
  9263                           ;tft_st7735.c: 448:     LATDbits.LD1 = 0;
  9264   004D74  928C               	bcf	140,1,c	;volatile
  9265   004D76                     
  9266                           ;tft_st7735.c: 449:     _delay((unsigned long)((10)*(48000000/4000.0)));
  9267   004D76  0E9C               	movlw	156
  9268   004D78  6E0D               	movwf	??_TFT_ST7735_Init^0,c
  9269   004D7A  0ED7               	movlw	215
  9270   004D7C                     u6737:
  9271   004D7C  2EE8               	decfsz	wreg,f,c
  9272   004D7E  D7FE               	bra	u6737
  9273   004D80  2E0D               	decfsz	??_TFT_ST7735_Init^0,f,c
  9274   004D82  D7FC               	bra	u6737
  9275   004D84  0000               	nop	
  9276   004D86                     
  9277                           ;tft_st7735.c: 450:     LATDbits.LD1 = 1;
  9278   004D86  828C               	bsf	140,1,c	;volatile
  9279   004D88                     
  9280                           ;tft_st7735.c: 451:     LATDbits.LD0 = 1;
  9281   004D88  808C               	bsf	140,0,c	;volatile
  9282   004D8A                     
  9283                           ;tft_st7735.c: 452:     LATDbits.LD2 = 0;
  9284   004D8A  948C               	bcf	140,2,c	;volatile
  9285   004D8C                     
  9286                           ;tft_st7735.c: 453:     SPI_Init_Master(0x00, 0x02, 1);
  9287   004D8C  0E02               	movlw	2
  9288   004D8E  6E01               	movwf	SPI_Init_Master@modo^0,c
  9289   004D90  0E01               	movlw	1
  9290   004D92  6E02               	movwf	SPI_Init_Master@smp^0,c
  9291   004D94  0E00               	movlw	0
  9292   004D96  EC16  F025         	call	_SPI_Init_Master
  9293   004D9A                     
  9294                           ;tft_st7735.c: 455:     DisplayInit(Rcmd1);
  9295   004D9A  0E7A               	movlw	low _Rcmd1
  9296   004D9C  6E06               	movwf	DisplayInit@addr^0,c
  9297   004D9E  0E7D               	movlw	high _Rcmd1
  9298   004DA0  6E07               	movwf	(DisplayInit@addr+1)^0,c
  9299   004DA2  EC18  F027         	call	_DisplayInit	;wreg free
  9300   004DA6                     
  9301                           ;tft_st7735.c: 456:     _height = 128;
  9302   004DA6  0E80               	movlw	128
  9303   004DA8  6E5C               	movwf	__height^0,c
  9304   004DAA                     
  9305                           ;tft_st7735.c: 457:     _width = 128;
  9306   004DAA  0E80               	movlw	128
  9307   004DAC  6E5D               	movwf	__width^0,c
  9308   004DAE                     
  9309                           ;tft_st7735.c: 458:     DisplayInit(Rcmd2green144);
  9310   004DAE  0E8E               	movlw	low _Rcmd2green144
  9311   004DB0  6E06               	movwf	DisplayInit@addr^0,c
  9312   004DB2  0E7D               	movlw	high _Rcmd2green144
  9313   004DB4  6E07               	movwf	(DisplayInit@addr+1)^0,c
  9314   004DB6  EC18  F027         	call	_DisplayInit	;wreg free
  9315   004DBA                     
  9316                           ;tft_st7735.c: 459:         _colstart = 0;
  9317   004DBA  0E00               	movlw	0
  9318   004DBC  6E5B               	movwf	__colstart^0,c
  9319   004DBE                     
  9320                           ;tft_st7735.c: 460:         _rowstart = 0;
  9321   004DBE  0E00               	movlw	0
  9322   004DC0  0100               	movlb	0	; () banked
  9323   004DC2  6FB9               	movwf	__rowstart& (0+255),b
  9324   004DC4                     
  9325                           ; BSR set to: 0
  9326                           ;tft_st7735.c: 462:     DisplayInit(Rcmd3);
  9327   004DC4  0E4F               	movlw	low _Rcmd3
  9328   004DC6  6E06               	movwf	DisplayInit@addr^0,c
  9329   004DC8  0E7D               	movlw	high _Rcmd3
  9330   004DCA  6E07               	movwf	(DisplayInit@addr+1)^0,c
  9331   004DCC  EC18  F027         	call	_DisplayInit	;wreg free
  9332   004DD0                     
  9333                           ;tft_st7735.c: 464:     if((options == 0x02) || (options == 0x04)){
  9334   004DD0  0E02               	movlw	2
  9335   004DD2  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9336   004DD4  B4D8               	btfsc	status,2,c
  9337   004DD6  EFEF  F026         	goto	u5471
  9338   004DDA  EFF1  F026         	goto	u5470
  9339   004DDE                     u5471:
  9340   004DDE  EFFA  F026         	goto	l208
  9341   004DE2                     u5470:
  9342   004DE2  0E04               	movlw	4
  9343   004DE4  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9344   004DE6  A4D8               	btfss	status,2,c
  9345   004DE8  EFF8  F026         	goto	u5481
  9346   004DEC  EFFA  F026         	goto	u5480
  9347   004DF0                     u5481:
  9348   004DF0  EF02  F027         	goto	l4806
  9349   004DF4                     u5480:
  9350   004DF4                     l208:
  9351                           
  9352                           ;tft_st7735.c: 465:         LATDbits.LD0 = 0;
  9353   004DF4  908C               	bcf	140,0,c	;volatile
  9354   004DF6                     
  9355                           ;tft_st7735.c: 466:         WriteCommand(0x36);
  9356   004DF6  0E36               	movlw	54
  9357   004DF8  ECFD  F022         	call	_WriteCommand
  9358   004DFC                     
  9359                           ;tft_st7735.c: 467:         SPI_Write(0xC0);
  9360   004DFC  0EC0               	movlw	192
  9361   004DFE  EC12  F023         	call	_SPI_Write
  9362   004E02                     
  9363                           ;tft_st7735.c: 468:         LATDbits.LD0 = 1;
  9364   004E02  808C               	bsf	140,0,c	;volatile
  9365   004E04                     l4806:
  9366                           
  9367                           ;tft_st7735.c: 470:     if(options == 0x05){
  9368   004E04  0E05               	movlw	5
  9369   004E06  180E               	xorwf	TFT_ST7735_Init@options^0,w,c
  9370   004E08  A4D8               	btfss	status,2,c
  9371   004E0A  EF09  F027         	goto	u5491
  9372   004E0E  EF0B  F027         	goto	u5490
  9373   004E12                     u5491:
  9374   004E12  EF12  F027         	goto	l209
  9375   004E16                     u5490:
  9376   004E16                     
  9377                           ;tft_st7735.c: 471:         tabcolor = 0x01;
  9378   004E16  0E01               	movlw	1
  9379   004E18  6E5A               	movwf	_tabcolor^0,c
  9380   004E1A                     
  9381                           ;tft_st7735.c: 472:         TFT_SetRotation(2);
  9382   004E1A  0E02               	movlw	2
  9383   004E1C  ECF7  F02B         	call	_TFT_SetRotation
  9384                           
  9385                           ;tft_st7735.c: 473:     }
  9386   004E20  EF17  F027         	goto	l211
  9387   004E24                     l209:
  9388                           
  9389                           ;tft_st7735.c: 475:         tabcolor = options;
  9390   004E24  C00E  F05A         	movff	TFT_ST7735_Init@options,_tabcolor
  9391   004E28                     
  9392                           ;tft_st7735.c: 476:         TFT_SetRotation(0);
  9393   004E28  0E00               	movlw	0
  9394   004E2A  ECF7  F02B         	call	_TFT_SetRotation
  9395   004E2E                     l211:
  9396   004E2E  0012               	return		;funcret
  9397   004E30                     __end_of_TFT_ST7735_Init:
  9398                           	callstack 0
  9399                           
  9400 ;; *************** function _TFT_SetRotation *****************
  9401 ;; Defined at:
  9402 ;;		line 509 in file "tft_st7735.c"
  9403 ;; Parameters:    Size  Location     Type
  9404 ;;  m               1    wreg     unsigned char 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  m               1    2[COMRAM] unsigned char 
  9407 ;;  madctl          1    3[COMRAM] unsigned char 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  1    wreg      void 
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9417 ;;      Params:         0       0       0       0       0       0       0       0       0
  9418 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9420 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9421 ;;Total ram usage:        2 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 2
  9424 ;; This function calls:
  9425 ;;		_SPI_Write
  9426 ;;		_WriteCommand
  9427 ;; This function is called by:
  9428 ;;		_main
  9429 ;;		_TFT_ST7735_Init
  9430 ;; This function uses a non-reentrant model
  9431 ;;
  9432                           
  9433                           	psect	text30
  9434   0057EE                     __ptext30:
  9435                           	callstack 0
  9436   0057EE                     _TFT_SetRotation:
  9437                           	callstack 28
  9438                           
  9439                           ;incstack = 0
  9440                           ;TFT_SetRotation@m stored from wreg
  9441   0057EE  6E03               	movwf	TFT_SetRotation@m^0,c
  9442   0057F0                     
  9443                           ;tft_st7735.c: 509: void TFT_SetRotation(uint8_t m);tft_st7735.c: 510: {;tft_st7735.c: 5
      +                          11:     uint8_t madctl = 0;
  9444   0057F0  0E00               	movlw	0
  9445   0057F2  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9446   0057F4                     
  9447                           ;tft_st7735.c: 512:     rotation = m & 3;
  9448   0057F4  5003               	movf	TFT_SetRotation@m^0,w,c
  9449   0057F6  0B03               	andlw	3
  9450   0057F8  0100               	movlb	0	; () banked
  9451   0057FA  6FB8               	movwf	_rotation& (0+255),b
  9452                           
  9453                           ;tft_st7735.c: 514:     switch(rotation)
  9454   0057FC  EFD8  F02C         	goto	l4592
  9455   005800                     l4502:
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;tft_st7735.c: 517:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9459   005800  0E02               	movlw	2
  9460   005802  185A               	xorwf	_tabcolor^0,w,c
  9461   005804  B4D8               	btfsc	status,2,c
  9462   005806  EF07  F02C         	goto	u4981
  9463   00580A  EF09  F02C         	goto	u4980
  9464   00580E                     u4981:
  9465   00580E  EF12  F02C         	goto	l4506
  9466   005812                     u4980:
  9467   005812                     
  9468                           ; BSR set to: 0
  9469   005812  0E04               	movlw	4
  9470   005814  185A               	xorwf	_tabcolor^0,w,c
  9471   005816  A4D8               	btfss	status,2,c
  9472   005818  EF10  F02C         	goto	u4991
  9473   00581C  EF12  F02C         	goto	u4990
  9474   005820                     u4991:
  9475   005820  EF16  F02C         	goto	l4508
  9476   005824                     u4990:
  9477   005824                     l4506:
  9478                           
  9479                           ; BSR set to: 0
  9480                           ;tft_st7735.c: 518:                 madctl = 0x40 | 0x80 | 0x00;
  9481   005824  0EC0               	movlw	192
  9482   005826  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9483                           
  9484                           ;tft_st7735.c: 519:             }else{
  9485   005828  EF18  F02C         	goto	l4510
  9486   00582C                     l4508:
  9487                           
  9488                           ; BSR set to: 0
  9489                           ;tft_st7735.c: 520:                 madctl = 0x40 | 0x80 | 0x08;
  9490   00582C  0EC8               	movlw	200
  9491   00582E  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9492   005830                     l4510:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;tft_st7735.c: 523:             if(tabcolor == 0x01){
  9496   005830  045A               	decf	_tabcolor^0,w,c
  9497   005832  A4D8               	btfss	status,2,c
  9498   005834  EF1E  F02C         	goto	u5001
  9499   005838  EF20  F02C         	goto	u5000
  9500   00583C                     u5001:
  9501   00583C  EF26  F02C         	goto	l4514
  9502   005840                     u5000:
  9503   005840                     l4512:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;tft_st7735.c: 524:                 _height = 128;
  9507   005840  0E80               	movlw	128
  9508   005842  6E5C               	movwf	__height^0,c
  9509                           
  9510                           ;tft_st7735.c: 525:                 _width = 128;
  9511   005844  0E80               	movlw	128
  9512   005846  6E5D               	movwf	__width^0,c
  9513                           
  9514                           ;tft_st7735.c: 526:             }else if (tabcolor == 0x04){
  9515   005848  EF39  F02C         	goto	l4520
  9516   00584C                     l4514:
  9517                           
  9518                           ; BSR set to: 0
  9519   00584C  0E04               	movlw	4
  9520   00584E  185A               	xorwf	_tabcolor^0,w,c
  9521   005850  A4D8               	btfss	status,2,c
  9522   005852  EF2D  F02C         	goto	u5011
  9523   005856  EF2F  F02C         	goto	u5010
  9524   00585A                     u5011:
  9525   00585A  EF35  F02C         	goto	l4518
  9526   00585E                     u5010:
  9527   00585E                     l4516:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;tft_st7735.c: 527:                 _height = 160;
  9531   00585E  0EA0               	movlw	160
  9532   005860  6E5C               	movwf	__height^0,c
  9533                           
  9534                           ;tft_st7735.c: 528:                 _width = 80;
  9535   005862  0E50               	movlw	80
  9536   005864  6E5D               	movwf	__width^0,c
  9537                           
  9538                           ;tft_st7735.c: 529:             }else{
  9539   005866  EF39  F02C         	goto	l4520
  9540   00586A                     l4518:
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;tft_st7735.c: 530:                 _height = 160;
  9544   00586A  0EA0               	movlw	160
  9545   00586C  6E5C               	movwf	__height^0,c
  9546                           
  9547                           ;tft_st7735.c: 531:                 _width = 128;
  9548   00586E  0E80               	movlw	128
  9549   005870  6E5D               	movwf	__width^0,c
  9550   005872                     l4520:
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;tft_st7735.c: 533:             _xstart = _colstart;
  9554   005872  C05B  F0BB         	movff	__colstart,__xstart
  9555   005876                     
  9556                           ; BSR set to: 0
  9557                           ;tft_st7735.c: 534:             _ystart = _rowstart;
  9558   005876  C0B9  F0BA         	movff	__rowstart,__ystart
  9559                           
  9560                           ;tft_st7735.c: 535:             break;
  9561   00587A  EFEB  F02C         	goto	l231
  9562   00587E                     l4524:
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;tft_st7735.c: 538:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9566   00587E  0E02               	movlw	2
  9567   005880  185A               	xorwf	_tabcolor^0,w,c
  9568   005882  B4D8               	btfsc	status,2,c
  9569   005884  EF46  F02C         	goto	u5021
  9570   005888  EF48  F02C         	goto	u5020
  9571   00588C                     u5021:
  9572   00588C  EF51  F02C         	goto	l4528
  9573   005890                     u5020:
  9574   005890                     
  9575                           ; BSR set to: 0
  9576   005890  0E04               	movlw	4
  9577   005892  185A               	xorwf	_tabcolor^0,w,c
  9578   005894  A4D8               	btfss	status,2,c
  9579   005896  EF4F  F02C         	goto	u5031
  9580   00589A  EF51  F02C         	goto	u5030
  9581   00589E                     u5031:
  9582   00589E  EF55  F02C         	goto	l4530
  9583   0058A2                     u5030:
  9584   0058A2                     l4528:
  9585                           
  9586                           ; BSR set to: 0
  9587                           ;tft_st7735.c: 539:                 madctl = 0x80 | 0x20 | 0x00;
  9588   0058A2  0EA0               	movlw	160
  9589   0058A4  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9590                           
  9591                           ;tft_st7735.c: 540:             }else{
  9592   0058A6  EF57  F02C         	goto	l4532
  9593   0058AA                     l4530:
  9594                           
  9595                           ; BSR set to: 0
  9596                           ;tft_st7735.c: 541:                 madctl = 0x80 | 0x20 | 0x08;
  9597   0058AA  0EA8               	movlw	168
  9598   0058AC  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9599   0058AE                     l4532:
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;tft_st7735.c: 544:             if(tabcolor == 0x01){
  9603   0058AE  045A               	decf	_tabcolor^0,w,c
  9604   0058B0  A4D8               	btfss	status,2,c
  9605   0058B2  EF5D  F02C         	goto	u5041
  9606   0058B6  EF5F  F02C         	goto	u5040
  9607   0058BA                     u5041:
  9608   0058BA  EF65  F02C         	goto	l4536
  9609   0058BE                     u5040:
  9610   0058BE                     l4534:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;tft_st7735.c: 545:                 _width = 128;
  9614   0058BE  0E80               	movlw	128
  9615   0058C0  6E5D               	movwf	__width^0,c
  9616                           
  9617                           ;tft_st7735.c: 546:                 _height = 128;
  9618   0058C2  0E80               	movlw	128
  9619   0058C4  6E5C               	movwf	__height^0,c
  9620                           
  9621                           ;tft_st7735.c: 547:             }else if (tabcolor == 0x04){
  9622   0058C6  EF78  F02C         	goto	l4542
  9623   0058CA                     l4536:
  9624                           
  9625                           ; BSR set to: 0
  9626   0058CA  0E04               	movlw	4
  9627   0058CC  185A               	xorwf	_tabcolor^0,w,c
  9628   0058CE  A4D8               	btfss	status,2,c
  9629   0058D0  EF6C  F02C         	goto	u5051
  9630   0058D4  EF6E  F02C         	goto	u5050
  9631   0058D8                     u5051:
  9632   0058D8  EF74  F02C         	goto	l4540
  9633   0058DC                     u5050:
  9634   0058DC                     l4538:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;tft_st7735.c: 548:                 _width = 160;
  9638   0058DC  0EA0               	movlw	160
  9639   0058DE  6E5D               	movwf	__width^0,c
  9640                           
  9641                           ;tft_st7735.c: 549:                 _height = 80;
  9642   0058E0  0E50               	movlw	80
  9643   0058E2  6E5C               	movwf	__height^0,c
  9644                           
  9645                           ;tft_st7735.c: 550:             }else {
  9646   0058E4  EF78  F02C         	goto	l4542
  9647   0058E8                     l4540:
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;tft_st7735.c: 551:                 _width = 160;
  9651   0058E8  0EA0               	movlw	160
  9652   0058EA  6E5D               	movwf	__width^0,c
  9653                           
  9654                           ;tft_st7735.c: 552:                 _height = 128;
  9655   0058EC  0E80               	movlw	128
  9656   0058EE  6E5C               	movwf	__height^0,c
  9657   0058F0                     l4542:
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;tft_st7735.c: 554:             _ystart = _colstart;
  9661   0058F0  C05B  F0BA         	movff	__colstart,__ystart
  9662   0058F4                     
  9663                           ; BSR set to: 0
  9664                           ;tft_st7735.c: 555:             _xstart = _rowstart;
  9665   0058F4  C0B9  F0BB         	movff	__rowstart,__xstart
  9666                           
  9667                           ;tft_st7735.c: 556:             break;
  9668   0058F8  EFEB  F02C         	goto	l231
  9669   0058FC                     l4546:
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;tft_st7735.c: 559:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9673   0058FC  0E02               	movlw	2
  9674   0058FE  185A               	xorwf	_tabcolor^0,w,c
  9675   005900  B4D8               	btfsc	status,2,c
  9676   005902  EF85  F02C         	goto	u5061
  9677   005906  EF87  F02C         	goto	u5060
  9678   00590A                     u5061:
  9679   00590A  EF90  F02C         	goto	l4550
  9680   00590E                     u5060:
  9681   00590E                     
  9682                           ; BSR set to: 0
  9683   00590E  0E04               	movlw	4
  9684   005910  185A               	xorwf	_tabcolor^0,w,c
  9685   005912  A4D8               	btfss	status,2,c
  9686   005914  EF8E  F02C         	goto	u5071
  9687   005918  EF90  F02C         	goto	u5070
  9688   00591C                     u5071:
  9689   00591C  EF94  F02C         	goto	l4552
  9690   005920                     u5070:
  9691   005920                     l4550:
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;tft_st7735.c: 560:                 madctl = 0x00;
  9695   005920  0E00               	movlw	0
  9696   005922  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9697                           
  9698                           ;tft_st7735.c: 561:             }else{
  9699   005924  EF96  F02C         	goto	l4554
  9700   005928                     l4552:
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;tft_st7735.c: 562:                 madctl = 0x08;
  9704   005928  0E08               	movlw	8
  9705   00592A  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9706   00592C                     l4554:
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;tft_st7735.c: 565:             if(tabcolor == 0x01){
  9710   00592C  045A               	decf	_tabcolor^0,w,c
  9711   00592E  A4D8               	btfss	status,2,c
  9712   005930  EF9C  F02C         	goto	u5081
  9713   005934  EF9E  F02C         	goto	u5080
  9714   005938                     u5081:
  9715   005938  EFA0  F02C         	goto	l4558
  9716   00593C                     u5080:
  9717   00593C  EF20  F02C         	goto	l4512
  9718   005940                     l4558:
  9719                           
  9720                           ; BSR set to: 0
  9721   005940  0E04               	movlw	4
  9722   005942  185A               	xorwf	_tabcolor^0,w,c
  9723   005944  A4D8               	btfss	status,2,c
  9724   005946  EFA7  F02C         	goto	u5091
  9725   00594A  EFA9  F02C         	goto	u5090
  9726   00594E                     u5091:
  9727   00594E  EF35  F02C         	goto	l4518
  9728   005952                     u5090:
  9729   005952  EF2F  F02C         	goto	l4516
  9730   005956                     l4568:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;tft_st7735.c: 580:             if((tabcolor == 0x02) || (tabcolor == 0x04)){
  9734   005956  0E02               	movlw	2
  9735   005958  185A               	xorwf	_tabcolor^0,w,c
  9736   00595A  B4D8               	btfsc	status,2,c
  9737   00595C  EFB2  F02C         	goto	u5101
  9738   005960  EFB4  F02C         	goto	u5100
  9739   005964                     u5101:
  9740   005964  EFBD  F02C         	goto	l4572
  9741   005968                     u5100:
  9742   005968                     
  9743                           ; BSR set to: 0
  9744   005968  0E04               	movlw	4
  9745   00596A  185A               	xorwf	_tabcolor^0,w,c
  9746   00596C  A4D8               	btfss	status,2,c
  9747   00596E  EFBB  F02C         	goto	u5111
  9748   005972  EFBD  F02C         	goto	u5110
  9749   005976                     u5111:
  9750   005976  EFC1  F02C         	goto	l4574
  9751   00597A                     u5110:
  9752   00597A                     l4572:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;tft_st7735.c: 581:                 madctl = 0x40 | 0x20 | 0x00;
  9756   00597A  0E60               	movlw	96
  9757   00597C  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9758                           
  9759                           ;tft_st7735.c: 582:             }else{
  9760   00597E  EFC3  F02C         	goto	l4576
  9761   005982                     l4574:
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;tft_st7735.c: 583:                 madctl = 0x40 | 0x20 | 0x08;
  9765   005982  0E68               	movlw	104
  9766   005984  6E04               	movwf	TFT_SetRotation@madctl^0,c
  9767   005986                     l4576:
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;tft_st7735.c: 586:             if(tabcolor == 0x01){
  9771   005986  045A               	decf	_tabcolor^0,w,c
  9772   005988  A4D8               	btfss	status,2,c
  9773   00598A  EFC9  F02C         	goto	u5121
  9774   00598E  EFCB  F02C         	goto	u5120
  9775   005992                     u5121:
  9776   005992  EFCD  F02C         	goto	l4580
  9777   005996                     u5120:
  9778   005996  EF5F  F02C         	goto	l4534
  9779   00599A                     l4580:
  9780                           
  9781                           ; BSR set to: 0
  9782   00599A  0E04               	movlw	4
  9783   00599C  185A               	xorwf	_tabcolor^0,w,c
  9784   00599E  A4D8               	btfss	status,2,c
  9785   0059A0  EFD4  F02C         	goto	u5131
  9786   0059A4  EFD6  F02C         	goto	u5130
  9787   0059A8                     u5131:
  9788   0059A8  EF74  F02C         	goto	l4540
  9789   0059AC                     u5130:
  9790   0059AC  EF6E  F02C         	goto	l4538
  9791   0059B0                     l4592:
  9792                           
  9793                           ; BSR set to: 0
  9794   0059B0  51B8               	movf	_rotation& (0+255),w,b
  9795                           
  9796                           ; Switch size 1, requested type "simple"
  9797                           ; Number of cases is 4, Range of values is 0 to 3
  9798                           ; switch strategies available:
  9799                           ; Name         Instructions Cycles
  9800                           ; simple_byte           13     7 (average)
  9801                           ;	Chosen strategy is simple_byte
  9802   0059B2  0A00               	xorlw	0	; case 0
  9803   0059B4  B4D8               	btfsc	status,2,c
  9804   0059B6  EF00  F02C         	goto	l4502
  9805   0059BA  0A01               	xorlw	1	; case 1
  9806   0059BC  B4D8               	btfsc	status,2,c
  9807   0059BE  EF3F  F02C         	goto	l4524
  9808   0059C2  0A03               	xorlw	3	; case 2
  9809   0059C4  B4D8               	btfsc	status,2,c
  9810   0059C6  EF7E  F02C         	goto	l4546
  9811   0059CA  0A01               	xorlw	1	; case 3
  9812   0059CC  B4D8               	btfsc	status,2,c
  9813   0059CE  EFAB  F02C         	goto	l4568
  9814   0059D2  EFEB  F02C         	goto	l231
  9815   0059D6                     l231:
  9816                           
  9817                           ; BSR set to: 0
  9818                           ;tft_st7735.c: 600:     LATDbits.LD0 = 0;
  9819   0059D6  908C               	bcf	140,0,c	;volatile
  9820   0059D8                     
  9821                           ; BSR set to: 0
  9822                           ;tft_st7735.c: 601:     WriteCommand(0x36);
  9823   0059D8  0E36               	movlw	54
  9824   0059DA  ECFD  F022         	call	_WriteCommand
  9825                           
  9826                           ;tft_st7735.c: 602:     SPI_Write(madctl);
  9827   0059DE  5004               	movf	TFT_SetRotation@madctl^0,w,c
  9828   0059E0  EC12  F023         	call	_SPI_Write
  9829   0059E4                     
  9830                           ;tft_st7735.c: 603:     LATDbits.LD0 = 1;
  9831   0059E4  808C               	bsf	140,0,c	;volatile
  9832   0059E6  0012               	return		;funcret
  9833   0059E8                     __end_of_TFT_SetRotation:
  9834                           	callstack 0
  9835                           
  9836 ;; *************** function _SPI_Init_Master *****************
  9837 ;; Defined at:
  9838 ;;		line 11 in file "spi.c"
  9839 ;; Parameters:    Size  Location     Type
  9840 ;;  reloj           1    wreg     unsigned char 
  9841 ;;  modo            1    0[COMRAM] unsigned char 
  9842 ;;  smp             1    1[COMRAM] unsigned char 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  reloj           1    2[COMRAM] unsigned char 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  1    wreg      void 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9854 ;;      Params:         2       0       0       0       0       0       0       0       0
  9855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9857 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9858 ;;Total ram usage:        3 bytes
  9859 ;; Hardware stack levels used: 1
  9860 ;; This function calls:
  9861 ;;		Nothing
  9862 ;; This function is called by:
  9863 ;;		_TFT_ST7735_Init
  9864 ;;		_TFT_InitB
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           	psect	text31
  9869   004A2C                     __ptext31:
  9870                           	callstack 0
  9871   004A2C                     _SPI_Init_Master:
  9872                           	callstack 29
  9873                           
  9874                           ;incstack = 0
  9875                           ;SPI_Init_Master@reloj stored from wreg
  9876   004A2C  6E03               	movwf	SPI_Init_Master@reloj^0,c
  9877   004A2E                     
  9878                           ;spi.c: 11: void SPI_Init_Master(char reloj, char modo, char smp);spi.c: 12: {;spi.c: 14
      +                          :     TRISBbits.RB0 = 1;
  9879   004A2E  8093               	bsf	147,0,c	;volatile
  9880                           
  9881                           ;spi.c: 15:     TRISBbits.RB1 = 0;
  9882   004A30  9293               	bcf	147,1,c	;volatile
  9883                           
  9884                           ;spi.c: 16:     TRISCbits.RC7 = 0;
  9885   004A32  9E94               	bcf	148,7,c	;volatile
  9886   004A34                     
  9887                           ;spi.c: 17:     SSPCON1bits.SSPM = reloj;
  9888   004A34  50C6               	movf	198,w,c	;volatile
  9889   004A36  1803               	xorwf	SPI_Init_Master@reloj^0,w,c
  9890   004A38  0BF0               	andlw	-16
  9891   004A3A  1803               	xorwf	SPI_Init_Master@reloj^0,w,c
  9892   004A3C  6EC6               	movwf	198,c	;volatile
  9893                           
  9894                           ;spi.c: 19:     if(modo == 0x01){
  9895   004A3E  0401               	decf	SPI_Init_Master@modo^0,w,c
  9896   004A40  A4D8               	btfss	status,2,c
  9897   004A42  EF25  F025         	goto	u5141
  9898   004A46  EF27  F025         	goto	u5140
  9899   004A4A                     u5141:
  9900   004A4A  EF2B  F025         	goto	l4604
  9901   004A4E                     u5140:
  9902   004A4E                     
  9903                           ;spi.c: 20:         SSPCON1bits.CKP = 1;
  9904   004A4E  88C6               	bsf	198,4,c	;volatile
  9905                           
  9906                           ;spi.c: 21:         SSPSTATbits.CKE = 1;
  9907   004A50  8CC7               	bsf	199,6,c	;volatile
  9908                           
  9909                           ;spi.c: 22:     }
  9910   004A52  EF50  F025         	goto	l91
  9911   004A56                     l4604:
  9912   004A56  0E02               	movlw	2
  9913   004A58  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9914   004A5A  A4D8               	btfss	status,2,c
  9915   004A5C  EF32  F025         	goto	u5151
  9916   004A60  EF34  F025         	goto	u5150
  9917   004A64                     u5151:
  9918   004A64  EF38  F025         	goto	l4608
  9919   004A68                     u5150:
  9920   004A68                     
  9921                           ;spi.c: 24:         SSPCON1bits.CKP = 0;
  9922   004A68  98C6               	bcf	198,4,c	;volatile
  9923                           
  9924                           ;spi.c: 25:         SSPSTATbits.CKE = 1;
  9925   004A6A  8CC7               	bsf	199,6,c	;volatile
  9926                           
  9927                           ;spi.c: 26:     }
  9928   004A6C  EF50  F025         	goto	l91
  9929   004A70                     l4608:
  9930   004A70  0E03               	movlw	3
  9931   004A72  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9932   004A74  A4D8               	btfss	status,2,c
  9933   004A76  EF3F  F025         	goto	u5161
  9934   004A7A  EF41  F025         	goto	u5160
  9935   004A7E                     u5161:
  9936   004A7E  EF45  F025         	goto	l4612
  9937   004A82                     u5160:
  9938   004A82                     
  9939                           ;spi.c: 28:         SSPCON1bits.CKP = 1;
  9940   004A82  88C6               	bsf	198,4,c	;volatile
  9941                           
  9942                           ;spi.c: 29:         SSPSTATbits.CKE = 0;
  9943   004A84  9CC7               	bcf	199,6,c	;volatile
  9944                           
  9945                           ;spi.c: 30:     }
  9946   004A86  EF50  F025         	goto	l91
  9947   004A8A                     l4612:
  9948   004A8A  0E04               	movlw	4
  9949   004A8C  1801               	xorwf	SPI_Init_Master@modo^0,w,c
  9950   004A8E  A4D8               	btfss	status,2,c
  9951   004A90  EF4C  F025         	goto	u5171
  9952   004A94  EF4E  F025         	goto	u5170
  9953   004A98                     u5171:
  9954   004A98  EF50  F025         	goto	l91
  9955   004A9C                     u5170:
  9956   004A9C                     
  9957                           ;spi.c: 32:         SSPCON1bits.CKP = 0;
  9958   004A9C  98C6               	bcf	198,4,c	;volatile
  9959                           
  9960                           ;spi.c: 33:         SSPSTATbits.CKE = 0;
  9961   004A9E  9CC7               	bcf	199,6,c	;volatile
  9962   004AA0                     l91:
  9963                           
  9964                           ;spi.c: 35:     SSPSTATbits.SMP = smp;
  9965   004AA0  B002               	btfsc	SPI_Init_Master@smp^0,0,c
  9966   004AA2  D002               	bra	u5185
  9967   004AA4  9EC7               	bcf	199,7,c	;volatile
  9968   004AA6  D001               	bra	u5186
  9969   004AA8                     u5185:
  9970   004AA8  8EC7               	bsf	199,7,c	;volatile
  9971   004AAA                     u5186:
  9972                           
  9973                           ;spi.c: 36:     SSPCON1bits.SSPEN = 1;
  9974   004AAA  8AC6               	bsf	198,5,c	;volatile
  9975   004AAC  0012               	return		;funcret
  9976   004AAE                     __end_of_SPI_Init_Master:
  9977                           	callstack 0
  9978                           
  9979 ;; *************** function _DisplayInit *****************
  9980 ;; Defined at:
  9981 ;;		line 401 in file "tft_st7735.c"
  9982 ;; Parameters:    Size  Location     Type
  9983 ;;  addr            2    5[COMRAM] PTR const unsigned char 
  9984 ;;		 -> Rcmd3(43), Rcmd2green144(13), Rcmd1(20), Bcmd(103), 
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;  ms              2   10[COMRAM] unsigned short 
  9987 ;;  numArgs         1    9[COMRAM] unsigned char 
  9988 ;;  numCommands     1    8[COMRAM] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9998 ;;      Params:         2       0       0       0       0       0       0       0       0
  9999 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10000 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10001 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10002 ;;Total ram usage:        7 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 2
 10005 ;; This function calls:
 10006 ;;		_Delay_ms
 10007 ;;		_SPI_Write
 10008 ;;		_WriteCommand
 10009 ;; This function is called by:
 10010 ;;		_TFT_ST7735_Init
 10011 ;;		_TFT_InitB
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           	psect	text32
 10016   004E30                     __ptext32:
 10017                           	callstack 0
 10018   004E30                     _DisplayInit:
 10019                           	callstack 27
 10020   004E30                     
 10021                           ;tft_st7735.c: 401: void DisplayInit(const uint8_t *addr);tft_st7735.c: 402: {;tft_st773
      +                          5.c: 403:     uint8_t numCommands, numArgs;;tft_st7735.c: 404:     uint16_t ms;;tft_st77
      +                          35.c: 406:     LATDbits.LD0 = 0;
 10022   004E30  908C               	bcf	140,0,c	;volatile
 10023   004E32                     
 10024                           ;tft_st7735.c: 407:     numCommands = *addr++;
 10025   004E32  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10026   004E36  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10027   004E3A                     	if	0	;tblptru may be non-zero
 10028   004E3A                     	endif
 10029   004E3A                     	if	0	;tblptru may be non-zero
 10030   004E3A                     	endif
 10031   004E3A  0008               	tblrd		*
 10032   004E3C  CFF5 F009          	movff	tablat,DisplayInit@numCommands
 10033   004E40  4A06               	infsnz	DisplayInit@addr^0,f,c
 10034   004E42  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10035                           
 10036                           ;tft_st7735.c: 408:     while(numCommands--)
 10037   004E44  EF7A  F027         	goto	l4652
 10038   004E48                     l4622:
 10039                           
 10040                           ;tft_st7735.c: 409:     {;tft_st7735.c: 410:         WriteCommand(*addr++);
 10041   004E48  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10042   004E4C  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10043   004E50                     	if	0	;tblptru may be non-zero
 10044   004E50                     	endif
 10045   004E50                     	if	0	;tblptru may be non-zero
 10046   004E50                     	endif
 10047   004E50  0008               	tblrd		*
 10048   004E52  50F5               	movf	tablat,w,c
 10049   004E54  ECFD  F022         	call	_WriteCommand
 10050   004E58  4A06               	infsnz	DisplayInit@addr^0,f,c
 10051   004E5A  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10052   004E5C                     
 10053                           ;tft_st7735.c: 411:         numArgs = *addr++;
 10054   004E5C  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10055   004E60  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10056   004E64                     	if	0	;tblptru may be non-zero
 10057   004E64                     	endif
 10058   004E64                     	if	0	;tblptru may be non-zero
 10059   004E64                     	endif
 10060   004E64  0008               	tblrd		*
 10061   004E66  CFF5 F00A          	movff	tablat,DisplayInit@numArgs
 10062   004E6A  4A06               	infsnz	DisplayInit@addr^0,f,c
 10063   004E6C  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10064   004E6E                     
 10065                           ;tft_st7735.c: 412:         ms = numArgs & 0x80;
 10066   004E6E  C00A  F008         	movff	DisplayInit@numArgs,??_DisplayInit
 10067   004E72  0E80               	movlw	128
 10068   004E74  1608               	andwf	??_DisplayInit^0,f,c
 10069   004E76  5008               	movf	??_DisplayInit^0,w,c
 10070   004E78  6E0B               	movwf	DisplayInit@ms^0,c
 10071   004E7A  6A0C               	clrf	(DisplayInit@ms+1)^0,c
 10072   004E7C                     
 10073                           ;tft_st7735.c: 413:         numArgs &= ~0x80;
 10074   004E7C  9E0A               	bcf	DisplayInit@numArgs^0,7,c
 10075                           
 10076                           ;tft_st7735.c: 414:         while(numArgs--)
 10077   004E7E  EF4B  F027         	goto	l4638
 10078   004E82                     l4634:
 10079                           
 10080                           ;tft_st7735.c: 415:         {;tft_st7735.c: 416:             SPI_Write(*addr++);
 10081   004E82  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10082   004E86  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10083   004E8A                     	if	0	;tblptru may be non-zero
 10084   004E8A                     	endif
 10085   004E8A                     	if	0	;tblptru may be non-zero
 10086   004E8A                     	endif
 10087   004E8A  0008               	tblrd		*
 10088   004E8C  50F5               	movf	tablat,w,c
 10089   004E8E  EC12  F023         	call	_SPI_Write
 10090   004E92  4A06               	infsnz	DisplayInit@addr^0,f,c
 10091   004E94  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10092   004E96                     l4638:
 10093                           
 10094                           ;tft_st7735.c: 414:         while(numArgs--)
 10095   004E96  060A               	decf	DisplayInit@numArgs^0,f,c
 10096   004E98  280A               	incf	DisplayInit@numArgs^0,w,c
 10097   004E9A  A4D8               	btfss	status,2,c
 10098   004E9C  EF52  F027         	goto	u5191
 10099   004EA0  EF54  F027         	goto	u5190
 10100   004EA4                     u5191:
 10101   004EA4  EF41  F027         	goto	l4634
 10102   004EA8                     u5190:
 10103   004EA8                     
 10104                           ;tft_st7735.c: 418:         if(ms)
 10105   004EA8  500B               	movf	DisplayInit@ms^0,w,c
 10106   004EAA  100C               	iorwf	(DisplayInit@ms+1)^0,w,c
 10107   004EAC  B4D8               	btfsc	status,2,c
 10108   004EAE  EF5B  F027         	goto	u5201
 10109   004EB2  EF5D  F027         	goto	u5200
 10110   004EB6                     u5201:
 10111   004EB6  EF7A  F027         	goto	l4652
 10112   004EBA                     u5200:
 10113   004EBA                     
 10114                           ;tft_st7735.c: 419:         {;tft_st7735.c: 420:             ms = *addr++;
 10115   004EBA  C006  FFF6         	movff	DisplayInit@addr,tblptrl
 10116   004EBE  C007  FFF7         	movff	DisplayInit@addr+1,tblptrh
 10117   004EC2                     	if	0	;tblptru may be non-zero
 10118   004EC2                     	endif
 10119   004EC2                     	if	0	;tblptru may be non-zero
 10120   004EC2                     	endif
 10121   004EC2  0008               	tblrd		*
 10122   004EC4  50F5               	movf	tablat,w,c
 10123   004EC6  6E0B               	movwf	DisplayInit@ms^0,c
 10124   004EC8  6A0C               	clrf	(DisplayInit@ms+1)^0,c
 10125   004ECA  4A06               	infsnz	DisplayInit@addr^0,f,c
 10126   004ECC  2A07               	incf	(DisplayInit@addr+1)^0,f,c
 10127   004ECE                     
 10128                           ;tft_st7735.c: 421:             if(ms == 255) ms = 500;
 10129   004ECE  280B               	incf	DisplayInit@ms^0,w,c
 10130   004ED0  100C               	iorwf	(DisplayInit@ms+1)^0,w,c
 10131   004ED2  A4D8               	btfss	status,2,c
 10132   004ED4  EF6E  F027         	goto	u5211
 10133   004ED8  EF70  F027         	goto	u5210
 10134   004EDC                     u5211:
 10135   004EDC  EF74  F027         	goto	l4650
 10136   004EE0                     u5210:
 10137   004EE0  0E01               	movlw	1
 10138   004EE2  6E0C               	movwf	(DisplayInit@ms+1)^0,c
 10139   004EE4  0EF4               	movlw	244
 10140   004EE6  6E0B               	movwf	DisplayInit@ms^0,c
 10141   004EE8                     l4650:
 10142                           
 10143                           ;tft_st7735.c: 422:             Delay_ms(ms);
 10144   004EE8  C00B  F001         	movff	DisplayInit@ms,Delay_ms@d
 10145   004EEC  C00C  F002         	movff	DisplayInit@ms+1,Delay_ms@d+1
 10146   004EF0  EC38  F023         	call	_Delay_ms	;wreg free
 10147   004EF4                     l4652:
 10148                           
 10149                           ;tft_st7735.c: 408:     while(numCommands--)
 10150   004EF4  0609               	decf	DisplayInit@numCommands^0,f,c
 10151   004EF6  2809               	incf	DisplayInit@numCommands^0,w,c
 10152   004EF8  A4D8               	btfss	status,2,c
 10153   004EFA  EF81  F027         	goto	u5221
 10154   004EFE  EF83  F027         	goto	u5220
 10155   004F02                     u5221:
 10156   004F02  EF24  F027         	goto	l4622
 10157   004F06                     u5220:
 10158   004F06                     
 10159                           ;tft_st7735.c: 425:     LATDbits.LD0 = 1;
 10160   004F06  808C               	bsf	140,0,c	;volatile
 10161   004F08  0012               	return		;funcret
 10162   004F0A                     __end_of_DisplayInit:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _Delay_ms *****************
 10166 ;; Defined at:
 10167 ;;		line 685 in file "tft_st7735.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;  d               2    0[COMRAM] unsigned int 
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;  i               2    3[COMRAM] unsigned int 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10181 ;;      Params:         2       0       0       0       0       0       0       0       0
 10182 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10183 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10184 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10185 ;;Total ram usage:        5 bytes
 10186 ;; Hardware stack levels used: 1
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_DisplayInit
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           	psect	text33
 10195   004670                     __ptext33:
 10196                           	callstack 0
 10197   004670                     _Delay_ms:
 10198                           	callstack 28
 10199   004670                     
 10200                           ;tft_st7735.c: 685: void Delay_ms(unsigned int d);tft_st7735.c: 686: {;tft_st7735.c: 687
      +                          :     for(unsigned int i=0; i<d; i++)
 10201   004670  0E00               	movlw	0
 10202   004672  6E05               	movwf	(Delay_ms@i+1)^0,c
 10203   004674  0E00               	movlw	0
 10204   004676  6E04               	movwf	Delay_ms@i^0,c
 10205   004678  EF48  F023         	goto	l306
 10206   00467C                     l4386:
 10207                           
 10208                           ;tft_st7735.c: 688:     {;tft_st7735.c: 689:         _delay((unsigned long)((1)*(4800000
      +                          0/4000.0)));
 10209   00467C  0E10               	movlw	16
 10210   00467E  6E03               	movwf	??_Delay_ms^0,c
 10211   004680  0E94               	movlw	148
 10212   004682                     u6747:
 10213   004682  2EE8               	decfsz	wreg,f,c
 10214   004684  D7FE               	bra	u6747
 10215   004686  2E03               	decfsz	??_Delay_ms^0,f,c
 10216   004688  D7FC               	bra	u6747
 10217   00468A  D000               	nop2	
 10218   00468C                     
 10219                           ;tft_st7735.c: 690:     }
 10220   00468C  4A04               	infsnz	Delay_ms@i^0,f,c
 10221   00468E  2A05               	incf	(Delay_ms@i+1)^0,f,c
 10222   004690                     l306:
 10223   004690  5001               	movf	Delay_ms@d^0,w,c
 10224   004692  5C04               	subwf	Delay_ms@i^0,w,c
 10225   004694  5002               	movf	(Delay_ms@d+1)^0,w,c
 10226   004696  5805               	subwfb	(Delay_ms@i+1)^0,w,c
 10227   004698  A0D8               	btfss	status,0,c
 10228   00469A  EF51  F023         	goto	u4861
 10229   00469E  EF53  F023         	goto	u4860
 10230   0046A2                     u4861:
 10231   0046A2  EF3E  F023         	goto	l4386
 10232   0046A6                     u4860:
 10233   0046A6  0012               	return		;funcret
 10234   0046A8                     __end_of_Delay_ms:
 10235                           	callstack 0
 10236                           
 10237 ;; *************** function _TFT_FillScreen *****************
 10238 ;; Defined at:
 10239 ;;		line 664 in file "tft_st7735.c"
 10240 ;; Parameters:    Size  Location     Type
 10241 ;;  color           2   24[COMRAM] unsigned short 
 10242 ;; Auto vars:     Size  Location     Type
 10243 ;;		None
 10244 ;; Return value:  Size  Location     Type
 10245 ;;                  1    wreg      void 
 10246 ;; Registers used:
 10247 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10248 ;; Tracked objects:
 10249 ;;		On entry : 0/0
 10250 ;;		On exit  : 0/0
 10251 ;;		Unchanged: 0/0
 10252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10253 ;;      Params:         2       0       0       0       0       0       0       0       0
 10254 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10255 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10256 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10257 ;;Total ram usage:        2 bytes
 10258 ;; Hardware stack levels used: 1
 10259 ;; Hardware stack levels required when called: 4
 10260 ;; This function calls:
 10261 ;;		_TFT_FillRect
 10262 ;; This function is called by:
 10263 ;;		_main
 10264 ;; This function uses a non-reentrant model
 10265 ;;
 10266                           
 10267                           	psect	text34
 10268   004608                     __ptext34:
 10269                           	callstack 0
 10270   004608                     _TFT_FillScreen:
 10271                           	callstack 26
 10272   004608                     
 10273                           ;tft_st7735.c: 664: void TFT_FillScreen(uint16_t color);tft_st7735.c: 665: {;tft_st7735.
      +                          c: 666:     TFT_FillRect(0, 0, _width, _height, color);
 10274   004608  0E00               	movlw	0
 10275   00460A  6E08               	movwf	TFT_FillRect@y^0,c
 10276   00460C  C05D  F009         	movff	__width,TFT_FillRect@w
 10277   004610  C05C  F00A         	movff	__height,TFT_FillRect@h
 10278   004614  C019  F00B         	movff	TFT_FillScreen@color,TFT_FillRect@color
 10279   004618  C01A  F00C         	movff	TFT_FillScreen@color+1,TFT_FillRect@color+1
 10280   00461C  0E00               	movlw	0
 10281   00461E  EC09  F029         	call	_TFT_FillRect
 10282   004622  0012               	return		;funcret
 10283   004624                     __end_of_TFT_FillScreen:
 10284                           	callstack 0
 10285                           
 10286 ;; *************** function _TFT_FillRect *****************
 10287 ;; Defined at:
 10288 ;;		line 642 in file "tft_st7735.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  x               1    wreg     unsigned char 
 10291 ;;  y               1    7[COMRAM] unsigned char 
 10292 ;;  w               1    8[COMRAM] unsigned char 
 10293 ;;  h               1    9[COMRAM] unsigned char 
 10294 ;;  color           2   10[COMRAM] unsigned short 
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  x               1   23[COMRAM] unsigned char 
 10297 ;;  px              2   19[COMRAM] unsigned short 
 10298 ;;  lo              1   22[COMRAM] unsigned char 
 10299 ;;  hi              1   21[COMRAM] unsigned char 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  1    wreg      void 
 10302 ;; Registers used:
 10303 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10309 ;;      Params:         5       0       0       0       0       0       0       0       0
 10310 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10311 ;;      Temps:          7       0       0       0       0       0       0       0       0
 10312 ;;      Totals:        17       0       0       0       0       0       0       0       0
 10313 ;;Total ram usage:       17 bytes
 10314 ;; Hardware stack levels used: 1
 10315 ;; Hardware stack levels required when called: 3
 10316 ;; This function calls:
 10317 ;;		_SPI_Write
 10318 ;;		_SetAddrWindow
 10319 ;; This function is called by:
 10320 ;;		_main
 10321 ;;		_TFT_FillScreen
 10322 ;;		_TFT_Print
 10323 ;;		_TFT_FillRoundRect
 10324 ;;		_TFT_CustomChar
 10325 ;; This function uses a non-reentrant model
 10326 ;;
 10327                           
 10328                           	psect	text35
 10329   005212                     __ptext35:
 10330                           	callstack 0
 10331   005212                     _TFT_FillRect:
 10332                           	callstack 25
 10333                           
 10334                           ;incstack = 0
 10335                           ;TFT_FillRect@x stored from wreg
 10336   005212  6E18               	movwf	TFT_FillRect@x^0,c
 10337   005214                     
 10338                           ;tft_st7735.c: 642: void TFT_FillRect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint16
      +                          _t color);tft_st7735.c: 643: {;tft_st7735.c: 644:     if(w && h)
 10339   005214  5009               	movf	TFT_FillRect@w^0,w,c
 10340   005216  B4D8               	btfsc	status,2,c
 10341   005218  EF10  F029         	goto	u4791
 10342   00521C  EF12  F029         	goto	u4790
 10343   005220                     u4791:
 10344   005220  EF9C  F029         	goto	l285
 10345   005224                     u4790:
 10346   005224  500A               	movf	TFT_FillRect@h^0,w,c
 10347   005226  B4D8               	btfsc	status,2,c
 10348   005228  EF18  F029         	goto	u4801
 10349   00522C  EF1A  F029         	goto	u4800
 10350   005230                     u4801:
 10351   005230  EF9C  F029         	goto	l285
 10352   005234                     u4800:
 10353   005234                     
 10354                           ;tft_st7735.c: 645:     {;tft_st7735.c: 646:         uint8_t hi = color >> 8, lo = color
      +                          ;
 10355   005234  500C               	movf	(TFT_FillRect@color+1)^0,w,c
 10356   005236  6E16               	movwf	TFT_FillRect@hi^0,c
 10357   005238  C00B  F017         	movff	TFT_FillRect@color,TFT_FillRect@lo
 10358   00523C                     
 10359                           ;tft_st7735.c: 647:         if((x >= _width) || (y >= _height))
 10360   00523C  505D               	movf	__width^0,w,c
 10361   00523E  5C18               	subwf	TFT_FillRect@x^0,w,c
 10362   005240  B0D8               	btfsc	status,0,c
 10363   005242  EF25  F029         	goto	u4811
 10364   005246  EF27  F029         	goto	u4810
 10365   00524A                     u4811:
 10366   00524A  EF9C  F029         	goto	l285
 10367   00524E                     u4810:
 10368   00524E  505C               	movf	__height^0,w,c
 10369   005250  5C08               	subwf	TFT_FillRect@y^0,w,c
 10370   005252  A0D8               	btfss	status,0,c
 10371   005254  EF2E  F029         	goto	u4821
 10372   005258  EF30  F029         	goto	u4820
 10373   00525C                     u4821:
 10374   00525C  EF32  F029         	goto	l4368
 10375   005260                     u4820:
 10376   005260  EF9C  F029         	goto	l285
 10377   005264                     l4368:
 10378                           
 10379                           ;tft_st7735.c: 649:         if((x + w - 1) >= _width)
 10380   005264  505D               	movf	__width^0,w,c
 10381   005266  6E0D               	movwf	??_TFT_FillRect^0,c
 10382   005268  6A0E               	clrf	(??_TFT_FillRect+1)^0,c
 10383   00526A  5009               	movf	TFT_FillRect@w^0,w,c
 10384   00526C  C018  F00F         	movff	TFT_FillRect@x,??_TFT_FillRect+2
 10385   005270  6A10               	clrf	(??_TFT_FillRect+3)^0,c
 10386   005272  260F               	addwf	(??_TFT_FillRect+2)^0,f,c
 10387   005274  0E00               	movlw	0
 10388   005276  2210               	addwfc	(??_TFT_FillRect+3)^0,f,c
 10389   005278  0EFF               	movlw	255
 10390   00527A  240F               	addwf	(??_TFT_FillRect+2)^0,w,c
 10391   00527C  6E11               	movwf	(??_TFT_FillRect+4)^0,c
 10392   00527E  0EFF               	movlw	255
 10393   005280  2010               	addwfc	(??_TFT_FillRect+3)^0,w,c
 10394   005282  6E12               	movwf	(??_TFT_FillRect+5)^0,c
 10395   005284  500D               	movf	??_TFT_FillRect^0,w,c
 10396   005286  5C11               	subwf	(??_TFT_FillRect+4)^0,w,c
 10397   005288  5012               	movf	(??_TFT_FillRect+5)^0,w,c
 10398   00528A  0A80               	xorlw	128
 10399   00528C  6E13               	movwf	(??_TFT_FillRect+6)^0,c
 10400   00528E  500E               	movf	(??_TFT_FillRect+1)^0,w,c
 10401   005290  0A80               	xorlw	128
 10402   005292  5813               	subwfb	(??_TFT_FillRect+6)^0,w,c
 10403   005294  A0D8               	btfss	status,0,c
 10404   005296  EF4F  F029         	goto	u4831
 10405   00529A  EF51  F029         	goto	u4830
 10406   00529E                     u4831:
 10407   00529E  EF54  F029         	goto	l286
 10408   0052A2                     u4830:
 10409   0052A2                     
 10410                           ;tft_st7735.c: 650:             w = _width - x;
 10411   0052A2  5018               	movf	TFT_FillRect@x^0,w,c
 10412   0052A4  5C5D               	subwf	__width^0,w,c
 10413   0052A6  6E09               	movwf	TFT_FillRect@w^0,c
 10414   0052A8                     l286:
 10415                           
 10416                           ;tft_st7735.c: 651:         if((y + h - 1) >= _height)
 10417   0052A8  505C               	movf	__height^0,w,c
 10418   0052AA  6E0D               	movwf	??_TFT_FillRect^0,c
 10419   0052AC  6A0E               	clrf	(??_TFT_FillRect+1)^0,c
 10420   0052AE  500A               	movf	TFT_FillRect@h^0,w,c
 10421   0052B0  C008  F00F         	movff	TFT_FillRect@y,??_TFT_FillRect+2
 10422   0052B4  6A10               	clrf	(??_TFT_FillRect+3)^0,c
 10423   0052B6  260F               	addwf	(??_TFT_FillRect+2)^0,f,c
 10424   0052B8  0E00               	movlw	0
 10425   0052BA  2210               	addwfc	(??_TFT_FillRect+3)^0,f,c
 10426   0052BC  0EFF               	movlw	255
 10427   0052BE  240F               	addwf	(??_TFT_FillRect+2)^0,w,c
 10428   0052C0  6E11               	movwf	(??_TFT_FillRect+4)^0,c
 10429   0052C2  0EFF               	movlw	255
 10430   0052C4  2010               	addwfc	(??_TFT_FillRect+3)^0,w,c
 10431   0052C6  6E12               	movwf	(??_TFT_FillRect+5)^0,c
 10432   0052C8  500D               	movf	??_TFT_FillRect^0,w,c
 10433   0052CA  5C11               	subwf	(??_TFT_FillRect+4)^0,w,c
 10434   0052CC  5012               	movf	(??_TFT_FillRect+5)^0,w,c
 10435   0052CE  0A80               	xorlw	128
 10436   0052D0  6E13               	movwf	(??_TFT_FillRect+6)^0,c
 10437   0052D2  500E               	movf	(??_TFT_FillRect+1)^0,w,c
 10438   0052D4  0A80               	xorlw	128
 10439   0052D6  5813               	subwfb	(??_TFT_FillRect+6)^0,w,c
 10440   0052D8  A0D8               	btfss	status,0,c
 10441   0052DA  EF71  F029         	goto	u4841
 10442   0052DE  EF73  F029         	goto	u4840
 10443   0052E2                     u4841:
 10444   0052E2  EF76  F029         	goto	l4374
 10445   0052E6                     u4840:
 10446   0052E6                     
 10447                           ;tft_st7735.c: 652:             h = _height - y;
 10448   0052E6  5008               	movf	TFT_FillRect@y^0,w,c
 10449   0052E8  5C5C               	subwf	__height^0,w,c
 10450   0052EA  6E0A               	movwf	TFT_FillRect@h^0,c
 10451   0052EC                     l4374:
 10452                           
 10453                           ;tft_st7735.c: 653:         LATDbits.LD0 = 0;
 10454   0052EC  908C               	bcf	140,0,c	;volatile
 10455   0052EE                     
 10456                           ;tft_st7735.c: 654:         SetAddrWindow(x, y, w, h);
 10457   0052EE  C008  F003         	movff	TFT_FillRect@y,SetAddrWindow@y
 10458   0052F2  C009  F004         	movff	TFT_FillRect@w,SetAddrWindow@w
 10459   0052F6  C00A  F005         	movff	TFT_FillRect@h,SetAddrWindow@h
 10460   0052FA  5018               	movf	TFT_FillRect@x^0,w,c
 10461   0052FC  EC85  F024         	call	_SetAddrWindow
 10462   005300                     
 10463                           ;tft_st7735.c: 655:         uint16_t px = (uint16_t)w * h;
 10464   005300  5009               	movf	TFT_FillRect@w^0,w,c
 10465   005302  020A               	mulwf	TFT_FillRect@h^0,c
 10466   005304  CFF3 F014          	movff	prodl,TFT_FillRect@px
 10467   005308  CFF4 F015          	movff	prodh,TFT_FillRect@px+1
 10468                           
 10469                           ;tft_st7735.c: 656:         while(px--){
 10470   00530C  EF8E  F029         	goto	l4382
 10471   005310                     l4380:
 10472                           
 10473                           ;tft_st7735.c: 657:             SPI_Write(hi);
 10474   005310  5016               	movf	TFT_FillRect@hi^0,w,c
 10475   005312  EC12  F023         	call	_SPI_Write
 10476                           
 10477                           ;tft_st7735.c: 658:             SPI_Write(lo);
 10478   005316  5017               	movf	TFT_FillRect@lo^0,w,c
 10479   005318  EC12  F023         	call	_SPI_Write
 10480   00531C                     l4382:
 10481                           
 10482                           ;tft_st7735.c: 656:         while(px--){
 10483   00531C  0614               	decf	TFT_FillRect@px^0,f,c
 10484   00531E  A0D8               	btfss	status,0,c
 10485   005320  0615               	decf	(TFT_FillRect@px+1)^0,f,c
 10486   005322  2814               	incf	TFT_FillRect@px^0,w,c
 10487   005324  E106               	bnz	u4851
 10488   005326  2815               	incf	(TFT_FillRect@px+1)^0,w,c
 10489   005328  A4D8               	btfss	status,2,c
 10490   00532A  EF99  F029         	goto	u4851
 10491   00532E  EF9B  F029         	goto	u4850
 10492   005332                     u4851:
 10493   005332  EF88  F029         	goto	l4380
 10494   005336                     u4850:
 10495   005336                     
 10496                           ;tft_st7735.c: 660:         LATDbits.LD0 = 1;
 10497   005336  808C               	bsf	140,0,c	;volatile
 10498   005338                     l285:
 10499   005338  0012               	return		;funcret
 10500   00533A                     __end_of_TFT_FillRect:
 10501                           	callstack 0
 10502                           
 10503 ;; *************** function _SetAddrWindow *****************
 10504 ;; Defined at:
 10505 ;;		line 492 in file "tft_st7735.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;  x               1    wreg     unsigned char 
 10508 ;;  y               1    2[COMRAM] unsigned char 
 10509 ;;  w               1    3[COMRAM] unsigned char 
 10510 ;;  h               1    4[COMRAM] unsigned char 
 10511 ;; Auto vars:     Size  Location     Type
 10512 ;;  x               1    6[COMRAM] unsigned char 
 10513 ;; Return value:  Size  Location     Type
 10514 ;;                  1    wreg      void 
 10515 ;; Registers used:
 10516 ;;		wreg, status,2, status,0, cstack
 10517 ;; Tracked objects:
 10518 ;;		On entry : 0/0
 10519 ;;		On exit  : 0/0
 10520 ;;		Unchanged: 0/0
 10521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10522 ;;      Params:         3       0       0       0       0       0       0       0       0
 10523 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10524 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10525 ;;      Totals:         5       0       0       0       0       0       0       0       0
 10526 ;;Total ram usage:        5 bytes
 10527 ;; Hardware stack levels used: 1
 10528 ;; Hardware stack levels required when called: 2
 10529 ;; This function calls:
 10530 ;;		_SPI_Write
 10531 ;;		_WriteCommand
 10532 ;; This function is called by:
 10533 ;;		_TFT_DrawPixel
 10534 ;;		_TFT_DrawVLine
 10535 ;;		_TFT_FillRect
 10536 ;;		_TFT_DrawHLine
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text36
 10541   00490A                     __ptext36:
 10542                           	callstack 0
 10543   00490A                     _SetAddrWindow:
 10544                           	callstack 25
 10545                           
 10546                           ;incstack = 0
 10547                           ;SetAddrWindow@x stored from wreg
 10548   00490A  6E07               	movwf	SetAddrWindow@x^0,c
 10549   00490C                     
 10550                           ;tft_st7735.c: 492: void SetAddrWindow(uint8_t x, uint8_t y, uint8_t w, uint8_t h);tft_s
      +                          t7735.c: 493: {;tft_st7735.c: 494:     x += _xstart;
 10551   00490C  0100               	movlb	0	; () banked
 10552   00490E  51BB               	movf	__xstart& (0+255),w,b
 10553   004910  2607               	addwf	SetAddrWindow@x^0,f,c
 10554                           
 10555                           ;tft_st7735.c: 495:     y += _ystart;
 10556   004912  51BA               	movf	__ystart& (0+255),w,b
 10557   004914  2603               	addwf	SetAddrWindow@y^0,f,c
 10558   004916                     
 10559                           ; BSR set to: 0
 10560                           ;tft_st7735.c: 496:     WriteCommand(0x2A);
 10561   004916  0E2A               	movlw	42
 10562   004918  ECFD  F022         	call	_WriteCommand
 10563   00491C                     
 10564                           ;tft_st7735.c: 497:     SPI_Write(0);
 10565   00491C  0E00               	movlw	0
 10566   00491E  EC12  F023         	call	_SPI_Write
 10567   004922                     
 10568                           ;tft_st7735.c: 498:     SPI_Write(x);
 10569   004922  5007               	movf	SetAddrWindow@x^0,w,c
 10570   004924  EC12  F023         	call	_SPI_Write
 10571   004928                     
 10572                           ;tft_st7735.c: 499:     SPI_Write(0);
 10573   004928  0E00               	movlw	0
 10574   00492A  EC12  F023         	call	_SPI_Write
 10575   00492E                     
 10576                           ;tft_st7735.c: 500:     SPI_Write(x+w-1);
 10577   00492E  5007               	movf	SetAddrWindow@x^0,w,c
 10578   004930  2404               	addwf	SetAddrWindow@w^0,w,c
 10579   004932  6E06               	movwf	??_SetAddrWindow^0,c
 10580   004934  0406               	decf	??_SetAddrWindow^0,w,c
 10581   004936  EC12  F023         	call	_SPI_Write
 10582   00493A                     
 10583                           ;tft_st7735.c: 501:     WriteCommand(0x2B);
 10584   00493A  0E2B               	movlw	43
 10585   00493C  ECFD  F022         	call	_WriteCommand
 10586   004940                     
 10587                           ;tft_st7735.c: 502:     SPI_Write(0);
 10588   004940  0E00               	movlw	0
 10589   004942  EC12  F023         	call	_SPI_Write
 10590   004946                     
 10591                           ;tft_st7735.c: 503:     SPI_Write(y);
 10592   004946  5003               	movf	SetAddrWindow@y^0,w,c
 10593   004948  EC12  F023         	call	_SPI_Write
 10594   00494C                     
 10595                           ;tft_st7735.c: 504:     SPI_Write(0);
 10596   00494C  0E00               	movlw	0
 10597   00494E  EC12  F023         	call	_SPI_Write
 10598   004952                     
 10599                           ;tft_st7735.c: 505:     SPI_Write(y+h-1);
 10600   004952  5003               	movf	SetAddrWindow@y^0,w,c
 10601   004954  2405               	addwf	SetAddrWindow@h^0,w,c
 10602   004956  6E06               	movwf	??_SetAddrWindow^0,c
 10603   004958  0406               	decf	??_SetAddrWindow^0,w,c
 10604   00495A  EC12  F023         	call	_SPI_Write
 10605   00495E                     
 10606                           ;tft_st7735.c: 506:     WriteCommand(0x2C);
 10607   00495E  0E2C               	movlw	44
 10608   004960  ECFD  F022         	call	_WriteCommand
 10609   004964  0012               	return		;funcret
 10610   004966                     __end_of_SetAddrWindow:
 10611                           	callstack 0
 10612                           
 10613 ;; *************** function _WriteCommand *****************
 10614 ;; Defined at:
 10615 ;;		line 394 in file "tft_st7735.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  cmd             1    wreg     unsigned char 
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;  cmd             1    1[COMRAM] unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10629 ;;      Params:         0       0       0       0       0       0       0       0       0
 10630 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10632 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10633 ;;Total ram usage:        1 bytes
 10634 ;; Hardware stack levels used: 1
 10635 ;; Hardware stack levels required when called: 1
 10636 ;; This function calls:
 10637 ;;		_SPI_Write
 10638 ;; This function is called by:
 10639 ;;		_DisplayInit
 10640 ;;		_TFT_ST7735_Init
 10641 ;;		_SetAddrWindow
 10642 ;;		_TFT_SetRotation
 10643 ;;		_TFT_InvertDisplay
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text37
 10648   0045FA                     __ptext37:
 10649                           	callstack 0
 10650   0045FA                     _WriteCommand:
 10651                           	callstack 25
 10652                           
 10653                           ;incstack = 0
 10654                           ;WriteCommand@cmd stored from wreg
 10655   0045FA  6E02               	movwf	WriteCommand@cmd^0,c
 10656   0045FC                     
 10657                           ;tft_st7735.c: 394: void WriteCommand(uint8_t cmd);tft_st7735.c: 395: {;tft_st7735.c: 39
      +                          6:     LATDbits.LD2 = 0;
 10658   0045FC  948C               	bcf	140,2,c	;volatile
 10659   0045FE                     
 10660                           ;tft_st7735.c: 397:     SPI_Write(cmd);
 10661   0045FE  5002               	movf	WriteCommand@cmd^0,w,c
 10662   004600  EC12  F023         	call	_SPI_Write
 10663   004604                     
 10664                           ;tft_st7735.c: 398:     LATDbits.LD2 = 1;
 10665   004604  848C               	bsf	140,2,c	;volatile
 10666   004606  0012               	return		;funcret
 10667   004608                     __end_of_WriteCommand:
 10668                           	callstack 0
 10669                           
 10670 ;; *************** function _SPI_Write *****************
 10671 ;; Defined at:
 10672 ;;		line 66 in file "spi.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;  dato            1    wreg     unsigned char 
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;  dato            1    0[COMRAM] unsigned char 
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10686 ;;      Params:         0       0       0       0       0       0       0       0       0
 10687 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10688 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10689 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10690 ;;Total ram usage:        1 bytes
 10691 ;; Hardware stack levels used: 1
 10692 ;; This function calls:
 10693 ;;		Nothing
 10694 ;; This function is called by:
 10695 ;;		_WriteCommand
 10696 ;;		_DisplayInit
 10697 ;;		_TFT_ST7735_Init
 10698 ;;		_TFT_DrawPixel
 10699 ;;		_SetAddrWindow
 10700 ;;		_TFT_SetRotation
 10701 ;;		_TFT_DrawVLine
 10702 ;;		_TFT_FillRect
 10703 ;;		_TFT_DrawHLine
 10704 ;;		_TFT_PushColor
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text38
 10709   004624                     __ptext38:
 10710                           	callstack 0
 10711   004624                     _SPI_Write:
 10712                           	callstack 25
 10713                           
 10714                           ;incstack = 0
 10715                           ;SPI_Write@dato stored from wreg
 10716   004624  6E01               	movwf	SPI_Write@dato^0,c
 10717   004626                     
 10718                           ;spi.c: 66: void SPI_Write(unsigned char dato);spi.c: 67: {;spi.c: 68:     SSPBUF = dato
      +                          ;
 10719   004626  C001  FFC9         	movff	SPI_Write@dato,4041	;volatile
 10720   00462A                     l110:
 10721   00462A  A0C7               	btfss	199,0,c	;volatile
 10722   00462C  EF1A  F023         	goto	u3201
 10723   004630  EF1C  F023         	goto	u3200
 10724   004634                     u3201:
 10725   004634  EF15  F023         	goto	l110
 10726   004638                     u3200:
 10727   004638                     l113:
 10728   004638  A69E               	btfss	158,3,c	;volatile
 10729   00463A  EF21  F023         	goto	u3211
 10730   00463E  EF23  F023         	goto	u3210
 10731   004642                     u3211:
 10732   004642  EF1C  F023         	goto	l113
 10733   004646                     u3210:
 10734   004646                     
 10735                           ;spi.c: 71:     PIR1bits.SSPIF = 0;
 10736   004646  969E               	bcf	158,3,c	;volatile
 10737   004648  0012               	return		;funcret
 10738   00464A                     __end_of_SPI_Write:
 10739                           	callstack 0
 10740                           
 10741                           	psect	rparam
 10742   000000                     
 10743                           	psect	config
 10744                           
 10745                           ;Config register CONFIG1L @ 0x300000
 10746                           ;	PLL Prescaler Selection bits
 10747                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 10748                           ;	System Clock Postscaler Selection bits
 10749                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10750                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10751                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 10752   300000                     	org	3145728
 10753   300000  21                 	db	33
 10754                           
 10755                           ;Config register CONFIG1H @ 0x300001
 10756                           ;	Oscillator Selection bits
 10757                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 10758                           ;	Fail-Safe Clock Monitor Enable bit
 10759                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10760                           ;	Internal/External Oscillator Switchover bit
 10761                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10762   300001                     	org	3145729
 10763   300001  0E                 	db	14
 10764                           
 10765                           ;Config register CONFIG2L @ 0x300002
 10766                           ;	Power-up Timer Enable bit
 10767                           ;	PWRT = OFF, PWRT disabled
 10768                           ;	Brown-out Reset Enable bits
 10769                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10770                           ;	Brown-out Reset Voltage bits
 10771                           ;	BORV = 3, Minimum setting 2.05V
 10772                           ;	USB Voltage Regulator Enable bit
 10773                           ;	VREGEN = OFF, USB voltage regulator disabled
 10774   300002                     	org	3145730
 10775   300002  19                 	db	25
 10776                           
 10777                           ;Config register CONFIG2H @ 0x300003
 10778                           ;	Watchdog Timer Enable bit
 10779                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10780                           ;	Watchdog Timer Postscale Select bits
 10781                           ;	WDTPS = 32768, 1:32768
 10782   300003                     	org	3145731
 10783   300003  1E                 	db	30
 10784                           
 10785                           ; Padding undefined space
 10786   300004                     	org	3145732
 10787   300004  FF                 	db	255
 10788                           
 10789                           ;Config register CONFIG3H @ 0x300005
 10790                           ;	CCP2 MUX bit
 10791                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10792                           ;	PORTB A/D Enable bit
 10793                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10794                           ;	Low-Power Timer 1 Oscillator Enable bit
 10795                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10796                           ;	MCLR Pin Enable bit
 10797                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10798   300005                     	org	3145733
 10799   300005  81                 	db	129
 10800                           
 10801                           ;Config register CONFIG4L @ 0x300006
 10802                           ;	Stack Full/Underflow Reset Enable bit
 10803                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10804                           ;	Single-Supply ICSP Enable bit
 10805                           ;	LVP = OFF, Single-Supply ICSP disabled
 10806                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10807                           ;	ICPRT = OFF, ICPORT disabled
 10808                           ;	Extended Instruction Set Enable bit
 10809                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10810                           ;	Background Debugger Enable bit
 10811                           ;	DEBUG = 0x1, unprogrammed default
 10812   300006                     	org	3145734
 10813   300006  81                 	db	129
 10814                           
 10815                           ; Padding undefined space
 10816   300007                     	org	3145735
 10817   300007  FF                 	db	255
 10818                           
 10819                           ;Config register CONFIG5L @ 0x300008
 10820                           ;	Code Protection bit
 10821                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10822                           ;	Code Protection bit
 10823                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10824                           ;	Code Protection bit
 10825                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10826                           ;	Code Protection bit
 10827                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10828   300008                     	org	3145736
 10829   300008  0F                 	db	15
 10830                           
 10831                           ;Config register CONFIG5H @ 0x300009
 10832                           ;	Boot Block Code Protection bit
 10833                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10834                           ;	Data EEPROM Code Protection bit
 10835                           ;	CPD = OFF, Data EEPROM is not code-protected
 10836   300009                     	org	3145737
 10837   300009  C0                 	db	192
 10838                           
 10839                           ;Config register CONFIG6L @ 0x30000A
 10840                           ;	Write Protection bit
 10841                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10842                           ;	Write Protection bit
 10843                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10844                           ;	Write Protection bit
 10845                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10846                           ;	Write Protection bit
 10847                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10848   30000A                     	org	3145738
 10849   30000A  0F                 	db	15
 10850                           
 10851                           ;Config register CONFIG6H @ 0x30000B
 10852                           ;	Configuration Register Write Protection bit
 10853                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10854                           ;	Boot Block Write Protection bit
 10855                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10856                           ;	Data EEPROM Write Protection bit
 10857                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10858   30000B                     	org	3145739
 10859   30000B  E0                 	db	224
 10860                           
 10861                           ;Config register CONFIG7L @ 0x30000C
 10862                           ;	Table Read Protection bit
 10863                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10864                           ;	Table Read Protection bit
 10865                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10866                           ;	Table Read Protection bit
 10867                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10868                           ;	Table Read Protection bit
 10869                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10870   30000C                     	org	3145740
 10871   30000C  0F                 	db	15
 10872                           
 10873                           ;Config register CONFIG7H @ 0x30000D
 10874                           ;	Boot Block Table Read Protection bit
 10875                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10876   30000D                     	org	3145741
 10877   30000D  40                 	db	64
 10878                           tosu	equ	0xFFF
 10879                           tosh	equ	0xFFE
 10880                           tosl	equ	0xFFD
 10881                           stkptr	equ	0xFFC
 10882                           pclatu	equ	0xFFB
 10883                           pclath	equ	0xFFA
 10884                           pcl	equ	0xFF9
 10885                           tblptru	equ	0xFF8
 10886                           tblptrh	equ	0xFF7
 10887                           tblptrl	equ	0xFF6
 10888                           tablat	equ	0xFF5
 10889                           prodh	equ	0xFF4
 10890                           prodl	equ	0xFF3
 10891                           indf0	equ	0xFEF
 10892                           postinc0	equ	0xFEE
 10893                           postdec0	equ	0xFED
 10894                           preinc0	equ	0xFEC
 10895                           plusw0	equ	0xFEB
 10896                           fsr0h	equ	0xFEA
 10897                           fsr0l	equ	0xFE9
 10898                           wreg	equ	0xFE8
 10899                           indf1	equ	0xFE7
 10900                           postinc1	equ	0xFE6
 10901                           postdec1	equ	0xFE5
 10902                           preinc1	equ	0xFE4
 10903                           plusw1	equ	0xFE3
 10904                           fsr1h	equ	0xFE2
 10905                           fsr1l	equ	0xFE1
 10906                           bsr	equ	0xFE0
 10907                           indf2	equ	0xFDF
 10908                           postinc2	equ	0xFDE
 10909                           postdec2	equ	0xFDD
 10910                           preinc2	equ	0xFDC
 10911                           plusw2	equ	0xFDB
 10912                           fsr2h	equ	0xFDA
 10913                           fsr2l	equ	0xFD9
 10914                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    1498
    Data        6
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     85      94
    BANK0           160     75      97
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DisplayInit@addr	PTR const unsigned char  size(2) Largest target is 103
		 -> Bcmd(CODE[103]), Rcmd1(CODE[20]), Rcmd2green144(CODE[13]), Rcmd3(CODE[43]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1365$buffer	PTR unsigned char  size(2) Largest target is 0

    S1365$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@cadena(BANK0[16]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    TFT_WriteString@str	PTR const unsigned char  size(2) Largest target is 21
		 -> main@cadena(BANK0[16]), STR_2(CODE[21]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _TFT_WriteString->_TFT_Print
    _TFT_Print->_TFT_FillRect
    _TFT_DrawVLine->_SetAddrWindow
    _TFT_DrawPixel->_SetAddrWindow
    _TFT_ST7735_Init->_DisplayInit
    _TFT_SetRotation->_WriteCommand
    _DisplayInit->_Delay_ms
    _TFT_FillScreen->_TFT_FillRect
    _TFT_FillRect->_SetAddrWindow
    _SetAddrWindow->_WriteCommand
    _WriteCommand->_SPI_Write

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0   50595
                                             51 BANK0     24    24      0
                       _TFT_FillRect
                     _TFT_FillScreen
                    _TFT_ST7735_Init
                    _TFT_SetRotation
                    _TFT_WriteString
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    15      7   23938
                                             72 COMRAM    13    13      0
                                             44 BANK0      7     0      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     2      4   23440
                                             66 COMRAM     6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13    10      3   22943
                                             53 COMRAM    13    10      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   5     3      2     947
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   20211
                                             45 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    2689
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _TFT_WriteString                                     14     3     11   15523
                                             33 COMRAM    14     3     11
                          _TFT_Print
 ---------------------------------------------------------------------------------
 (2) _TFT_Print                                            9     9      0   14094
                                             24 COMRAM     9     9      0
                      _TFT_DrawPixel
                      _TFT_DrawVLine
                       _TFT_FillRect
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawVLine                                       14    10      4    4181
                                              7 COMRAM    14    10      4
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawPixel                                        4     1      3    5218
                                              7 COMRAM     4     1      3
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (1) _TFT_ST7735_Init                                      2     2      0    1454
                                             12 COMRAM     2     2      0
                        _DisplayInit
                    _SPI_Init_Master
                          _SPI_Write
                    _TFT_SetRotation
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (1) _TFT_SetRotation                                      2     2      0     119
                                              2 COMRAM     2     2      0
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (2) _SPI_Init_Master                                      3     1      2     436
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _DisplayInit                                          7     5      2     745
                                              5 COMRAM     7     5      2
                           _Delay_ms
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _TFT_FillScreen                                       2     0      2    4435
                                             24 COMRAM     2     0      2
                       _TFT_FillRect
 ---------------------------------------------------------------------------------
 (3) _TFT_FillRect                                        17    12      5    4337
                                              7 COMRAM    17    12      5
                          _SPI_Write
                      _SetAddrWindow
 ---------------------------------------------------------------------------------
 (4) _SetAddrWindow                                        5     2      3    1112
                                              2 COMRAM     5     2      3
                          _SPI_Write
                       _WriteCommand
 ---------------------------------------------------------------------------------
 (5) _WriteCommand                                         1     1      0      44
                                              1 COMRAM     1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (6) _SPI_Write                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TFT_FillRect
     _SPI_Write
     _SetAddrWindow
       _SPI_Write
       _WriteCommand
         _SPI_Write
   _TFT_FillScreen
     _TFT_FillRect
   _TFT_ST7735_Init
     _DisplayInit
       _Delay_ms
       _SPI_Write
       _WriteCommand
     _SPI_Init_Master
     _SPI_Write
     _TFT_SetRotation
       _SPI_Write
       _WriteCommand
     _WriteCommand
   _TFT_SetRotation
   _TFT_WriteString
     _TFT_Print
       _TFT_DrawPixel
         _SPI_Write
         _SetAddrWindow
       _TFT_DrawVLine
         _SPI_Write
         _SetAddrWindow
       _TFT_FillRect
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      32        0.0%
BIGRAM             3F3      0       0      33        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      50       6       31.2%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4B      61       4       60.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     55      5E       1       98.9%
BITBIGSFRll         2C      0       0      30        0.0%
BITBIGSFR_1lh       21      0       0      26        0.0%
BITBIGSFR_5          D      0       0      19        0.0%
BITBIGSFR_1hhh       A      0       0      23        0.0%
BITBIGSFR_2          6      0       0      22        0.0%
BITBIGSFRh           5      0       0      28        0.0%
BITBIGSFRlhl         4      0       0      29        0.0%
BITBIGSFR_4          3      0       0      20        0.0%
BITBIGSFR_3          3      0       0      21        0.0%
BITBIGSFR_1hhl       1      0       0      24        0.0%
BITBIGSFR_1hl        1      0       0      25        0.0%
BITBIGSFR_1ll        1      0       0      27        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      31        0.0%
DATA                 0      0     10F      34        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Apr 02 21:56:41 2024

          ?_TFT_SetRotation 0001                ___fldiv@aexp 0019                ___fldiv@bexp 0018  
              ___fldiv@sign 0011                 _SSPSTATbits 0FC7                          l91 4AA0  
                        l69 5388                          l97 4AAC         ___wmul@multiplicand 0003  
                       l110 462A                         l200 4F08                         l113 4638  
                       l115 4646                         l211 4E2E                         l116 4648  
                       l231 59D6                         l215 4862                         l208 4DF4  
                       l209 4E24                         l218 4964                         l306 4690  
                       l309 46A6                         l414 60E0                         l417 5EA8  
                       l290 5336                         l259 59E6                         l189 4606  
                       l285 5338                         l293 4622                         l277 4D68  
                       l286 52A8                         l278 4D6A                         l470 5522  
                       l462 54C4                         l199 4F06                         l471 5562  
                       l472 55A2                         l464 54CA                         l474 5638  
                       l468 54E2                         l498 466E                         l763 50C4  
                       l772 46DE                         l757 4B56                         l768 510A  
                       l795 5210                         _pad 49C6                         prod 0FF3  
                       wreg 0FE8                ___flmul@aexp 0012                ___flmul@bexp 0013  
              ___flmul@sign 000D                ___flmul@temp 0018                ___flmul@prod 0014  
              ___fltol@exp1 000A                        l1112 6540                        l1121 67AE  
                      l1122 679C                        l1026 6A94                        l1210 49DC  
                      l1043 6BAE                        l1035 6D64                        l1027 6A82  
                      l1116 68A4                        l1052 6C7E                        l1028 6A48  
                      l1053 6C6C                        l1214 4A2A                        l1230 6F3A  
                      l1119 6736                        l1160 5728                        l1080 647A  
                      l1153 5690                        l1129 6866                        l1225 77BE  
                      l1082 62DA                        l1314 47D2                        l1091 6320  
                      l1331 5BF8                        l1307 5E3C                        l1156 57EC  
                      l1068 4818                        l1324 5006                        l1228 70F4  
                      l1093 6398                        l1085 629E                        l1094 6386  
                      l1334 5B3C                        l1167 5784                        l1351 48B2  
                      l1183 4750                        l1280 4CAE                        l1345 4908  
                      l4010 4F0A                        l1258 753C                        l1363 4C00  
                      l1371 4790                        l4100 4946                        l4012 4F2A  
                      l1380 4716                        l1276 4CA6                        l4102 494C  
                      l4014 4F68                        l4022 4FA8                        l1374 45F2  
                      l4104 4952                        l4024 4FBA                        l4016 4F90  
                      l4040 48D6                        l3400 4B78                        l3410 4626  
                      l4106 495E                        l5010 56B6                        l5002 563C  
                      l4018 4F9C                        l4050 5A72                        l3402 4B82  
                      l5020 5710                        l5004 564C                        l3500 6A56  
                      l3420 68D2                        l3412 68A6                        l4028 4FFE  
                      l4052 5A80                        l4060 5B60                        l4044 59E8  
                      l4036 48B4                        l3404 4B9E                        l5030 5774  
                      l5022 5712                        l5014 56CA                        l5006 565A  
                      l3510 6A80                        l3502 6A62                        l3430 690C  
                      l3422 68E2                        l3414 68B2                        l4062 5B9C  
                      l4046 5A08                        l4038 48C2                        l3406 4BD0  
                      l4400 485A                        l5040 57CC                        l5032 5792  
                      l5024 571E                        l5016 56D2                        l5008 56A0  
                      l3600 6D36                        l3520 6AD6                        l3512 6AA2  
                      l3504 6A66                        l3440 693A                        l3432 6912  
                      l3424 68F2                        l3416 68C0                        l4064 5BB0  
                      l4056 5AF0                        l4048 5A5E                        l4090 4922  
                      l4402 4860                        l4410 4CE6                        l5042 57DA  
                      l5034 5794                        l5026 575A                        l5018 56DE  
                      l3610 6D54                        l3602 6D3C                        l3530 6B10  
                      l3522 6AE4                        l3514 6AB2                        l3506 6A74  
                      l3450 696E                        l3442 693C                        l3434 6924  
                      l3426 68F4                        l3418 68C2                        l4066 5BD8  
                      l4058 5B2C               TFT_FillRect@h 000A                        l4092 4928  
                      l4084 490C                        l4500 57F4                        l4420 4D34  
                      l4412 4CEA                        l4404 4CB2                        l5044 57DC  
                      l5036 5798                        l5028 5766                        l3700 6262  
                      l3604 6D3E                        l3540 6B7C                        l3532 6B12  
                      l3524 6AF2                        l3508 6A76                        l3460 69AA  
                      l3444 694C                        l3452 6976                        l3436 6926  
                      l3428 68FC                        l4068 5BE8                        l3622 45FC  
                      l4094 492E                        l4086 4916                        l4510 5830  
                      l4502 5800                        l4422 4D4A                        l4414 4CEE  
                      l4406 4CC4                        l5038 57BC                        l3710 62A8  
                      l3702 626A                        l3606 6D44                        l3550 6BD4  
                      l3542 6B7E                        l3534 6B1C                        l3526 6AFE  
                      l3518 6AC6                        l3470 69BE                        l3462 69AE  
                      l3454 6986                        l3446 695C                        l3438 692C  
                      l3630 4666                        l4350 4C54                        l4342 4C02  
                      l3624 45FE                        l4096 493A                        l4088 491C  
                      l4360 5234                        l4600 4A34                        l4520 5872  
                      l4512 5840                        l4504 5812                        l4424 4D56  
                      l4416 4D2C                        l4408 4CD6                        l3720 6300  
                      l3712 62C6                        l3704 627A                        l3640 60FE  
                      l3800 651A                        l3608 6D52                        l3560 6C02  
                      l3544 6B8E                        l3528 6B02                        l3536 6B22  
                      l3480 69D2                        l3472 69C2                        l3464 69B2  
                      l3456 6998                        l3448 696C                        l5400 4864  
                      l4352 4C74                        l4344 4C0A                        l3626 4604  
                      l4098 4940                        l4370 52A2                        l4362 5238  
                      l4610 4A82                        l4602 4A4E                        l4530 58AA  
                      l4522 5876                        l4514 584C                        l4506 5824  
                      l4418 4D32                        l3730 633E                        l3722 6306  
                      l3714 62C8                        l3706 628E                        l3642 610E  
                      l3650 6138                        l3634 60E2                        l3802 652A  
                      l3562 6C10                        l3554 6BE8                        l3570 6C2E  
                      l3538 6B48                        l3546 6B9E                        l3482 69D6  
                      l3474 69C6                        l3466 69B6                        l3458 69A6  
                      l3490 69E6                        l5402 4878                        l5410 4898  
                      l4346 4C2C                        l4354 4C80                        l4380 5310  
                      l4372 52E6                        l4364 523C                        l4356 5214  
                      l4620 4E40                        l4612 4A8A                        l4604 4A56  
                      l4540 58E8                        l4532 58AE                        l4524 587E  
                      l4516 585E                        l4508 582C                        l3740 63A8  
                      l3732 6342                        l3724 6310                        l3716 62D8  
                      l3708 629C                        l3660 6164                        l3652 6148  
                      l3644 611E                        l3636 60EE                        l3820 65AC  
                      l3812 6574                        l3804 6530                        l3564 6C18  
                      l3556 6BF2                        l3548 6BC4                        l3572 6C3C  
                      l3492 69EA                        l3484 69DA                        l3476 69CA  
                      l3468 69BA                        l5404 4884                        l3396 4B58  
                      l5500 70FC                        l5420 6D8E                        l5412 6D66  
                      l3628 464A                        l4348 4C38                        l4382 531C  
                      l4374 52EC                        l4366 524E                        l4358 5224  
                      l4630 4E6E                        l4622 4E48                        l4614 4A9C  
                      l4606 4A68                        l4550 5920                        l4542 58F0  
                      l4534 58BE                        l4526 5890                        l4518 586A  
                      l4390 481C                        l4710 5EB6                        l4702 5E7E  
                      l3750 640A                        l3742 63B4                        l3734 6350  
                      l3726 631E                        l3718 62EA                        l3662 6174  
                      l3670 619E                        l3654 614E                        l3646 612E  
                      l3638 60FC                        l3910 4ADC                        l3830 65F6  
                      l3822 65C4                        l3814 6580                        l3806 6550  
                      l3582 6C8E                        l3590 6CE4                        l3574 6C40  
                      l3566 6C1C                        l3558 6C00                        l3494 6A14  
                      l3486 69DE                        l3478 69CE                        l3902 47D4  
                      l5406 4888                        l3398 4B68                        l5510 712C  
                      l5502 710C                        l5430 6DE4                        l5422 6DB2  
                      l5414 6D6C                        ?_pad 000F                        l4376 52EE  
                      l4368 5264                        l4384 4670                        l4640 4EA8  
                      l4632 4E7C                        l4624 4E58                        l4616 4E30  
                      l4608 4A70                        l4552 5928                        l4544 58F4  
                      l4536 58CA                        l4528 58A2                        l4800 4DF6  
                      l4392 482E                        l4720 5F34                        l4712 5EC6  
                      l4704 5EA4                        l3760 6468                        l3752 6420  
                      l3744 63C2                        l3736 637E                        l3728 6330  
                      l3680 61E0                        l3672 61AE                        l3664 6184  
                      l3656 6154                        l3648 6130                        l3920 4B54  
                      l3912 4AEC                        l3840 664C                        l3832 6606  
                      l3824 65D0                        l3816 658A                        l3808 6560  
                      l3592 6CF4                        l3584 6C9A                        l3576 6C4E  
                      l3568 6C2C                        l3496 6A30                        l3488 69E2  
                      l3904 47E4                        l5408 4894                        l5600 75C6  
                      l5512 713E                        l5520 717E                        l5504 7118  
                      l5440 6E34                        l5432 6DF0                        l5424 6DBC  
                      l5416 6D7C               TFT_FillRect@w 0009                        l4378 5300  
                      l4386 467C                        l4650 4EE8                        l4642 4EBA  
                      l4634 4E82                        l4626 4E5C                        l4618 4E32  
                      l4570 5968                        l4554 592C                        l4546 58FC  
                      l4538 58DC                        l4810 4E1A                        l4802 4DFC  
                      l4394 4840                        l4730 5F8A                        l4722 5F4E  
                      l4714 5EE0                        l3762 646E                        l3754 643A  
                      l3746 63EC                        l3674 61C4                        l3666 6194  
                      l3658 6162                        l3914 4B1A                        l3930 5074  
                      l3850 66F0                        l3842 6668                        l3834 6612  
                      l3826 65DC                        l3818 65A0                        l3594 6D04  
                      l3586 6CA8                        l3578 6C64                        l3498 6A40  
                      l5602 75CC                        l5610 7664                        l5530 7266  
                      l5522 7186                        l5514 714C                        l5506 7120  
                      l5450 6E68                        l5442 6E38                        l5434 6DF8  
                      l5426 6DC4                        l5418 6D8A               TFT_FillRect@x 0018  
             TFT_FillRect@y 0008                        l4388 468C                        l4644 4ECA  
                      l4636 4E92                        l4628 4E6A                        l4652 4EF4  
                      l4580 599A                        l4572 597A                        l4548 590E  
                      l4812 4E28                        l4804 4E02                        l4396 4842  
                      l4740 5FE2                        l4732 5F8C                        l4724 5F74  
                      l4716 5F0A                        l3764 6470                        l3756 6456  
                      l3748 63F0                        l3692 6218                        l3676 61D4  
                      l3684 61F4                        l3668 6196                        l3916 4B2A  
                      l3908 4AAE                        l3940 5102                        l3932 5084  
                      l3924 5008                        l3860 6746                        l3852 66FE  
                      l3844 6674                        l3836 6622                        l3828 65EA  
                      l3780 64A8                        l3772 647C                        l3596 6D24  
                      l3588 6CE2                        l5380 476C                        l5620 76E4  
                      l5612 7682                        l5604 7624                        l5540 7324  
                      l5532 729A                        l5524 7196                        l5516 7164  
                      l5508 7128                        l5460 6EC0                        l5444 6E3E  
                      l5428 6DD4                        l5436 6DFC                        l5700 5DC8  
                      l4814 4608                        l4646 4ECE                        l4638 4E96  
                      l4574 5982                        l4558 5940                        l4806 4E04  
                      l4398 4854                        l4750 6054                        l4742 6006  
                      l4734 5F9C                        l4726 5F76                        l4718 5F24  
                      l4830 54A8                        l3758 645A                        l3694 6232  
                      l3686 6204                        l3678 61DC                        l3918 4B4E  
                      l3942 5108                        l3934 5092                        l3926 5036  
                      l3862 6754                        l3854 671C                        l3846 6690  
                      l3838 663C                        l3790 64E4                        l3782 64B8  
                      l3774 6488                        l3950 46CE                        l3598 6D28  
                      l5382 4770                        l5390 49F8                        l5630 7732  
                      l5622 76F2                        l5614 769E                        l5606 7658  
                      l5550 73C0                        l5542 733A                        l5526 71AA  
                      l5534 72A0                        l5518 7176                        l5462 6EC6  
                      l5446 6E46                        l5438 6E22                        l5454 6E84  
                      l4648 4EE0                        l4576 5986                        l4568 5956  
                      l4592 59B0                        l4808 4E16                        l4752 608C  
                      l4744 6012                        l4736 5FB6                        l4728 5F7A  
                      l4840 5530                        l4832 54B8                        l3696 6242  
                      l3688 6204                        l3936 50A4                        l3928 5046  
                      l3872 67BE                        l3880 6806                        l3864 6758  
                      l3856 6726                        l3848 66BA                        l3792 64EA  
                      l3784 64C8                        l3776 6496                        l3960 5136  
                      l5376 4752                        l5392 49FC                        l5384 49C6  
                      l5640 779A                        l5632 7738                        l5624 770A  
                      l5616 76A6                        l5608 7660                        l5552 7416  
                      l5560 7468                        l5544 736C                        l5536 72BE  
                      l5528 720E                        l5480 6F50                        l5464 6ECE  
                      l5456 6EAA                        l5472 6EEA                        l5448 6E5E  
                      l5712 5E1A                        l5720 479E                        l4594 59D8  
                      l4498 57F0                        l4770 4D6E                        l4754 6094  
                      l4746 603C                        l4738 5FC6                        l4690 5E52  
                      l4850 5598                        l4842 5554                        l4834 54F0  
                      l3698 6252                        l3938 50B2                        l3890 687A  
                      l3882 6820                        l3874 67CA                        l3866 6766  
                      l3858 6734                        l3794 64F8                        l3786 64CE  
                      l3778 6498                        l3946 46A8                        l3970 5184  
                      l3962 5160                        l3954 510C                        l5378 475E  
                      l5394 4A1A                        l5386 49D4                        l5642 77A2  
                      l5634 7756                        l5618 76B4                        l5570 749A  
                      l5562 7478                        l5554 741C                        l5546 737C  
                      l5538 72F2                        l5490 7046                        l5482 6F84  
                      l5474 6F04                        l5458 6EBC                        l5706 5DF2  
                      l5650 5C28                        l5722 47AE                        l5730 4720  
                      l4596 59E4                        l4780 4D8C                        l4772 4D76  
                      l4756 60A0                        l4748 6042                        l4692 5E64  
                      l4860 55E2                        l4852 55B0                        l4844 5558  
                      l4836 5514                        l4828 54A4                        l3892 6888  
                      l3884 6834                        l3876 67D8                        l3868 6794  
                      l3796 64FA                        l3788 64DE                        l3948 46BE  
                      l3980 51B0                        l3964 5162                        l3956 5122  
                      l5388 49E8                        l5396 46E0                        l5628 771C  
                      l5636 7774                        l5580 756C                        l5572 7512  
                      l5564 7480                        l5556 7450                        l5548 738C  
                      l5492 707A                        l5484 6FC2                        l5708 5E0A  
                      l5660 5C56                        l5652 5C36                        l5724 47CA  
                      l5732 4728                        l5740 533A                        l4598 4A2E  
                      l4790 4DBA                        l4782 4D9A                        l4774 4D86  
                      l4758 60DA                        l4854 55D4                        l4846 5570  
                      l4838 5518                        l4862 5608                        l3894 688A  
                      l3886 684E                        l3878 6802                        l3798 650A  
                      l3990 51E0                        l3966 5172                        l5398 46E8  
                      l5638 7784                        l5590 7592                        l5582 7570  
                      l5574 7532                        l5566 7486                        l5558 7464  
                      l5494 7082                        l5486 6FF4                        l5478 6F4A  
                      l5670 5CAE                        l5654 5C3A                        l5646 5BFA  
                      l5718 4792                        l5734 4730                        l5750 5370  
                      l5742 5346                        l4792 4DBE                        l4784 4DA6  
                      l4776 4D88                        l4696 5E7A                        l4688 5E40  
                      l4856 55D8                        l4848 5594                        l3888 686A  
                      l3896 6890                        l3992 51F0                        l3976 519C  
                      l3968 5176                        l5592 7598                        l5584 7576  
                      l5576 754E                        l5568 748E                        l5488 7032  
                      l5680 5CF6                        l5672 5CBA                        l5664 5C5E  
                      l5656 5C42                        l5648 5C1C                        l5736 4744  
                      l5728 4718                        l5760 53D8                        l5752 5372  
                      l5744 5358                        l4794 4DC4                        l4786 4DAA  
                      l4778 4D8A                        l3898 6894                        l3994 5200  
                      l3986 51C4                        l3978 51A6                        l5586 757E  
                      l5578 755C                        l5594 759E                        l5498 70C2  
                      l5690 5D44                        l5682 5CFE                        l5674 5CCE  
                      l5658 5C46                        l5666 5C7C                        l5770 5482  
                      l5762 53E6                        l5754 538C                        l5746 535E  
                      l4796 4DD0                        l4788 4DAE                        l3988 51D0  
                      l5596 75B0                        l5588 758E                        l5692 5D6C  
                      l5676 5CDC                        l5668 5C8C                        l5764 5404  
                      l5756 53A0                        l5748 5364                        l4798 4DE2  
                      l5598 75C2                        l5678 5CEE                        l5686 5D06  
                      l5766 5424                        l5758 53C8                        l5696 5D94  
                      l5688 5D24                        l5768 5454                        l5698 5DAA  
                      STR_1 7DB0                        STR_2 7D9B                        STR_3 7DB6  
                      STR_6 7DBA                        u3200 4638                        u4000 67D8  
                      _LATD 0F8C                        u3201 4634                        u4001 67D4  
                      _LATE 0F8D                        u3210 4646                        u4010 6820  
                      u3211 4642                        u4011 681C                        u4100 50B2  
                      u4020 684E                        u3300 69A6                        u3220 68C0  
                      u4101 50AE                        u4021 684A                        u3301 69A2  
                      u3221 68BC                        u4110 5102                        u4030 6888  
                      u3310 6A14                        u3230 68D2                        u4111 50FE  
                      u4031 6884                        u3311 6A10                        u3231 68CE  
                      u5000 5840                        u4040 4ADC                        u4120 46BE  
                      u3400 6AF2                        u3320 6A2C                        u3240 68E2  
                      u3160 4B68                        u5001 583C                        u4041 4AD8  
                      u4121 46BA                        u3401 6AEE                        u3321 6A26  
                      u3241 68DE                        u3161 4B64                        u5010 585E  
                      u4050 4B1A                        u3410 6B10                        u3330 6A2E  
                      u3250 6924                        u4130 5122                        u3170 4B78  
                      u5011 585A                        u4051 4B16                        u3411 6B0C  
                      u3251 6920                        u4131 511E                        u3171 4B74  
                      u5100 5968                        u5020 5890                        u4060 4B4E  
                      u3500 6C4E                        u3420 6B48                        u3340 6A56  
                      u3260 693A                        u4140 5156                        u4220 4F4A  
                      u4300 48C2                        u3180 4B9E                        u5101 5964  
                      u5021 588C                        u4061 4B4A                        u3501 6C4A  
                      u3421 6B44                        u3341 6A52                        u3261 6936  
                      u4301 48BE                        u3181 4B9A                        u5110 597A  
                      u5030 58A2                        u4070 5036                        u3510 6C64  
                      u3430 6B8E                        u3350 6A74                        u3270 694C  
                      u4150 5184                        u4230 4F68                        u4310 5A30  
                      u3190 4BD0                        u5111 5976                        u5031 589E  
                      u4071 5032                        u3511 6C60                        u3431 6B8A  
                      u3351 6A70                        u3271 6948                        u4151 5180  
                      u4231 4F64                        u3191 4BCC                        u5200 4EBA  
                      u5120 5996                        u5040 58BE                        u4080 5074  
                      u3600 6D52                        u3520 6C7A                        u3440 6BC4  
                      u3360 6A94                        u3280 695C                        u4160 5198  
                      u4240 4F90                        u4400 5BD8                        u4320 5A5E  
                      u5201 4EB6                        u5121 5992                        u5041 58BA  
                      u4081 5070                        u3601 6D4E                        u3521 6C76  
                      u3441 6BC0                        u3361 6A90                        u3281 6958  
                      u4161 5194                        u4145 514C                        u4241 4F8C  
                      u4225 4F40                        u4401 5BD4                        u4321 5A5A  
                      u5210 4EE0                        u5130 59AC                        u5050 58DC  
                      u4090 5092                        u3530 6C8E                        u3450 6BD4  
                      u3370 6AA2                        u3290 6998                        u4170 51C0  
                      u4250 4FBA                        u4330 5A80                        u5211 4EDC  
                      u5131 59A8                        u5051 58D8                        u4091 508E  
                      u3531 6C8A                        u3451 6BD0                        u3371 6A9E  
                      u3291 6994                        u4171 51BC                        u4251 4FB6  
                      u4331 5A7C                        u4315 5A26                        u5220 4F06  
                      u5140 4A4E                        u5060 590E                        u3700 627A  
                      u3620 60FC                        u3540 6CA8                        u3460 6C00  
                      u3380 6AB2                        u4180 51E0                        u5221 4F02  
                      u5141 4A4A                        u5061 590A                        u3701 6276  
                      u3621 60F8                        u3541 6CA4                        u3461 6BFC  
                      u3381 6AAE                        u4181 51DC                        u5150 4A68  
                      u5070 5920                        u5310 5E52                        u3710 629C  
                      u3630 610E                        u3550 6CE2                        u3470 6C10  
                      u3390 6AE4                        u4190 51F0                        u4270 4FF4  
                      u4350 5AEC                        u5151 4A64                        u5071 591C  
                      u5311 5E4E                        u3711 6298                        u3631 610A  
                      u3551 6CDE                        u3471 6C0C                        u3391 6AE0  
                      u4191 51EC                        u4271 4FEE                        u4351 5AE8  
                      u5160 4A82                        u5080 593C                        u5400 5FB6  
                      u5320 5E64                        u3800 63A8                        u3720 62C6  
                      u3640 611E                        u3560 6CF4                        u3480 6C2C  
                      u4280 4FF6                        u4360 5B10                        u5161 4A7E  
                      u5081 5938                        u5401 5FB2                        u5321 5E60  
                      u3801 63A4                        u3721 62C2                        u3641 611A  
                      u3561 6CF0                        u3481 6C28                        u4265 4FCC  
                      u4345 5A94                        u5170 4A9C                        u5090 5952  
                      u5410 5FC6                        u5330 5E76                        u3810 63C2  
                      u3730 62EA                        u3650 6162                        u3570 6D04  
                      u3490 6C3C                        u4370 5B2C                        u4346 5A9E  
                      u5171 4A98                        u5091 594E                        u5411 5FC2  
                      u5331 5E72                        u3811 63BE                        u3731 62E6  
                      u3651 615E                        u3571 6D00                        u3491 6C38  
                      u4371 5B28                        u4347 5AAE                        u5420 603C  
                      u5340 5EB6                        u5500 54B8                        u3820 640A  
                      u3740 6300                        u3660 6174                        u3900 651A  
                      u3580 6D24                        u4380 5B80                        u6300 48B2  
                      u5421 6038                        u5341 5EB2                        u5501 54B4  
                      u3821 6406                        u3741 62FC                        u3661 6170  
                      u3901 6516                        u3581 6D20                        u4365 5B06  
                      u6301 48AE                        u5190 4EA8                        u5430 6054  
                      u5350 5EC6                        u5510 5510                        u3830 643A  
                      u3750 631E                        u3670 6184                        u3910 6550  
                      u3590 6D36                        u4390 5B9C                        u6310 6D8A  
                      u5191 4EA4                        u5431 6050                        u5351 5EC2  
                      u3831 6436                        u3751 631A                        u3671 6180  
                      u3911 654C                        u3591 6D32                        u4391 5B98  
                      u6311 6D86                        u4800 5234                        u5440 608C  
                      u5360 5F24                        u5520 5550                        u3840 6468  
                      u3760 633E                        u3680 61C4                        u3920 6560  
                      u6400 6FF4                        u6320 6DD4                        u4801 5230  
                      u5185 4AA8                        u5441 6088                        u5361 5F20  
                      u3841 6464                        u3761 633A                        u3681 61C0  
                      u3921 655C                        u4385 5B76                        u6401 6FF0  
                      u6321 6DD0                        u4810 524E                        u5186 4AAA  
                      u5450 60DA                        u5370 5F34                        u5530 5590  
                      u3770 6350                        u3690 6204                        u3930 66DA  
                      u3850 6496                        u6410 7032                        u6330 6DE4  
                      u4811 524A                        u5451 60D6                        u5371 5F30  
                      u3771 634C                        u3691 6200                        u3851 6492  
                      u6411 702E                        u6331 6DE0                        u4820 5260  
                      u4900 4CD6                        u5380 5F8A                        u5540 55D0  
                      u3780 637E                        u3940 6734                        u3860 64A8  
                      u6260 4790                        u6500 736C                        u6420 70BE  
                      u6340 6E22                        u4821 525C                        u4901 4CD2  
                      u5381 5F86                        u5517 5506                        u3781 637A  
                      u3941 6730                        u3861 64A4                        u6261 478C  
                      u6501 7368                        u6421 70BA                        u6341 6E1E  
                      u4830 52A2                        u5470 4DE2                        u4910 4CE6  
                      u5390 5F9C                        u5550 5628                        u3790 6394  
                      u3950 6754                        u3870 64B8                        u6270 49D4  
                      u6510 737C                        u6430 70F4                        u6350 6E34  
                      u4831 529E                        u5471 4DDE                        u4911 4CE2  
                      u5391 5F98                        u5527 5546                        u3791 6390  
                      u3951 6750                        u3935 66D0                        u3871 64B4  
                      u6271 49D0                        u6511 7378                        u6431 70F0  
                      u6351 6E30                        u4840 52E6                        u5480 4DF4  
                      u4920 4D2C                        u5560 5638                        u3960 6766  
                      u3880 64F8                        u6280 4A1A                        u6600 7704  
                      u6520 7416                        u6440 710C                        u6360 6EAA  
                      u4841 52E2                        u5481 4DF0                        u4921 4D28  
                      u5561 5634                        u5537 5586                        u3961 6762  
                      u3881 64F4                        u6281 4A16                        u6601 76FE  
                      u6521 7412                        u6441 7108                        u6361 6EA6  
                      u4850 5336                        u5490 4E16                        u4930 4D68  
                      u3970 6794                        u3890 650A                        u6290 4716  
                      u6610 7706                        u6530 7464                        u6450 713E  
                      u6370 6EBC                        u4770 4C2C                        u4851 5332  
                      u5491 4E12                        u4931 4D64                        u5547 55C6  
                      u3971 6790                        u3891 6506                        u6291 4712  
                      u6531 7460                        u6451 713A                        u6371 6EB8  
                      u4771 4C28                        u4860 46A6                        u5900 57CC  
                      u5820 564C                        u3980 67AA                        u6620 7718  
                      u6540 7512                        u6460 714C                        u6380 6F36  
                      u4780 4CA6                        u6700 47CA                        u4861 46A2  
                      u5557 561E                        u5901 57C8                        u5821 5648  
                      u3981 67A6                        u6621 7714                        u6541 750E  
                      u6461 7148                        u6381 6F32                        u4781 4CA2  
                      u6701 47C6                        u4790 5224                        u4870 482E  
                      u5910 57DA                        u5830 565A                        u3990 67BE  
                      u6630 7756                        u6550 754E                        u6470 7176  
                      u6390 6FC2                        u6710 53E6                        u4791 5220  
                      u4871 482A                        u5911 57D6                        u5831 5656  
                      u3991 67BA                        u6631 7752                        u6551 754A  
                      u6471 7172                        u6391 6FBE                        u6711 53E2  
                      u4880 4840                        u5840 56B6                        u6640 7774  
                      u6560 755C                        u6480 72BE                        u4881 483C  
                      u5841 56B2                        u6641 7770                        u6561 7558  
                      u6481 72BA                        u4890 4CC4                        u5850 570C  
                      u6650 7784                        u6570 75B0                        u6490 7324  
                      u4891 4CC0                        u5851 5708                        u6651 7780  
                      u6571 75AC                        u6491 7320                        u4980 5812  
                      u5860 5756                        u6580 7682                        u6660 5C1C  
                      u4981 580E                        u5861 5752                        u6581 767E  
                      u6661 5C18                        u4990 5824                        u5870 5774  
                      u6590 769E                        u6670 5C8C                        u4991 5820  
                      u5871 5770                        u6591 769A                        u6671 5C88  
                      u6727 53D0                        u5880 5784                        u6680 5CAE  
                      u6737 4D7C                        u5881 5780                        u6681 5CAA  
                      u5890 5792                        u6690 5D40                        u6747 4682  
                      u5891 578E                        u6691 5D3C                        _Bcmd 7CE8  
   __end_of_TFT_WriteString 563A                        _dbuf 0100                        _labs 48B4  
                      _main 533A                        _font 77C1                        _prec 00B5  
                      pad@i 0015                        pad@p 0012                        fsr0h 0FEA  
                      fsr1h 0FE2                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _wrap 00C0               ___fpclassifyf 4F0A  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
           ___fldiv@new_exp 0012                ___param_bank 0000                       ??_pad 0014  
           ??_TFT_DrawVLine 000C             ??_TFT_DrawPixel 000B         __end_of_DisplayInit 4F0A  
             ___fltol@sign1 0009                       ?_labs 0001              TFT_FillRect@hi 0016  
           __end_of___fladd 6D66              TFT_FillRect@lo 0017                       ?_main 0001  
            TFT_FillRect@px 0014             __end_of___fldiv 647C                _WriteCommand 45FA  
           __end_of___flneg 46E0             __end_of___flmul 68A6             __end_of___flsub 481A  
           __end_of___fltol 5212                vfpfcnvrt@fmt 0037         TFT_WriteString@size 002C  
                     _TRISD 0F95                       _TRISE 0F96          DisplayInit@numArgs 000A  
            TFT_DrawVLine@h 0009                       _Rcmd1 7D7A                       _Rcmd3 7D4F  
            TFT_DrawVLine@x 0015              TFT_DrawVLine@y 0008     __end_of_SPI_Init_Master 4AAE  
                     _flags 00B7         read_prec_or_width@c 0009         read_prec_or_width@n 000A  
                     _fputc 4B58                       _fputs 4752                       labs@a 0001  
                     pad@fp 000F                       _width 00B3                       _putch 45F2  
            TFT_DrawPixel@x 000B              TFT_DrawPixel@y 0008               _Rcmd2green144 7D8E  
                     tablat 0FF5                       status 0FD8             __end_of_sprintf 4752  
            ?___fpclassifyf 0001            __end_of_Delay_ms 46A8                __end_of_Bcmd 7D4F  
           __initialization 4966    __end_of_Rcmd2green160x80 7CCE                __end_of_labs 490A  
              __end_of_main 54A4                __end_of_font 7CC1                  _Rcmd2green 7CDB  
          __end_of_Rcmd2red 7CDB                      ??_labs 0005                      ??_main 0093  
          ??_TFT_FillScreen 001B               __activetblptr 0002  __end_of_read_prec_or_width 4CB0  
          TFT_SetRotation@m 0003               TFT_Print@line 001E                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 0FC4                      _ADRESL 0FC3  
                    ?_putch 0001        TFT_WriteString@color 0028            ?_TFT_WriteString 0022  
             vfpfcnvrt@done 003F                      _SSPBUF 0FC9            __end_of___xxtofl 57EE  
           _TFT_ST7735_Init 4D6C             TFT_DrawVLine@hi 0013             TFT_DrawVLine@lo 0014  
               _DisplayInit 4E30                vfprintf@cfmt 0047                      ___flge 5008  
                    ___fleq 4AAE                   ??___fladd 0009                      ___wmul 464A  
                 ??___fldiv 0009                   ??___flneg 0005                   ??___flmul 0009  
                 ??___flsub 0022                   ??___fltol 0005                      _efgtoa 6D66  
                    __width 005D                      _floorf 59E8                      _memcpy 4864  
      read_prec_or_width@ap 0008                      clear_0 499E                      clear_1 49AA  
                    clear_2 49B6                      isa$std 0001           __end_of_TFT_Print 60E2  
                    pad@buf 0010                      _strcpy 46E0           __end_of_SPI_Write 464A  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
              __pdataCOMRAM 005E                      fputs@s 0009             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 77C0  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            ?_SPI_Init_Master 0001            __end_of_vfprintf 47D4  
                 ??_sprintf 0049                  ___flge@ff1 001A                  ___flge@ff2 001E  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 49BC                  ___flneg@f1 0001  
             ___rparam_used 0001                  ___fltol@f1 0001               __end_of_Rcmd1 7D8E  
             __end_of_Rcmd3 7D7A              __pcstackCOMRAM 0001                __pidataBANK0 45F5  
             _SetAddrWindow 490A               __end_of_fputc 4C02               __end_of_fputs 4792  
             __end_of_putch 45F4                   ?_Delay_ms 0001                     ??_fputc 0004  
   __end_of_TFT_ST7735_Init 4E30                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00AB                  __pbssBANK1 0100                     ?___flge 001A  
                   ?___fleq 0001              ?_SetAddrWindow 0003                     ?___wmul 0001  
                   ?_efgtoa 002E                     ?_floorf 001A                     ?_memcpy 0001  
                   ?_strcpy 0001       TFT_SetRotation@madctl 0004                   ?___xxtofl 0001  
                ??_Delay_ms 0003       TFT_WriteString@x_prev 002F                     __Hparam 0000  
             SPI_Write@dato 0001                     __Lparam 0000                     ___fladd 68A6  
                   ___fldiv 60E2                     ___flneg 46A8                     ___flmul 647C  
                   ___flsub 47D4                     ___fltol 510C          SPI_Init_Master@smp 0002  
                 ?_vfprintf 0043                     __height 005C                     __pcinit 4966  
                   __ramtop 0800       __end_of_TFT_DrawVLine 4D6C                     __ptext0 533A  
                   __ptext1 4718                     __ptext2 4792                     __ptext3 5BFA  
                   __ptext4 4C02                     __ptext5 464A                     __ptext6 6D66  
                   __ptext7 46E0                     __ptext8 49C6                     __ptext9 4752  
     __end_of_TFT_DrawPixel 4864                     __xstart 00BB                     __ystart 00BA  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0005                     efgtoa@c 0033  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 002F  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0075                     _sprintf 4718                     main@res 00A7  
          ?_TFT_ST7735_Init 0001        end_of_initialization 49BC                     floorf@e 0028  
                   floorf@m 0024                     floorf@u 002A                     floorf@x 001A  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                 Delay_ms@d 0001                   Delay_ms@i 0004                     fputc@fp 0003  
             __Lmediumconst 77C0                     fputs@fp 000B          _read_prec_or_width 4C02  
           ??_SetAddrWindow 0006                ?_DisplayInit 0006           __end_of_vfpfcnvrt 5E3E  
                efgtoa@mode 0069                  efgtoa@sign 0081             WriteCommand@cmd 0002  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0007  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 003B               ?_TFT_FillRect 0008                  ??_vfprintf 0047  
                   strcpy@d 0005                 ___fladd@grs 0010                   _TFT_Print 5E3E  
             ___xxtofl@sign 0009                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95        ??_read_prec_or_width 0009  
               ___fldiv@grs 0014                 ___fldiv@rem 000D                   _SPI_Write 4624  
         ??_TFT_SetRotation 0003             DisplayInit@addr 0006                  main@cadena 0095  
               ___flmul@grs 000E      DisplayInit@numCommands 0009              ??_TFT_FillRect 000D  
            __end_of___flge 510C              __end_of___fleq 4B58                 vfpfcnvrt@ap 0038  
               vfpfcnvrt@cp 0041                 vfpfcnvrt@fp 0036              __end_of___wmul 4670  
        TFT_WriteString@str 0026               __pidataCOMRAM 45F4              __end_of_efgtoa 77C0  
            __end_of_floorf 5BFA              __end_of_memcpy 48B4                  floorf@F521 00AB  
            __end_of_strcpy 4718         start_initialization 4966                  ?_TFT_Print 0001  
        TFT_DrawVLine@color 000A                 __end_of_pad 4A2C                  ?_SPI_Write 0001  
        __end_of_Rcmd2green 7CE8       __end_of___fpclassifyf 5008                 vfprintf@fmt 0044  
                  ??___flge 0022                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 0034                 __pdataBANK0 00BC                    ??_floorf 001E  
                  ??_memcpy 0007               ?_WriteCommand 0001                    ??_strcpy 0005  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 0005  
                 ___fldiv@b 0001                   ___flmul@a 0005                   ___flmul@b 0001  
               __pbssCOMRAM 0056                   ___flsub@a 001E                   ___flsub@b 001A  
             __pcstackBANK0 0060        SPI_Init_Master@reloj 0003              SetAddrWindow@h 0005  
     __end_of_Rcmd2green144 7D9B              SetAddrWindow@w 0004              SetAddrWindow@x 0007  
            SetAddrWindow@y 0003                   __colstart 005B                 _efgtoa$1490 0066  
             __pmediumconst 77C0                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___flneg 0001                    ?___flmul 0001                    ?___flsub 001A  
                  ?___fltol 0001              ??_WriteCommand 0002                   __rowstart 00B9  
         ??_TFT_WriteString 002D           TFT_FillRect@color 000B                 ??_TFT_Print 0019  
               ??_SPI_Write 0001                    ?_sprintf 008C        __end_of_TFT_FillRect 533A  
            ___wmul@product 0005                    _LATDbits 0F8C                    _PIR1bits 0F9E  
         ??_SPI_Init_Master 0003                   _vfpfcnvrt 5BFA             _TFT_SetRotation 57EE  
                 _textcolor 00BE                  _ADCON0bits 0FC2           ___wmul@multiplier 0001  
        TFT_DrawPixel@color 0009                    _Delay_ms 4670                  TFT_Print@c 001F  
                TFT_Print@i 0021                  TFT_Print@j 0020           TFT_WriteString@bg 002A  
                vfpfcnvrt@c 0040              _TFT_FillScreen 4608                   copy_data0 497A  
                  _Rcmd2red 7CCE                    __Hrparam 0000                   memcpy@tmp 0007  
                vfprintf@ap 0046                    __Lrparam 0000                  vfprintf@fp 0043  
     __end_of_SetAddrWindow 4966                  ?_vfpfcnvrt 0036         SPI_Init_Master@modo 0001  
        ___fpclassifyf@F465 00AF                  sprintf@fmt 008D                    ___xxtofl 563A  
    __end_of_TFT_FillScreen 4624                    __ptext10 4B58                    __ptext11 45F2  
                  __ptext20 647C                    __ptext12 4864                    __ptext21 5008  
                  __ptext13 48B4                    __ptext30 57EE                    __ptext22 4AAE  
                  __ptext14 59E8                    __ptext31 4A2C                    __ptext23 60E2  
                  __ptext15 4F0A                    __ptext32 4E30                    __ptext24 563A  
                  __ptext16 510C                    __ptext33 4670                    __ptext25 54A4  
                  __ptext17 47D4                    __ptext34 4608                    __ptext26 5E3E  
                  __ptext18 68A6                    __ptext35 5212                    __ptext27 4CB0  
                  __ptext19 46A8                    __ptext36 490A                    __ptext28 481A  
                  __ptext37 45FA                    __ptext29 4D6C                    __ptext38 4624  
                strcpy@dest 0001        __end_of_WriteCommand 4608                    _cursor_x 0058  
                  _cursor_y 0056                    _tabcolor 005A                    efgtoa@fp 002E  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0071  
   __end_of_TFT_SetRotation 59E8                    isa$xinst 0000      TFT_ST7735_Init@options 000E  
                  _rotation 00B8                    _vfprintf 4792               DisplayInit@ms 000B  
                  _textsize 005E                    main@calc 00A5         TFT_FillScreen@color 0019  
          TFT_WriteString@x 0022            TFT_WriteString@y 0024               _TFT_DrawVLine 4CB0  
             _TFT_DrawPixel 481A         _TFT_WriteString$914 002D                    memcpy@d1 0001  
                  memcpy@s1 0003            _Rcmd2green160x80 7CC1             ?_TFT_FillScreen 0019  
                 sprintf@ap 0049                   strcpy@src 0003             _TFT_WriteString 54A4  
               efgtoa@nmode 006A                _TFT_FillRect 5212           ??_TFT_ST7735_Init 000D  
               ??_vfpfcnvrt 0039              ?_TFT_DrawVLine 0008              ?_TFT_DrawPixel 0008  
                  sprintf@f 004A                    sprintf@s 008C                 _SSPCON1bits 0FC6  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
           _SPI_Init_Master 4A2C               ??_DisplayInit 0008                 _textbgcolor 00BC  
